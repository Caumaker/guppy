(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.Guppy = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
(function (global){
(function(e){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=e()}else if(typeof define==="function"&&define.amd){define([],e)}else{var t;if(typeof window!=="undefined"){t=window}else if(typeof global!=="undefined"){t=global}else if(typeof self!=="undefined"){t=self}else{t=this}t.katex=e()}})(function(){var e,t,r;return function a(e,t,r){function i(s,l){if(!t[s]){if(!e[s]){var o=typeof require=="function"&&require;if(!l&&o)return o(s,!0);if(n)return n(s,!0);var u=new Error("Cannot find module '"+s+"'");throw u.code="MODULE_NOT_FOUND",u}var p=t[s]={exports:{}};e[s][0].call(p.exports,function(t){var r=e[s][1][t];return i(r?r:t)},p,p.exports,a,e,t,r)}return t[s].exports}var n=typeof require=="function"&&require;for(var s=0;s<r.length;s++)i(r[s]);return i}({1:[function(e,t,r){var a=e("./src/ParseError");var i=e("./src/Settings");var n=e("./src/buildTree");var s=e("./src/parseTree");var l=e("./src/utils");var o=function(e,t,r){l.clearNode(t);var a=new i(r);var o=s(e,a);var u=n(o,e,a).toNode();t.appendChild(u)};if(typeof document!=="undefined"){if(document.compatMode!=="CSS1Compat"){typeof console!=="undefined"&&console.warn("Warning: KaTeX doesn't work in quirks mode. Make sure your "+"website has a suitable doctype.");o=function(){throw new a("KaTeX doesn't work in quirks mode.")}}}var u=function(e,t){var r=new i(t);var a=s(e,r);return n(a,e,r).toMarkup()};var p=function(e,t){var r=new i(t);return s(e,r)};t.exports={render:o,renderToString:u,__parse:p,ParseError:a}},{"./src/ParseError":6,"./src/Settings":8,"./src/buildTree":13,"./src/parseTree":22,"./src/utils":25}],2:[function(e,t,r){"use strict";function a(e){if(!e.__matchAtRelocatable){var t=e.source+"|()";var r="g"+(e.ignoreCase?"i":"")+(e.multiline?"m":"")+(e.unicode?"u":"");e.__matchAtRelocatable=new RegExp(t,r)}return e.__matchAtRelocatable}function i(e,t,r){if(e.global||e.sticky){throw new Error("matchAt(...): Only non-global regexes are supported")}var i=a(e);i.lastIndex=r;var n=i.exec(t);if(n[n.length-1]==null){n.length=n.length-1;return n}else{return null}}t.exports=i},{}],3:[function(e,t,r){var a=e("match-at");var i=e("./ParseError");function n(e){this.input=e;this.pos=0}function s(e,t,r,a){this.text=e;this.start=t;this.end=r;this.lexer=a}s.prototype.range=function(e,t){if(e.lexer!==this.lexer){return new s(t)}return new s(t,this.start,e.end,this.lexer)};var l=new RegExp("([ \r\n	]+)|"+"([!-\\[\\]-\u2027\u202a-\ud7ff\uf900-\uffff]"+"|[\ud800-\udbff][\udc00-\udfff]"+"|\\\\(?:[a-zA-Z]+|[^\ud800-\udfff])"+")");n.prototype.lex=function(){var e=this.input;var t=this.pos;if(t===e.length){return new s("EOF",t,t,this)}var r=a(l,e,t);if(r===null){throw new i("Unexpected character: '"+e[t]+"'",new s(e[t],t,t+1,this))}var n=r[2]||" ";var o=this.pos;this.pos+=r[0].length;var u=this.pos;return new s(n,o,u,this)};t.exports=n},{"./ParseError":6,"match-at":2}],4:[function(e,t,r){var a=e("./Lexer");function i(e,t){this.lexer=new a(e);this.macros=t;this.stack=[];this.discardedWhiteSpace=[]}i.prototype.nextToken=function(){for(;;){if(this.stack.length===0){this.stack.push(this.lexer.lex())}var e=this.stack.pop();var t=e.text;if(!(t.charAt(0)==="\\"&&this.macros.hasOwnProperty(t))){return e}var r=this.macros[t];if(typeof r==="string"){var i=new a(r);r=[];var n=i.lex();while(n.text!=="EOF"){r.push(n);n=i.lex()}r.reverse();this.macros[t]=r}this.stack=this.stack.concat(r)}};i.prototype.get=function(e){this.discardedWhiteSpace=[];var t=this.nextToken();if(e){while(t.text===" "){this.discardedWhiteSpace.push(t);t=this.nextToken()}}return t};i.prototype.unget=function(e){this.stack.push(e);while(this.discardedWhiteSpace.length!==0){this.stack.push(this.discardedWhiteSpace.pop())}};t.exports=i},{"./Lexer":3}],5:[function(e,t,r){function a(e){this.style=e.style;this.color=e.color;this.size=e.size;this.phantom=e.phantom;this.font=e.font;if(e.parentStyle===undefined){this.parentStyle=e.style}else{this.parentStyle=e.parentStyle}if(e.parentSize===undefined){this.parentSize=e.size}else{this.parentSize=e.parentSize}}a.prototype.extend=function(e){var t={style:this.style,size:this.size,color:this.color,parentStyle:this.style,parentSize:this.size,phantom:this.phantom,font:this.font};for(var r in e){if(e.hasOwnProperty(r)){t[r]=e[r]}}return new a(t)};a.prototype.withStyle=function(e){return this.extend({style:e})};a.prototype.withSize=function(e){return this.extend({size:e})};a.prototype.withColor=function(e){return this.extend({color:e})};a.prototype.withPhantom=function(){return this.extend({phantom:true})};a.prototype.withFont=function(e){return this.extend({font:e})};a.prototype.reset=function(){return this.extend({})};var i={"katex-blue":"#6495ed","katex-orange":"#ffa500","katex-pink":"#ff00af","katex-red":"#df0030","katex-green":"#28ae7b","katex-gray":"gray","katex-purple":"#9d38bd","katex-blueA":"#ccfaff","katex-blueB":"#80f6ff","katex-blueC":"#63d9ea","katex-blueD":"#11accd","katex-blueE":"#0c7f99","katex-tealA":"#94fff5","katex-tealB":"#26edd5","katex-tealC":"#01d1c1","katex-tealD":"#01a995","katex-tealE":"#208170","katex-greenA":"#b6ffb0","katex-greenB":"#8af281","katex-greenC":"#74cf70","katex-greenD":"#1fab54","katex-greenE":"#0d923f","katex-goldA":"#ffd0a9","katex-goldB":"#ffbb71","katex-goldC":"#ff9c39","katex-goldD":"#e07d10","katex-goldE":"#a75a05","katex-redA":"#fca9a9","katex-redB":"#ff8482","katex-redC":"#f9685d","katex-redD":"#e84d39","katex-redE":"#bc2612","katex-maroonA":"#ffbde0","katex-maroonB":"#ff92c6","katex-maroonC":"#ed5fa6","katex-maroonD":"#ca337c","katex-maroonE":"#9e034e","katex-purpleA":"#ddd7ff","katex-purpleB":"#c6b9fc","katex-purpleC":"#aa87ff","katex-purpleD":"#7854ab","katex-purpleE":"#543b78","katex-mintA":"#f5f9e8","katex-mintB":"#edf2df","katex-mintC":"#e0e5cc","katex-grayA":"#f6f7f7","katex-grayB":"#f0f1f2","katex-grayC":"#e3e5e6","katex-grayD":"#d6d8da","katex-grayE":"#babec2","katex-grayF":"#888d93","katex-grayG":"#626569","katex-grayH":"#3b3e40","katex-grayI":"#21242c","katex-kaBlue":"#314453","katex-kaGreen":"#71B307"};a.prototype.getColor=function(){if(this.phantom){return"transparent"}else{return i[this.color]||this.color}};t.exports=a},{}],6:[function(e,t,r){function a(e,t){var r="KaTeX parse error: "+e;var i;var n;if(t&&t.lexer&&t.start<=t.end){var s=t.lexer.input;i=t.start;n=t.end;if(i===s.length){r+=" at end of input: "}else{r+=" at position "+(i+1)+": "}var l=s.slice(i,n).replace(/[^]/g,"$&\u0332");var o;if(i>15){o="\u2026"+s.slice(i-15,i)}else{o=s.slice(0,i)}var u;if(n+15<s.length){u=s.slice(n,n+15)+"\u2026"}else{u=s.slice(n)}r+=o+l+u}var p=new Error(r);p.name="ParseError";p.__proto__=a.prototype;p.position=i;return p}a.prototype.__proto__=Error.prototype;t.exports=a},{}],7:[function(e,t,r){var a=e("./functions");var i=e("./environments");var n=e("./MacroExpander");var s=e("./symbols");var l=e("./utils");var o=e("./unicodeRegexes").cjkRegex;var u=e("./parseData");var p=e("./ParseError");function h(e,t){this.gullet=new n(e,t.macros);this.settings=t}var c=u.ParseNode;function v(e,t,r){this.result=e;this.isFunction=t;this.token=r}h.prototype.expect=function(e,t){if(this.nextToken.text!==e){throw new p("Expected '"+e+"', got '"+this.nextToken.text+"'",this.nextToken)}if(t!==false){this.consume()}};h.prototype.consume=function(){this.nextToken=this.gullet.get(this.mode==="math")};h.prototype.switchMode=function(e){this.gullet.unget(this.nextToken);this.mode=e;this.consume()};h.prototype.parse=function(){this.mode="math";this.consume();var e=this.parseInput();return e};h.prototype.parseInput=function(){var e=this.parseExpression(false);this.expect("EOF",false);return e};var f=["}","\\end","\\right","&","\\\\","\\cr"];h.prototype.parseExpression=function(e,t){var r=[];while(true){var i=this.nextToken;if(f.indexOf(i.text)!==-1){break}if(t&&i.text===t){break}if(e&&a[i.text]&&a[i.text].infix){break}var n=this.parseAtom();if(!n){if(!this.settings.throwOnError&&i.text[0]==="\\"){var s=this.handleUnsupportedCmd();r.push(s);continue}break}r.push(n)}return this.handleInfixNodes(r)};h.prototype.handleInfixNodes=function(e){var t=-1;var r;for(var a=0;a<e.length;a++){var i=e[a];if(i.type==="infix"){if(t!==-1){throw new p("only one infix operator per group",i.value.token)}t=a;r=i.value.replaceWith}}if(t!==-1){var n;var s;var l=e.slice(0,t);var o=e.slice(t+1);if(l.length===1&&l[0].type==="ordgroup"){n=l[0]}else{n=new c("ordgroup",l,this.mode)}if(o.length===1&&o[0].type==="ordgroup"){s=o[0]}else{s=new c("ordgroup",o,this.mode)}var u=this.callFunction(r,[n,s],null);return[new c(u.type,u,this.mode)]}else{return e}};var m=1;h.prototype.handleSupSubscript=function(e){var t=this.nextToken;var r=t.text;this.consume();var i=this.parseGroup();if(!i){if(!this.settings.throwOnError&&this.nextToken.text[0]==="\\"){return this.handleUnsupportedCmd()}else{throw new p("Expected group after '"+r+"'",t)}}else if(i.isFunction){var n=a[i.result].greediness;if(n>m){return this.parseFunction(i)}else{throw new p("Got function '"+i.result+"' with no arguments "+"as "+e,t)}}else{return i.result}};h.prototype.handleUnsupportedCmd=function(){var e=this.nextToken.text;var t=[];for(var r=0;r<e.length;r++){t.push(new c("textord",e[r],"text"))}var a=new c("text",{body:t,type:"text"},this.mode);var i=new c("color",{color:this.settings.errorColor,value:[a],type:"color"},this.mode);this.consume();return i};h.prototype.parseAtom=function(){var e=this.parseImplicitGroup();if(this.mode==="text"){return e}var t;var r;while(true){var a=this.nextToken;if(a.text==="\\limits"||a.text==="\\nolimits"){if(!e||e.type!=="op"){throw new p("Limit controls must follow a math operator",a)}else{var i=a.text==="\\limits";e.value.limits=i;e.value.alwaysHandleSupSub=true}this.consume()}else if(a.text==="^"){if(t){throw new p("Double superscript",a)}t=this.handleSupSubscript("superscript")}else if(a.text==="_"){if(r){throw new p("Double subscript",a)}r=this.handleSupSubscript("subscript")}else if(a.text==="'"){var n=new c("textord","\\prime",this.mode);var s=[n];this.consume();while(this.nextToken.text==="'"){s.push(n);this.consume()}t=new c("ordgroup",s,this.mode)}else{break}}if(t||r){return new c("supsub",{base:e,sup:t,sub:r},this.mode)}else{return e}};var d=["\\tiny","\\scriptsize","\\footnotesize","\\small","\\normalsize","\\large","\\Large","\\LARGE","\\huge","\\Huge"];var g=["\\displaystyle","\\textstyle","\\scriptstyle","\\scriptscriptstyle"];h.prototype.parseImplicitGroup=function(){var e=this.parseSymbol();if(e==null){return this.parseFunction()}var t=e.result;var r;if(t==="\\left"){var a=this.parseFunction(e);r=this.parseExpression(false);this.expect("\\right",false);var n=this.parseFunction();return new c("leftright",{body:r,left:a.value.value,right:n.value.value},this.mode)}else if(t==="\\begin"){var s=this.parseFunction(e);var o=s.value.name;if(!i.hasOwnProperty(o)){throw new p("No such environment: "+o,s.value.nameGroup)}var u=i[o];var h=this.parseArguments("\\begin{"+o+"}",u);var v={mode:this.mode,envName:o,parser:this,positions:h.pop()};var f=u.handler(v,h);this.expect("\\end",false);var m=this.nextToken;var y=this.parseFunction();if(y.value.name!==o){throw new p("Mismatch: \\begin{"+o+"} matched "+"by \\end{"+y.value.name+"}",m)}f.position=y.position;return f}else if(l.contains(d,t)){r=this.parseExpression(false);return new c("sizing",{size:"size"+(l.indexOf(d,t)+1),value:r},this.mode)}else if(l.contains(g,t)){r=this.parseExpression(true);return new c("styling",{style:t.slice(1,t.length-5),value:r},this.mode)}else{return this.parseFunction(e)}};h.prototype.parseFunction=function(e){if(!e){e=this.parseGroup()}if(e){if(e.isFunction){var t=e.result;var r=a[t];if(this.mode==="text"&&!r.allowedInText){throw new p("Can't use function '"+t+"' in text mode",e.token)}var i=this.parseArguments(t,r);var n=e.token;var s=this.callFunction(t,i,i.pop(),n);return new c(s.type,s,this.mode)}else{return e.result}}else{return null}};h.prototype.callFunction=function(e,t,r,i){var n={funcName:e,parser:this,positions:r,token:i};return a[e].handler(n,t)};h.prototype.parseArguments=function(e,t){var r=t.numArgs+t.numOptionalArgs;if(r===0){return[[this.pos]]}var i=t.greediness;var n=[this.pos];var s=[];for(var l=0;l<r;l++){var o=this.nextToken;var u=t.argTypes&&t.argTypes[l];var h;if(l<t.numOptionalArgs){if(u){h=this.parseGroupOfType(u,true)}else{h=this.parseGroup(true)}if(!h){s.push(null);n.push(this.pos);continue}}else{if(u){h=this.parseGroupOfType(u)}else{h=this.parseGroup()}if(!h){if(!this.settings.throwOnError&&this.nextToken.text[0]==="\\"){h=new v(this.handleUnsupportedCmd(this.nextToken.text),false)}else{throw new p("Expected group after '"+e+"'",o)}}}var c;if(h.isFunction){var f=a[h.result].greediness;if(f>i){c=this.parseFunction(h)}else{throw new p("Got function '"+h.result+"' as "+"argument to '"+e+"'",o)}}else{c=h.result}s.push(c);n.push(this.pos)}s.push(n);return s};h.prototype.parseGroupOfType=function(e,t){var r=this.mode;if(e==="original"){e=r}if(e==="color"){return this.parseColorGroup(t)}if(e==="size"){return this.parseSizeGroup(t)}if(e==="string"){var a=this.parseStringGroup("string",t);return new v(a.text,false)}this.switchMode(e);if(e==="text"){while(this.nextToken.text===" "){this.consume()}}var i=this.parseGroup(t);this.switchMode(r);return i};h.prototype.parseStringGroup=function(e,t){if(t&&this.nextToken.text!=="["){return null}var r=this.mode;this.mode="text";this.expect(t?"[":"{");var a="";var i=this.nextToken;var n=i;while(this.nextToken.text!==(t?"]":"}")){if(this.nextToken.text==="EOF"){throw new p("Unexpected end of input in "+e,i.range(this.nextToken,a))}n=this.nextToken;a+=n.text;this.consume()}this.mode=r;this.expect(t?"]":"}");return i.range(n,a)};h.prototype.parseColorGroup=function(e){var t=this.parseStringGroup("color",e);if(!t){return null}var r=/^(#[a-z0-9]+|[a-z]+)$/i.exec(t.text);if(!r){throw new p("Invalid color: '"+t.text+"'",t)}return new v(new c("color",r[0],this.mode),false)};h.prototype.parseSizeGroup=function(e){var t=this.parseStringGroup("size",e);if(!t){return null}var r=/(-?) *(\d+(?:\.\d*)?|\.\d+) *([a-z]{2})/.exec(t.text);if(!r){throw new p("Invalid size: '"+t.text+"'",t)}var a={number:+(r[1]+r[2]),unit:r[3]};if(a.unit!=="em"&&a.unit!=="ex"){throw new p("Invalid unit: '"+a.unit+"'",t)}return new v(new c("color",a,this.mode),false)};h.prototype.parseGroup=function(e){var t=this.nextToken;if(this.nextToken.text===(e?"[":"{")){this.consume();var r=this.parseExpression(false,e?"]":null);var a=this.nextToken;this.expect(e?"]":"}");if(this.mode==="text"){this.formLigatures(r)}return new v(new c("ordgroup",r,this.mode,t,a),false)}else{return e?null:this.parseSymbol()}};h.prototype.formLigatures=function(e){var t;var r=e.length-1;for(t=0;t<r;++t){var a=e[t];var i=a.value;if(i==="-"&&e[t+1].value==="-"){if(t+1<r&&e[t+2].value==="-"){e.splice(t,3,new c("textord","---","text",a,e[t+2]));r-=2}else{e.splice(t,2,new c("textord","--","text",a,e[t+1]));r-=1}}if((i==="'"||i==="`")&&e[t+1].value===i){e.splice(t,2,new c("textord",i+i,"text",a,e[t+1]));r-=1}}};h.prototype.parseSymbol=function(){var e=this.nextToken;if(a[e.text]){this.consume();return new v(e.text,true,e)}else if(s[this.mode][e.text]){this.consume();return new v(new c(s[this.mode][e.text].group,e.text,this.mode,e),false,e)}else if(this.mode==="text"&&o.test(e.text)){this.consume();return new v(new c("textord",e.text,this.mode,e),false,e)}else{return null}};h.prototype.ParseNode=c;t.exports=h},{"./MacroExpander":4,"./ParseError":6,"./environments":16,"./functions":19,"./parseData":21,"./symbols":23,"./unicodeRegexes":24,"./utils":25}],8:[function(e,t,r){function a(e,t){return e===undefined?t:e}function i(e){e=e||{};this.displayMode=a(e.displayMode,false);this.throwOnError=a(e.throwOnError,true);this.errorColor=a(e.errorColor,"#cc0000");this.macros=e.macros||{}}t.exports=i},{}],9:[function(e,t,r){var a=e("./fontMetrics.js").sigmas;var i=[{},{},{}];var n;for(var s in a){if(a.hasOwnProperty(s)){for(n=0;n<3;n++){i[n][s]=a[s][n]}}}for(n=0;n<3;n++){i[n].emPerEx=a.xHeight[n]/a.quad[n]}function l(e,t,r,a){this.id=e;this.size=t;this.cramped=a;this.sizeMultiplier=r;this.metrics=i[t>0?t-1:0]}l.prototype.sup=function(){return y[x[this.id]]};l.prototype.sub=function(){return y[b[this.id]]};l.prototype.fracNum=function(){return y[w[this.id]]};l.prototype.fracDen=function(){return y[k[this.id]]};l.prototype.cramp=function(){return y[z[this.id]]};l.prototype.cls=function(){return d[this.size]+(this.cramped?" cramped":" uncramped")};l.prototype.reset=function(){return g[this.size]};l.prototype.isTight=function(){return this.size>=2};var o=0;var u=1;var p=2;var h=3;var c=4;var v=5;var f=6;var m=7;var d=["displaystyle textstyle","textstyle","scriptstyle","scriptscriptstyle"];var g=["reset-textstyle","reset-textstyle","reset-scriptstyle","reset-scriptscriptstyle"];var y=[new l(o,0,1,false),new l(u,0,1,true),new l(p,1,1,false),new l(h,1,1,true),new l(c,2,.7,false),new l(v,2,.7,true),new l(f,3,.5,false),new l(m,3,.5,true)];var x=[c,v,c,v,f,m,f,m];var b=[v,v,v,v,m,m,m,m];var w=[p,h,c,v,f,m,f,m];var k=[h,h,v,v,m,m,m,m];var z=[u,u,h,h,v,v,m,m];t.exports={DISPLAY:y[o],TEXT:y[p],SCRIPT:y[c],SCRIPTSCRIPT:y[f]}},{"./fontMetrics.js":17}],10:[function(e,t,r){var a=e("./domTree");var i=e("./fontMetrics");var n=e("./symbols");var s=e("./utils");var l=["\\Gamma","\\Delta","\\Theta","\\Lambda","\\Xi","\\Pi","\\Sigma","\\Upsilon","\\Phi","\\Psi","\\Omega"];var o=["\u0131","\u0237","\xa3"];var u=function(e,t,r,s,l){if(n[r][e]&&n[r][e].replace){e=n[r][e].replace}var o=i.getCharacterMetrics(e,t);var u;if(o){u=new a.symbolNode(e,o.height,o.depth,o.italic,o.skew,l)}else{typeof console!=="undefined"&&console.warn("No character metrics for '"+e+"' in style '"+t+"'");u=new a.symbolNode(e,0,0,0,0,l)}if(s){if(s.style.isTight()){u.classes.push("mtight")}if(s.getColor()){u.style.color=s.getColor()}}return u};var p=function(e,t,r,a){if(e==="\\"||n[t][e].font==="main"){return u(e,"Main-Regular",t,r,a)}else{return u(e,"AMS-Regular",t,r,a.concat(["amsrm"]))}};var h=function(e,t,r,a,i){if(i==="mathord"){return c(e,t,r,a)}else if(i==="textord"){return u(e,"Main-Regular",t,r,a.concat(["mathrm"]))}else{throw new Error("unexpected type: "+i+" in mathDefault")}};var c=function(e,t,r,a){if(/[0-9]/.test(e.charAt(0))||s.contains(o,e)||s.contains(l,e)){return u(e,"Main-Italic",t,r,a.concat(["mainit"]))}else{return u(e,"Math-Italic",t,r,a.concat(["mathit"]))}};var v=function(e,t,r){var a=e.mode;var l=e.value;if(n[a][l]&&n[a][l].replace){l=n[a][l].replace}var p=["mord"];var v=t.font;if(v){if(v==="mathit"||s.contains(o,l)){return c(l,a,t,p)}else{var f=k[v].fontName;if(i.getCharacterMetrics(l,f)){return u(l,f,a,t,p.concat([v]))}else{return h(l,a,t,p,r)}}}else{return h(l,a,t,p,r)}};var f=function(e){var t=0;var r=0;var a=0;if(e.children){for(var i=0;i<e.children.length;i++){if(e.children[i].height>t){t=e.children[i].height}if(e.children[i].depth>r){r=e.children[i].depth}if(e.children[i].maxFontSize>a){a=e.children[i].maxFontSize}}}e.height=t;e.depth=r;e.maxFontSize=a};var m=function(e,t,r){var i=new a.span(e,t,r);f(i);return i};var d=function(e,t){e.children=t.concat(e.children);f(e)};var g=function(e,t){var r=new a.documentFragment(e,t);f(r);return r};var y=function(e,t){var r=m([],[new a.symbolNode("\u200b")]);r.style.fontSize=t/e.style.sizeMultiplier+"em";var i=m(["fontsize-ensurer","reset-"+e.size,"size5"],[r]);return i};var x=function(e,t,r,i){var n;var s;var l;if(t==="individualShift"){var o=e;e=[o[0]];n=-o[0].shift-o[0].elem.depth;s=n;for(l=1;l<o.length;l++){var u=-o[l].shift-s-o[l].elem.depth;var p=u-(o[l-1].elem.height+o[l-1].elem.depth);s=s+u;e.push({type:"kern",size:p});e.push(o[l])}}else if(t==="top"){var h=r;for(l=0;l<e.length;l++){if(e[l].type==="kern"){h-=e[l].size}else{h-=e[l].elem.height+e[l].elem.depth}}n=h}else if(t==="bottom"){n=-r}else if(t==="shift"){n=-e[0].elem.depth-r}else if(t==="firstBaseline"){n=-e[0].elem.depth}else{n=0}var c=0;for(l=0;l<e.length;l++){if(e[l].type==="elem"){c=Math.max(c,e[l].elem.maxFontSize)}}var v=y(i,c);var f=[];s=n;for(l=0;l<e.length;l++){if(e[l].type==="kern"){s+=e[l].size}else{var d=e[l].elem;var g=-d.depth-s;s+=d.height+d.depth;var x=m([],[v,d]);x.height-=g;x.depth+=g;x.style.top=g+"em";f.push(x)}}var b=m(["baseline-fix"],[v,new a.symbolNode("\u200b")]);f.push(b);var w=m(["vlist"],f);w.height=Math.max(s,w.height);w.depth=Math.max(-n,w.depth);return w};var b={size1:.5,size2:.7,size3:.8,size4:.9,size5:1,size6:1.2,size7:1.44,size8:1.73,size9:2.07,size10:2.49};var w={"\\qquad":{size:"2em",className:"qquad"},"\\quad":{size:"1em",className:"quad"},"\\enspace":{size:"0.5em",className:"enspace"},"\\;":{size:"0.277778em",className:"thickspace"},"\\:":{size:"0.22222em",className:"mediumspace"},"\\,":{size:"0.16667em",className:"thinspace"},"\\!":{size:"-0.16667em",className:"negativethinspace"}};var k={mathbf:{variant:"bold",fontName:"Main-Bold"},mathrm:{variant:"normal",fontName:"Main-Regular"},mathbb:{variant:"double-struck",fontName:"AMS-Regular"},mathcal:{variant:"script",fontName:"Caligraphic-Regular"},mathfrak:{variant:"fraktur",fontName:"Fraktur-Regular"},mathscr:{variant:"script",fontName:"Script-Regular"},mathsf:{variant:"sans-serif",fontName:"SansSerif-Regular"},mathtt:{variant:"monospace",fontName:"Typewriter-Regular"}};t.exports={fontMap:k,makeSymbol:u,mathsym:p,makeSpan:m,makeFragment:g,makeVList:x,makeOrd:v,prependChildren:d,sizingMultiplier:b,spacingFunctions:w}},{"./domTree":15,"./fontMetrics":17,"./symbols":23,"./utils":25}],11:[function(e,t,r){var a=e("./ParseError");var i=e("./Style");var n=e("./buildCommon");var s=e("./delimiter");var l=e("./domTree");var o=e("./fontMetrics");var u=e("./utils");var p=n.makeSpan;var h=function(e){return e instanceof l.span&&e.classes[0]==="mspace"};var c=function(e,t,r){var a=[];for(var i=0;i<e.length;i++){var s=e[i];var o=b(s,t,r);if(o instanceof l.documentFragment){Array.prototype.push.apply(a,o.children)}else{a.push(o)}if(!h(o)){r=s}}var u=null;for(i=0;i<a.length;i++){if(h(a[i])){u=u||[];u.push(a[i]);a.splice(i,1);i--}else if(u){if(a[i]instanceof l.symbolNode){a[i]=p(a[i].classes,[a[i]])}n.prependChildren(a[i],u);u=null}}if(u){Array.prototype.push.apply(a,u)}return a};var v={mathord:"mord",textord:"mord",bin:"mbin",rel:"mrel",text:"mord",open:"mopen",close:"mclose",inner:"minner",genfrac:"mord",array:"mord",spacing:"mord",punct:"mpunct",ordgroup:"mord",op:"mop",katex:"mord",overline:"mord",underline:"mord",rule:"mord",cursor:"cursor",leftright:"minner",sqrt:"mord",accent:"mord"};var f=function(e){if(e==null){return v.mathord}else if(e.type==="supsub"){return f(e.value.base)}else if(e.type==="llap"||e.type==="rlap"){return f(e.value)}else if(e.type==="color"||e.type==="sizing"||e.type==="styling"){var t=e.value.value;return f(t[t.length-1])}else if(e.type==="font"){return f(e.value.body)}else if(e.type==="delimsizing"){return v[e.value.delimType]}else{return v[e.type]}};var m=function(e,t){if(!e){return false}else if(e.type==="op"){return e.value.limits&&(t.style.size===i.DISPLAY.size||e.value.alwaysHandleSupSub)}else if(e.type==="accent"){return g(e.value.base)}else{return null}};var d=function(e){if(!e){return false}else if(e.type==="ordgroup"){if(e.value.length===1){return d(e.value[0])}else{return e}}else if(e.type==="color"){if(e.value.value.length===1){return d(e.value.value[0])}else{return e}}else if(e.type==="font"){return d(e.value.body)}else{return e}};var g=function(e){var t=d(e);return t.type==="mathord"||t.type==="textord"||t.type==="bin"||t.type==="rel"||t.type==="inner"||t.type==="open"||t.type==="close"||t.type==="punct"};var y=function(e){return p(["sizing","reset-"+e.size,"size5",e.style.reset(),i.TEXT.cls(),"nulldelimiter"])};var x={};x.mathord=function(e,t,r){return n.makeOrd(e,t,"mathord")};x.textord=function(e,t,r){return n.makeOrd(e,t,"textord")};x.bin=function(e,t,r){var a="mbin";var i=r;while(i&&i.type==="color"){var s=i.value.value;i=s[s.length-1]}if(i&&i.type==="cursor"){i=i.value.previous}if(!i||u.contains(["mbin","mopen","mrel","mop","mpunct"],f(i))){e.type="textord";a="mord"}return n.mathsym(e.value,e.mode,t,[a])};x.rel=function(e,t,r){return n.mathsym(e.value,e.mode,t,["mrel"])};x.open=function(e,t,r){return n.mathsym(e.value,e.mode,t,["mopen"])};x.close=function(e,t,r){return n.mathsym(e.value,e.mode,t,["mclose"])};x.inner=function(e,t,r){return n.mathsym(e.value,e.mode,t,["minner"])};x.punct=function(e,t,r){return n.mathsym(e.value,e.mode,t,["mpunct"])};x.ordgroup=function(e,t,r){return p(["mord",t.style.cls()],c(e.value,t.reset()),t)};x.text=function(e,t,r){return p(["mord","text",t.style.cls()],c(e.value.body,t.reset()),t)};x.xmlClass=function(e,t,r){var a=c(e.value.value,t.reset(),r);return new n.makeFragment(a,[e.value.cl])};x.color=function(e,t,r){var a=c(e.value.value,t.withColor(e.value.color),r);return new n.makeFragment(a)};x.supsub=function(e,t,r){if(m(e.value.base,t)){return x[e.value.base.type](e,t,r)}var a=b(e.value.base,t.reset());var s;var u;var h;var c;var v=t.style;var d;if(e.value.sup){d=t.withStyle(v.sup());h=b(e.value.sup,d);s=p([v.reset(),v.sup().cls()],[h],d)}if(e.value.sub){d=t.withStyle(v.sub());c=b(e.value.sub,d);u=p([v.reset(),v.sub().cls()],[c],d)}var y;var w;if(g(e.value.base)){y=0;w=0}else{y=a.height-v.metrics.supDrop;w=a.depth+v.metrics.subDrop}var k;if(v===i.DISPLAY){k=v.metrics.sup1}else if(v.cramped){k=v.metrics.sup3}else{k=v.metrics.sup2}var z=i.TEXT.sizeMultiplier*v.sizeMultiplier;var S=.5/o.metrics.ptPerEm/z+"em";var M;if(!e.value.sup){w=Math.max(w,v.metrics.sub1,c.height-.8*v.metrics.xHeight);M=n.makeVList([{type:"elem",elem:u}],"shift",w,t);M.children[0].style.marginRight=S;if(a instanceof l.symbolNode){M.children[0].style.marginLeft=-a.italic+"em"}}else if(!e.value.sub){y=Math.max(y,k,h.depth+.25*v.metrics.xHeight);M=n.makeVList([{type:"elem",elem:s}],"shift",-y,t);M.children[0].style.marginRight=S}else{y=Math.max(y,k,h.depth+.25*v.metrics.xHeight);w=Math.max(w,v.metrics.sub2);var T=o.metrics.defaultRuleThickness;if(y-h.depth-(c.height-w)<4*T){w=4*T-(y-h.depth)+c.height;var A=.8*v.metrics.xHeight-(y-h.depth);if(A>0){y+=A;w-=A}}M=n.makeVList([{type:"elem",elem:u,shift:w},{type:"elem",elem:s,shift:-y}],"individualShift",null,t);if(a instanceof l.symbolNode){M.children[0].style.marginLeft=-a.italic+"em"}M.children[0].style.marginRight=S;M.children[1].style.marginRight=S}return p([f(e.value.base)],[a,p(["msupsub"],[M])],t)};x.genfrac=function(e,t,r){var a=t.style;if(e.value.size==="display"){a=i.DISPLAY}else if(e.value.size==="text"){a=i.TEXT}var l=a.fracNum();var u=a.fracDen();var h;h=t.withStyle(l);var c=b(e.value.numer,h);var v=p([a.reset(),l.cls()],[c],h);h=t.withStyle(u);var f=b(e.value.denom,h);var m=p([a.reset(),u.cls()],[f],h);var d;if(e.value.hasBarLine){d=o.metrics.defaultRuleThickness/t.style.sizeMultiplier}else{d=0}var g;var x;var w;if(a.size===i.DISPLAY.size){g=a.metrics.num1;if(d>0){x=3*d}else{x=7*o.metrics.defaultRuleThickness}w=a.metrics.denom1}else{if(d>0){g=a.metrics.num2;x=d}else{g=a.metrics.num3;x=3*o.metrics.defaultRuleThickness}w=a.metrics.denom2}var k;if(d===0){var z=g-c.depth-(f.height-w);if(z<x){g+=.5*(x-z);w+=.5*(x-z)}k=n.makeVList([{type:"elem",elem:m,shift:w},{type:"elem",elem:v,shift:-g}],"individualShift",null,t)}else{var S=a.metrics.axisHeight;if(g-c.depth-(S+.5*d)<x){g+=x-(g-c.depth-(S+.5*d))}if(S-.5*d-(f.height-w)<x){w+=x-(S-.5*d-(f.height-w))}var M=p([t.style.reset(),i.TEXT.cls(),"frac-line"]);M.height=d;var T=-(S-.5*d);k=n.makeVList([{type:"elem",elem:m,shift:w},{type:"elem",elem:M,shift:T},{type:"elem",elem:v,shift:-g}],"individualShift",null,t)}k.height*=a.sizeMultiplier/t.style.sizeMultiplier;k.depth*=a.sizeMultiplier/t.style.sizeMultiplier;var A;if(a.size===i.DISPLAY.size){A=a.metrics.delim1}else{A=a.metrics.delim2}var N;var q;if(e.value.leftDelim==null){N=y(t)}else{N=s.customSizedDelim(e.value.leftDelim,A,true,t.withStyle(a),e.mode)}if(e.value.rightDelim==null){q=y(t)}else{q=s.customSizedDelim(e.value.rightDelim,A,true,t.withStyle(a),e.mode)}return p(["mord",t.style.reset(),a.cls()],[N,p(["mfrac"],[k]),q],t)};x.array=function(e,t,r){var i;var s;var l=e.value.body.length;var h=0;var c=new Array(l);var v=t.style;var f=1/o.metrics.ptPerEm;var m=5*f;var d=12*f;var g=u.deflt(e.value.arraystretch,1);var y=g*d;var x=.7*y;var w=.3*y;var k=0;for(i=0;i<e.value.body.length;++i){var z=e.value.body[i];var S=x;var M=w;if(h<z.length){h=z.length}var T=new Array(z.length);for(s=0;s<z.length;++s){var A=b(z[s],t);if(M<A.depth){M=A.depth}if(S<A.height){S=A.height}T[s]=A}var N=0;if(e.value.rowGaps[i]){N=e.value.rowGaps[i].value;switch(N.unit){case"em":N=N.number;break;case"ex":N=N.number*v.metrics.emPerEx;break;default:console.error("Can't handle unit "+N.unit);N=0}if(N>0){N+=w;if(M<N){M=N}N=0}}T.height=S;T.depth=M;k+=S;T.pos=k;k+=M+N;c[i]=T}var q=k/2+v.metrics.axisHeight;var R=e.value.cols||[];var C=[];var E;var O;for(s=0,O=0;s<h||O<R.length;++s,++O){var P=R[O]||{};var D=true;while(P.type==="separator"){if(!D){E=p(["arraycolsep"],[]);E.style.width=o.metrics.doubleRuleSep+"em";C.push(E)}if(P.separator==="|"){var L=p(["vertical-separator"],[]);L.style.height=k+"em";L.style.verticalAlign=-(k-q)+"em";C.push(L)}else{throw new a("Invalid separator type: "+P.separator)}O++;P=R[O]||{};D=false}if(s>=h){continue}var B;if(s>0||e.value.hskipBeforeAndAfter){B=u.deflt(P.pregap,m);if(B!==0){E=p(["arraycolsep"],[]);E.style.width=B+"em";C.push(E)}}var F=[];for(i=0;i<l;++i){var I=c[i];var G=I[s];if(!G){continue}var V=I.pos-q;G.depth=I.depth;G.height=I.height;F.push({type:"elem",elem:G,shift:V})}F=n.makeVList(F,"individualShift",null,t);F=p(["col-align-"+(P.align||"c")],[F]);C.push(F);if(s<h-1||e.value.hskipBeforeAndAfter){B=u.deflt(P.postgap,m);if(B!==0){E=p(["arraycolsep"],[]);E.style.width=B+"em";C.push(E)}}}c=p(["mtable"],C);return p(["mord"],[c],t)};x.spacing=function(e,t,r){if(e.value==="\\ "||e.value==="\\space"||e.value===" "||e.value==="~"){return p(["mspace"],[n.mathsym(e.value,e.mode)])}else{return p(["mspace",n.spacingFunctions[e.value].className])}};x.llap=function(e,t,r){var a=p(["inner"],[b(e.value.body,t.reset())]);var i=p(["fix"],[]);return p(["llap",t.style.cls()],[a,i],t)};x.rlap=function(e,t,r){var a=p(["inner"],[b(e.value.body,t.reset())]);var i=p(["fix"],[]);return p(["rlap",t.style.cls()],[a,i],t)};x.op=function(e,t,r){var a;var s;var l=false;if(e.type==="supsub"){a=e.value.sup;s=e.value.sub;e=e.value.base;l=true}var h=t.style;var c=["\\smallint"];var v=false;if(h.size===i.DISPLAY.size&&e.value.symbol&&!u.contains(c,e.value.body)){v=true}var f;var m=0;var d=0;if(e.value.symbol){var g=v?"Size2-Regular":"Size1-Regular";f=n.makeSymbol(e.value.body,g,"math",t,["mop","op-symbol",v?"large-op":"small-op"]);m=(f.height-f.depth)/2-h.metrics.axisHeight*h.sizeMultiplier;d=f.italic}else{var y=[];for(var x=1;x<e.value.body.length;x++){y.push(n.mathsym(e.value.body[x],e.mode))}f=p(["mop"],y,t)}if(l){f=p([],[f]);var w;var k;var z;var S;var M;if(a){M=t.withStyle(h.sup());var T=b(a,M);w=p([h.reset(),h.sup().cls()],[T],M);k=Math.max(o.metrics.bigOpSpacing1,o.metrics.bigOpSpacing3-T.depth)}if(s){M=t.withStyle(h.sub());var A=b(s,M);z=p([h.reset(),h.sub().cls()],[A],M);S=Math.max(o.metrics.bigOpSpacing2,o.metrics.bigOpSpacing4-A.height)}var N;var q;var R;if(!a){q=f.height-m;N=n.makeVList([{type:"kern",size:o.metrics.bigOpSpacing5},{type:"elem",elem:z},{type:"kern",size:S},{type:"elem",elem:f}],"top",q,t);N.children[0].style.marginLeft=-d+"em"}else if(!s){R=f.depth+m;N=n.makeVList([{type:"elem",elem:f},{type:"kern",size:k},{type:"elem",elem:w},{type:"kern",size:o.metrics.bigOpSpacing5}],"bottom",R,t);N.children[1].style.marginLeft=d+"em"}else if(!a&&!s){return f}else{R=o.metrics.bigOpSpacing5+z.height+z.depth+S+f.depth+m;N=n.makeVList([{type:"kern",size:o.metrics.bigOpSpacing5},{type:"elem",elem:z},{type:"kern",size:S},{type:"elem",elem:f},{type:"kern",size:k},{type:"elem",elem:w},{type:"kern",size:o.metrics.bigOpSpacing5}],"bottom",R,t);N.children[0].style.marginLeft=-d+"em";N.children[2].style.marginLeft=d+"em"}return p(["mop","op-limits"],[N],t)}else{if(e.value.symbol){
f.style.top=m+"em"}return f}};x.katex=function(e,t,r){var a=p(["k"],[n.mathsym("K",e.mode)],t);var i=p(["a"],[n.mathsym("A",e.mode)],t);i.height=(i.height+.2)*.75;i.depth=(i.height-.2)*.75;var s=p(["t"],[n.mathsym("T",e.mode)],t);var l=p(["e"],[n.mathsym("E",e.mode)],t);l.height=l.height-.2155;l.depth=l.depth+.2155;var o=p(["x"],[n.mathsym("X",e.mode)],t);return p(["mord","katex-logo"],[a,i,s,l,o],t)};x.overline=function(e,t,r){var a=t.style;var s=b(e.value.body,t.withStyle(a.cramp()));var l=o.metrics.defaultRuleThickness/a.sizeMultiplier;var u=p([a.reset(),i.TEXT.cls(),"overline-line"]);u.height=l;u.maxFontSize=1;var h=n.makeVList([{type:"elem",elem:s},{type:"kern",size:3*l},{type:"elem",elem:u},{type:"kern",size:l}],"firstBaseline",null,t);return p(["mord","overline"],[h],t)};x.underline=function(e,t,r){var a=t.style;var s=b(e.value.body,t);var l=o.metrics.defaultRuleThickness/a.sizeMultiplier;var u=p([a.reset(),i.TEXT.cls(),"underline-line"]);u.height=l;u.maxFontSize=1;var h=n.makeVList([{type:"kern",size:l},{type:"elem",elem:u},{type:"kern",size:3*l},{type:"elem",elem:s}],"top",s.height,t);return p(["mord","underline"],[h],t)};x.sqrt=function(e,t,r){var a=t.style;var l=b(e.value.body,t.withStyle(a.cramp()));var u=o.metrics.defaultRuleThickness/a.sizeMultiplier;var h=p([a.reset(),i.TEXT.cls(),"sqrt-line"],[],t);h.height=u;h.maxFontSize=1;var c=u;if(a.id<i.TEXT.id){c=a.metrics.xHeight}var v=u+c/4;var f=(l.height+l.depth)*a.sizeMultiplier;var m=f+v+u;var d=p(["sqrt-sign"],[s.customSizedDelim("\\surd",m,false,t,e.mode)],t);var g=d.height+d.depth-u;if(g>l.height+l.depth+v){v=(v+g-l.height-l.depth)/2}var y=-(l.height+v+u)+d.height;d.style.top=y+"em";d.height-=y;d.depth+=y;var x;if(l.height===0&&l.depth===0){x=p()}else{x=n.makeVList([{type:"elem",elem:l},{type:"kern",size:v},{type:"elem",elem:h},{type:"kern",size:u}],"firstBaseline",null,t)}if(!e.value.index){return p(["mord","sqrt"],[d,x],t)}else{var w=t.withStyle(i.SCRIPTSCRIPT);var k=b(e.value.index,w);var z=p([a.reset(),i.SCRIPTSCRIPT.cls()],[k],w);var S=Math.max(d.height,x.height);var M=Math.max(d.depth,x.depth);var T=.6*(S-M);var A=n.makeVList([{type:"elem",elem:z}],"shift",-T,t);var N=p(["root"],[A]);return p(["mord","sqrt"],[N,d,x],t)}};x.sizing=function(e,t,r){var a=c(e.value.value,t.withSize(e.value.size),r);var i=t.style;var s=n.sizingMultiplier[e.value.size];s=s*i.sizeMultiplier;for(var l=0;l<a.length;l++){var o=u.indexOf(a[l].classes,"sizing");if(o<0){a[l].classes.push("sizing","reset-"+t.size,e.value.size,i.cls());a[l].maxFontSize=s}else if(a[l].classes[o+1]==="reset-"+e.value.size){a[l].classes[o+1]="reset-"+t.size}}return n.makeFragment(a)};x.styling=function(e,t,r){var a={display:i.DISPLAY,text:i.TEXT,script:i.SCRIPT,scriptscript:i.SCRIPTSCRIPT};var s=a[e.value.style];var l=t.withStyle(s);var o=c(e.value.value,l,r);for(var p=0;p<o.length;p++){var h=u.indexOf(o[p].classes,s.reset());if(h<0){o[p].classes.push(t.style.reset(),s.cls())}else{o[p].classes[h]=t.style.reset()}}return new n.makeFragment(o)};x.font=function(e,t,r){var a=e.value.font;return b(e.value.body,t.withFont(a),r)};x.delimsizing=function(e,t,r){var a=e.value.value;if(a==="."){return p([v[e.value.delimType]])}return p([v[e.value.delimType]],[s.sizedDelim(a,e.value.size,t,e.mode)],t)};x.leftright=function(e,t,r){var a=c(e.value.body,t.reset());var i=0;var n=0;for(var l=0;l<a.length;l++){i=Math.max(a[l].height,i);n=Math.max(a[l].depth,n)}var o=t.style;i*=o.sizeMultiplier;n*=o.sizeMultiplier;var u;if(e.value.left==="."){u=y(t)}else{u=s.leftRightDelim(e.value.left,i,n,t,e.mode)}a.unshift(u);var h;if(e.value.right==="."){h=y(t)}else{h=s.leftRightDelim(e.value.right,i,n,t,e.mode)}a.push(h);return p(["minner",o.cls()],a,t)};x.cursor=function(e,t,r){var a=p(["cursor"],[],t);var i=t.style;var n=0;if(e.value.shift){n=e.value.shift.number;if(e.value.shift.unit==="ex"){n*=i.metrics.xHeight}}var s=e.value.height.number;if(e.value.height.unit==="ex"){s*=i.metrics.xHeight}n/=t.style.sizeMultiplier;s/=t.style.sizeMultiplier;a.style.marginRight="-1px";a.style.borderRight="1px solid";a.style.marginBottom=n+"em";a.style.height=s+"em";a.width=1;a.height=s+n;a.depth=-n;e.value.previous=r;return a};x.rule=function(e,t,r){var a=p(["mord","rule"],[],t);var i=t.style;var n=0;if(e.value.shift){n=e.value.shift.number;if(e.value.shift.unit==="ex"){n*=i.metrics.xHeight}}var s=e.value.width.number;if(e.value.width.unit==="ex"){s*=i.metrics.xHeight}var l=e.value.height.number;if(e.value.height.unit==="ex"){l*=i.metrics.xHeight}n/=i.sizeMultiplier;s/=i.sizeMultiplier;l/=i.sizeMultiplier;a.style.borderRightWidth=s+"em";a.style.borderTopWidth=l+"em";a.style.bottom=n+"em";a.width=s;a.height=l+n;a.depth=-n;return a};x.kern=function(e,t,r){var a=p(["mord","rule"],[],t);var i=t.style;var n=0;if(e.value.dimension){n=e.value.dimension.number;if(e.value.dimension.unit==="ex"){n*=i.metrics.xHeight}}n/=i.sizeMultiplier;a.style.marginLeft=n+"em";return a};x.accent=function(e,t,r){var a=e.value.base;var i=t.style;var s;if(e.type==="supsub"){var l=e;e=l.value.base;a=e.value.base;l.value.base=a;s=b(l,t.reset(),r)}var o=b(a,t.withStyle(i.cramp()));var u;if(g(a)){var h=d(a);var c=b(h,t.withStyle(i.cramp()));u=c.skew}else{u=0}var v=Math.min(o.height,i.metrics.xHeight);var f=n.makeSymbol(e.value.accent,"Main-Regular","math",t);f.italic=0;var m=e.value.accent==="\\vec"?"accent-vec":null;var y=p(["accent-body",m],[p([],[f])]);y=n.makeVList([{type:"elem",elem:o},{type:"kern",size:-v},{type:"elem",elem:y}],"firstBaseline",null,t);y.children[1].style.marginLeft=2*u+"em";var x=p(["mord","accent"],[y],t);if(s){s.children[0]=x;s.height=Math.max(x.height,s.height);s.classes[0]="mord";return s}else{return x}};x.phantom=function(e,t,r){var a=c(e.value.value,t.withPhantom(),r);return new n.makeFragment(a)};var b=function(e,t,r){if(!e){return p()}if(x[e.type]){var i=x[e.type](e,t,r);var s;if(t.style!==t.parentStyle){s=t.style.sizeMultiplier/t.parentStyle.sizeMultiplier;i.height*=s;i.depth*=s}if(t.size!==t.parentSize){s=n.sizingMultiplier[t.size]/n.sizingMultiplier[t.parentSize];i.height*=s;i.depth*=s}return i}else{throw new a("Got group of unknown type: '"+e.type+"'")}};var w=function(e,t){e=JSON.parse(JSON.stringify(e));var r=c(e,t);var a=p(["base",t.style.cls()],r,t);var i=p(["strut"]);var n=p(["strut","bottom"]);i.style.height=a.height+"em";n.style.height=a.height+a.depth+"em";n.style.verticalAlign=-a.depth+"em";var s=p(["katex-html"],[i,n,a]);s.setAttribute("aria-hidden","true");return s};t.exports=w},{"./ParseError":6,"./Style":9,"./buildCommon":10,"./delimiter":14,"./domTree":15,"./fontMetrics":17,"./utils":25}],12:[function(e,t,r){var a=e("./buildCommon");var i=e("./fontMetrics");var n=e("./mathMLTree");var s=e("./ParseError");var l=e("./symbols");var o=e("./utils");var u=a.makeSpan;var p=a.fontMap;var h=function(e,t){if(l[t][e]&&l[t][e].replace){e=l[t][e].replace}return new n.TextNode(e)};var c=function(e,t){var r=t.font;if(!r){return null}var a=e.mode;if(r==="mathit"){return"italic"}var n=e.value;if(o.contains(["\\imath","\\jmath"],n)){return null}if(l[a][n]&&l[a][n].replace){n=l[a][n].replace}var s=p[r].fontName;if(i.getCharacterMetrics(n,s)){return p[t.font].variant}return null};var v={};v.mathord=function(e,t){var r=new n.MathNode("mi",[h(e.value,e.mode)]);var a=c(e,t);if(a){r.setAttribute("mathvariant",a)}return r};v.textord=function(e,t){var r=h(e.value,e.mode);var a=c(e,t)||"normal";var i;if(/[0-9]/.test(e.value)){i=new n.MathNode("mn",[r]);if(t.font){i.setAttribute("mathvariant",a)}}else{i=new n.MathNode("mi",[r]);i.setAttribute("mathvariant",a)}return i};v.bin=function(e){var t=new n.MathNode("mo",[h(e.value,e.mode)]);return t};v.rel=function(e){var t=new n.MathNode("mo",[h(e.value,e.mode)]);return t};v.open=function(e){var t=new n.MathNode("mo",[h(e.value,e.mode)]);return t};v.close=function(e){var t=new n.MathNode("mo",[h(e.value,e.mode)]);return t};v.inner=function(e){var t=new n.MathNode("mo",[h(e.value,e.mode)]);return t};v.punct=function(e){var t=new n.MathNode("mo",[h(e.value,e.mode)]);t.setAttribute("separator","true");return t};v.ordgroup=function(e,t){var r=f(e.value,t);var a=new n.MathNode("mrow",r);return a};v.text=function(e,t){var r=f(e.value.body,t);var a=new n.MathNode("mtext",r);return a};v.color=function(e,t){var r=f(e.value.value,t);var a=new n.MathNode("mstyle",r);a.setAttribute("mathcolor",e.value.color);return a};v.xmlClass=function(e,t){var r=f(e.value.value,t);var a=new n.MathNode("mstyle",r);a.setAttribute("class",e.value.cl);return a};v.supsub=function(e,t){var r=[m(e.value.base,t)];if(e.value.sub){r.push(m(e.value.sub,t))}if(e.value.sup){r.push(m(e.value.sup,t))}var a;if(!e.value.sub){a="msup"}else if(!e.value.sup){a="msub"}else{a="msubsup"}var i=new n.MathNode(a,r);return i};v.genfrac=function(e,t){var r=new n.MathNode("mfrac",[m(e.value.numer,t),m(e.value.denom,t)]);if(!e.value.hasBarLine){r.setAttribute("linethickness","0px")}if(e.value.leftDelim!=null||e.value.rightDelim!=null){var a=[];if(e.value.leftDelim!=null){var i=new n.MathNode("mo",[new n.TextNode(e.value.leftDelim)]);i.setAttribute("fence","true");a.push(i)}a.push(r);if(e.value.rightDelim!=null){var s=new n.MathNode("mo",[new n.TextNode(e.value.rightDelim)]);s.setAttribute("fence","true");a.push(s)}var l=new n.MathNode("mrow",a);return l}return r};v.array=function(e,t){return new n.MathNode("mtable",e.value.body.map(function(e){return new n.MathNode("mtr",e.map(function(e){return new n.MathNode("mtd",[m(e,t)])}))}))};v.sqrt=function(e,t){var r;if(e.value.index){r=new n.MathNode("mroot",[m(e.value.body,t),m(e.value.index,t)])}else{r=new n.MathNode("msqrt",[m(e.value.body,t)])}return r};v.leftright=function(e,t){var r=f(e.value.body,t);if(e.value.left!=="."){var a=new n.MathNode("mo",[h(e.value.left,e.mode)]);a.setAttribute("fence","true");r.unshift(a)}if(e.value.right!=="."){var i=new n.MathNode("mo",[h(e.value.right,e.mode)]);i.setAttribute("fence","true");r.push(i)}var s=new n.MathNode("mrow",r);return s};v.accent=function(e,t){var r=new n.MathNode("mo",[h(e.value.accent,e.mode)]);var a=new n.MathNode("mover",[m(e.value.base,t),r]);a.setAttribute("accent","true");return a};v.spacing=function(e){var t;if(e.value==="\\ "||e.value==="\\space"||e.value===" "||e.value==="~"){t=new n.MathNode("mtext",[new n.TextNode("\xa0")])}else{t=new n.MathNode("mspace");t.setAttribute("width",a.spacingFunctions[e.value].size)}return t};v.op=function(e){var t;if(e.value.symbol){t=new n.MathNode("mo",[h(e.value.body,e.mode)])}else{t=new n.MathNode("mi",[new n.TextNode(e.value.body.slice(1))])}return t};v.cursor=function(e){var t=new n.MathNode("mtext",[new n.TextNode("|")]);return t};v.katex=function(e){var t=new n.MathNode("mtext",[new n.TextNode("KaTeX")]);return t};v.font=function(e,t){var r=e.value.font;return m(e.value.body,t.withFont(r))};v.delimsizing=function(e){var t=[];if(e.value.value!=="."){t.push(h(e.value.value,e.mode))}var r=new n.MathNode("mo",t);if(e.value.delimType==="open"||e.value.delimType==="close"){r.setAttribute("fence","true")}else{r.setAttribute("fence","false")}return r};v.styling=function(e,t){var r=f(e.value.value,t);var a=new n.MathNode("mstyle",r);var i={display:["0","true"],text:["0","false"],script:["1","false"],scriptscript:["2","false"]};var s=i[e.value.style];a.setAttribute("scriptlevel",s[0]);a.setAttribute("displaystyle",s[1]);return a};v.sizing=function(e,t){var r=f(e.value.value,t);var i=new n.MathNode("mstyle",r);i.setAttribute("mathsize",a.sizingMultiplier[e.value.size]+"em");return i};v.overline=function(e,t){var r=new n.MathNode("mo",[new n.TextNode("\u203e")]);r.setAttribute("stretchy","true");var a=new n.MathNode("mover",[m(e.value.body,t),r]);a.setAttribute("accent","true");return a};v.underline=function(e,t){var r=new n.MathNode("mo",[new n.TextNode("\u203e")]);r.setAttribute("stretchy","true");var a=new n.MathNode("munder",[m(e.value.body,t),r]);a.setAttribute("accentunder","true");return a};v.rule=function(e){var t=new n.MathNode("mrow");return t};v.kern=function(e){var t=new n.MathNode("mrow");return t};v.llap=function(e,t){var r=new n.MathNode("mpadded",[m(e.value.body,t)]);r.setAttribute("lspace","-1width");r.setAttribute("width","0px");return r};v.rlap=function(e,t){var r=new n.MathNode("mpadded",[m(e.value.body,t)]);r.setAttribute("width","0px");return r};v.phantom=function(e,t,r){var a=f(e.value.value,t);return new n.MathNode("mphantom",a)};var f=function(e,t){var r=[];for(var a=0;a<e.length;a++){var i=e[a];r.push(m(i,t))}return r};var m=function(e,t){if(!e){return new n.MathNode("mrow")}if(v[e.type]){return v[e.type](e,t)}else{throw new s("Got group of unknown type: '"+e.type+"'")}};var d=function(e,t,r){var a=f(e,r);var i=new n.MathNode("mrow",a);var s=new n.MathNode("annotation",[new n.TextNode(t)]);s.setAttribute("encoding","application/x-tex");var l=new n.MathNode("semantics",[i,s]);var o=new n.MathNode("math",[l]);return u(["katex-mathml"],[o])};t.exports=d},{"./ParseError":6,"./buildCommon":10,"./fontMetrics":17,"./mathMLTree":20,"./symbols":23,"./utils":25}],13:[function(e,t,r){var a=e("./buildHTML");var i=e("./buildMathML");var n=e("./buildCommon");var s=e("./Options");var l=e("./Settings");var o=e("./Style");var u=n.makeSpan;var p=function(e,t,r){r=r||new l({});var n=o.TEXT;if(r.displayMode){n=o.DISPLAY}var p=new s({style:n,size:"size5"});var h=i(e,t,p);var c=a(e,p);var v=u(["katex"],[h,c]);if(r.displayMode){return u(["katex-display"],[v])}else{return v}};t.exports=p},{"./Options":5,"./Settings":8,"./Style":9,"./buildCommon":10,"./buildHTML":11,"./buildMathML":12}],14:[function(e,t,r){var a=e("./ParseError");var i=e("./Style");var n=e("./buildCommon");var s=e("./fontMetrics");var l=e("./symbols");var o=e("./utils");var u=n.makeSpan;var p=function(e,t){if(l.math[e]&&l.math[e].replace){return s.getCharacterMetrics(l.math[e].replace,t)}else{return s.getCharacterMetrics(e,t)}};var h=function(e,t,r,a){return n.makeSymbol(e,"Size"+t+"-Regular",r,a)};var c=function(e,t,r){var a=u(["style-wrap",r.style.reset(),t.cls()],[e],r);var i=t.sizeMultiplier/r.style.sizeMultiplier;a.height*=i;a.depth*=i;a.maxFontSize=t.sizeMultiplier;return a};var v=function(e,t,r,a,i){var s=n.makeSymbol(e,"Main-Regular",i,a);var l=c(s,t,a);if(r){var o=(1-a.style.sizeMultiplier/t.sizeMultiplier)*a.style.metrics.axisHeight;l.style.top=o+"em";l.height-=o;l.depth+=o}return l};var f=function(e,t,r,a,n){var s=h(e,t,n,a);var l=c(u(["delimsizing","size"+t],[s],a),i.TEXT,a);if(r){var o=(1-a.style.sizeMultiplier)*a.style.metrics.axisHeight;l.style.top=o+"em";l.height-=o;l.depth+=o}return l};var m=function(e,t,r){var a;if(t==="Size1-Regular"){a="delim-size1"}else if(t==="Size4-Regular"){a="delim-size4"}var i=u(["delimsizinginner",a],[u([],[n.makeSymbol(e,t,r)])]);return{type:"elem",elem:i}};var d=function(e,t,r,a,s){var l;var o;var h;var v;l=h=v=e;o=null;var f="Size1-Regular";if(e==="\\uparrow"){h=v="\u23d0"}else if(e==="\\Uparrow"){h=v="\u2016"}else if(e==="\\downarrow"){l=h="\u23d0"}else if(e==="\\Downarrow"){l=h="\u2016"}else if(e==="\\updownarrow"){l="\\uparrow";h="\u23d0";v="\\downarrow"}else if(e==="\\Updownarrow"){l="\\Uparrow";h="\u2016";v="\\Downarrow"}else if(e==="["||e==="\\lbrack"){l="\u23a1";h="\u23a2";v="\u23a3";f="Size4-Regular"}else if(e==="]"||e==="\\rbrack"){l="\u23a4";h="\u23a5";v="\u23a6";f="Size4-Regular"}else if(e==="\\lfloor"){h=l="\u23a2";v="\u23a3";f="Size4-Regular"}else if(e==="\\lceil"){l="\u23a1";h=v="\u23a2";f="Size4-Regular"}else if(e==="\\rfloor"){h=l="\u23a5";v="\u23a6";f="Size4-Regular"}else if(e==="\\rceil"){l="\u23a4";h=v="\u23a5";f="Size4-Regular"}else if(e==="("){l="\u239b";h="\u239c";v="\u239d";f="Size4-Regular"}else if(e===")"){l="\u239e";h="\u239f";v="\u23a0";f="Size4-Regular"}else if(e==="\\{"||e==="\\lbrace"){l="\u23a7";o="\u23a8";v="\u23a9";h="\u23aa";f="Size4-Regular"}else if(e==="\\}"||e==="\\rbrace"){l="\u23ab";o="\u23ac";v="\u23ad";h="\u23aa";f="Size4-Regular"}else if(e==="\\lgroup"){l="\u23a7";v="\u23a9";h="\u23aa";f="Size4-Regular"}else if(e==="\\rgroup"){l="\u23ab";v="\u23ad";h="\u23aa";f="Size4-Regular"}else if(e==="\\lmoustache"){l="\u23a7";v="\u23ad";h="\u23aa";f="Size4-Regular"}else if(e==="\\rmoustache"){l="\u23ab";v="\u23a9";h="\u23aa";f="Size4-Regular"}else if(e==="\\surd"){l="\ue001";v="\u23b7";h="\ue000";f="Size4-Regular"}var d=p(l,f);var g=d.height+d.depth;var y=p(h,f);var x=y.height+y.depth;var b=p(v,f);var w=b.height+b.depth;var k=0;var z=1;if(o!==null){var S=p(o,f);k=S.height+S.depth;z=2}var M=g+w+k;var T=Math.ceil((t-M)/(z*x));var A=M+T*z*x;var N=a.style.metrics.axisHeight;if(r){N*=a.style.sizeMultiplier}var q=A/2-N;var R=[];R.push(m(v,f,s));var C;if(o===null){for(C=0;C<T;C++){R.push(m(h,f,s))}}else{for(C=0;C<T;C++){R.push(m(h,f,s))}R.push(m(o,f,s));for(C=0;C<T;C++){R.push(m(h,f,s))}}R.push(m(l,f,s));var E=n.makeVList(R,"bottom",q,a);return c(u(["delimsizing","mult"],[E],a),i.TEXT,a)};var g=["(",")","[","\\lbrack","]","\\rbrack","\\{","\\lbrace","\\}","\\rbrace","\\lfloor","\\rfloor","\\lceil","\\rceil","\\surd"];var y=["\\uparrow","\\downarrow","\\updownarrow","\\Uparrow","\\Downarrow","\\Updownarrow","|","\\|","\\vert","\\Vert","\\lvert","\\rvert","\\lVert","\\rVert","\\lgroup","\\rgroup","\\lmoustache","\\rmoustache"];var x=["<",">","\\langle","\\rangle","/","\\backslash","\\lt","\\gt"];var b=[0,1.2,1.8,2.4,3];var w=function(e,t,r,i){if(e==="<"||e==="\\lt"){e="\\langle"}else if(e===">"||e==="\\gt"){e="\\rangle"}if(o.contains(g,e)||o.contains(x,e)){return f(e,t,false,r,i)}else if(o.contains(y,e)){return d(e,b[t],false,r,i)}else{throw new a("Illegal delimiter: '"+e+"'")}};var k=[{type:"small",style:i.SCRIPTSCRIPT},{type:"small",style:i.SCRIPT},{type:"small",style:i.TEXT},{type:"large",size:1},{type:"large",size:2},{type:"large",size:3},{type:"large",size:4}];var z=[{type:"small",style:i.SCRIPTSCRIPT},{type:"small",style:i.SCRIPT},{type:"small",style:i.TEXT},{type:"stack"}];var S=[{type:"small",style:i.SCRIPTSCRIPT},{type:"small",style:i.SCRIPT},{type:"small",style:i.TEXT},{type:"large",size:1},{type:"large",size:2},{type:"large",size:3},{type:"large",size:4},{type:"stack"}];var M=function(e){if(e.type==="small"){return"Main-Regular"}else if(e.type==="large"){return"Size"+e.size+"-Regular"}else if(e.type==="stack"){return"Size4-Regular"}};var T=function(e,t,r,a){var i=Math.min(2,3-a.style.size);for(var n=i;n<r.length;n++){if(r[n].type==="stack"){break}var s=p(e,M(r[n]));var l=s.height+s.depth;if(r[n].type==="small"){l*=r[n].style.sizeMultiplier}if(l>t){return r[n]}}return r[r.length-1]};var A=function(e,t,r,a,i){if(e==="<"||e==="\\lt"){e="\\langle"}else if(e===">"||e==="\\gt"){e="\\rangle"}var n;if(o.contains(x,e)){n=k}else if(o.contains(g,e)){n=S}else{n=z}var s=T(e,t,n,a);if(s.type==="small"){return v(e,s.style,r,a,i)}else if(s.type==="large"){return f(e,s.size,r,a,i)}else if(s.type==="stack"){return d(e,t,r,a,i)}};var N=function(e,t,r,a,i){var n=a.style.metrics.axisHeight*a.style.sizeMultiplier;var l=901;var o=5/s.metrics.ptPerEm;var u=Math.max(t-n,r+n);var p=Math.max(u/500*l,2*u-o);return A(e,p,true,a,i)};t.exports={sizedDelim:w,customSizedDelim:A,leftRightDelim:N}},{"./ParseError":6,"./Style":9,"./buildCommon":10,"./fontMetrics":17,"./symbols":23,"./utils":25}],15:[function(e,t,r){var a=e("./unicodeRegexes");var i=e("./utils");var n=function(e){e=e.slice();for(var t=e.length-1;t>=0;t--){if(!e[t]){e.splice(t,1)}}return e.join(" ")};function s(e,t,r){this.classes=e||[];this.children=t||[];this.height=0;this.depth=0;this.maxFontSize=0;this.style={};this.attributes={};if(r){if(r.style.isTight()){this.classes.push("mtight")}if(r.getColor()){this.style.color=r.getColor()}}}s.prototype.setAttribute=function(e,t){this.attributes[e]=t};s.prototype.toNode=function(){var e=document.createElement("span");e.className=n(this.classes);for(var t in this.style){if(Object.prototype.hasOwnProperty.call(this.style,t)){e.style[t]=this.style[t]}}for(var r in this.attributes){if(Object.prototype.hasOwnProperty.call(this.attributes,r)){e.setAttribute(r,this.attributes[r])}}for(var a=0;a<this.children.length;a++){e.appendChild(this.children[a].toNode())}return e};s.prototype.toMarkup=function(){var e="<span";if(this.classes.length){e+=' class="';e+=i.escape(n(this.classes));e+='"'}var t="";for(var r in this.style){if(this.style.hasOwnProperty(r)){t+=i.hyphenate(r)+":"+this.style[r]+";"}}if(t){e+=' style="'+i.escape(t)+'"'}for(var a in this.attributes){if(Object.prototype.hasOwnProperty.call(this.attributes,a)){e+=" "+a+'="';e+=i.escape(this.attributes[a]);e+='"'}}e+=">";for(var s=0;s<this.children.length;s++){e+=this.children[s].toMarkup()}e+="</span>";return e};function l(e,t){this.children=e||[];this.height=0;this.depth=0;this.maxFontSize=0;if(t){for(var r=0;r<this.children.length;r++){for(var a=0;a<t.length;a++){this.children[r].classes.push(t[a])}}}this.classes=t||[]}l.prototype.toNode=function(){var e=document.createDocumentFragment();for(var t=0;t<this.children.length;t++){e.appendChild(this.children[t].toNode())}return e};l.prototype.toMarkup=function(){var e="";for(var t=0;t<this.children.length;t++){e+=this.children[t].toMarkup()}return e};var o={"\xee":"\u0131\u0302","\xef":"\u0131\u0308","\xed":"\u0131\u0301","\xec":"\u0131\u0300"};function u(e,t,r,i,n,s,l){this.value=e||"";this.height=t||0;this.depth=r||0;this.italic=i||0;this.skew=n||0;this.classes=s||[];this.style=l||{};this.maxFontSize=0;if(a.cjkRegex.test(e)){if(a.hangulRegex.test(e)){this.classes.push("hangul_fallback")}else{this.classes.push("cjk_fallback")}}if(/[\xee\xef\xed\xec]/.test(this.value)){this.value=o[this.value]}}u.prototype.toNode=function(){var e=document.createTextNode(this.value);var t=null;if(this.italic>0){t=document.createElement("span");t.style.marginRight=this.italic+"em"}if(this.classes.length>0){t=t||document.createElement("span");t.className=n(this.classes)}for(var r in this.style){if(this.style.hasOwnProperty(r)){t=t||document.createElement("span");t.style[r]=this.style[r]}}if(t){t.appendChild(e);return t}else{return e}};u.prototype.toMarkup=function(){var e=false;var t="<span";if(this.classes.length){e=true;t+=' class="';t+=i.escape(n(this.classes));t+='"'}var r="";if(this.italic>0){r+="margin-right:"+this.italic+"em;"}for(var a in this.style){if(this.style.hasOwnProperty(a)){r+=i.hyphenate(a)+":"+this.style[a]+";"}}if(r){e=true;t+=' style="'+i.escape(r)+'"'}var s=i.escape(this.value);if(e){t+=">";t+=s;t+="</span>";return t}else{return s}};t.exports={span:s,documentFragment:l,symbolNode:u}},{"./unicodeRegexes":24,"./utils":25}],16:[function(e,t,r){var a=e("./parseData");var i=e("./ParseError");var n=e("./Style");var s=a.ParseNode;function l(e,t){var r=[];var a=[r];var n=[];while(true){var l=e.parseExpression(false,null);r.push(new s("ordgroup",l,e.mode));var o=e.nextToken.text;if(o==="&"){e.consume()}else if(o==="\\end"){break}else if(o==="\\\\"||o==="\\cr"){var u=e.parseFunction();n.push(u.value.size);r=[];a.push(r)}else{throw new i("Expected & or \\\\ or \\end",e.nextToken)}}t.body=a;t.rowGaps=n;return new s(t.type,t,e.mode)}function o(e,r,a){if(typeof e==="string"){e=[e]}if(typeof r==="number"){r={numArgs:r}}var i={numArgs:r.numArgs||0,argTypes:r.argTypes,greediness:1,allowedInText:!!r.allowedInText,numOptionalArgs:r.numOptionalArgs||0,handler:a};for(var n=0;n<e.length;++n){t.exports[e[n]]=i}}o("array",{numArgs:1},function(e,t){var r=t[0];r=r.value.map?r.value:[r];var a=r.map(function(e){var t=e.value;if("lcr".indexOf(t)!==-1){return{type:"align",align:t}}else if(t==="|"){return{type:"separator",separator:"|"}}throw new i("Unknown column alignment: "+e.value,e)});var n={type:"array",cols:a,hskipBeforeAndAfter:true};n=l(e.parser,n);return n});o(["matrix","pmatrix","bmatrix","Bmatrix","vmatrix","Vmatrix"],{},function(e){var t={matrix:null,pmatrix:["(",")"],bmatrix:["[","]"],Bmatrix:["\\{","\\}"],vmatrix:["|","|"],Vmatrix:["\\Vert","\\Vert"]}[e.envName];var r={type:"array",hskipBeforeAndAfter:false};r=l(e.parser,r);if(t){r=new s("leftright",{body:[r],left:t[0],right:t[1]},e.mode)}return r});o("cases",{},function(e){var t={type:"array",arraystretch:1.2,cols:[{type:"align",align:"l",pregap:0,postgap:n.TEXT.metrics.quad},{type:"align",align:"l",pregap:0,postgap:0}]};t=l(e.parser,t);t=new s("leftright",{body:[t],left:"\\{",right:"."},e.mode);return t});o("aligned",{},function(e){var t={type:"array",cols:[]};t=l(e.parser,t);var r=new s("ordgroup",[],e.mode);var a=0;t.value.body.forEach(function(e){var t;for(t=1;t<e.length;t+=2){e[t].value.unshift(r)}if(a<e.length){a=e.length}});for(var i=0;i<a;++i){var n="r";var o=0;if(i%2===1){n="l"}else if(i>0){o=2}t.value.cols[i]={type:"align",align:n,pregap:o,postgap:0}}return t})},{"./ParseError":6,"./Style":9,"./parseData":21}],17:[function(e,t,r){var a=e("./Style");var i=e("./unicodeRegexes").cjkRegex;var n={slant:[.25,.25,.25],space:[0,0,0],stretch:[0,0,0],shrink:[0,0,0],xHeight:[.431,.431,.431],quad:[1,1.171,1.472],extraSpace:[0,0,0],num1:[.677,.732,.925],num2:[.394,.384,.387],num3:[.444,.471,.504],denom1:[.686,.752,1.025],denom2:[.345,.344,.532],sup1:[.413,.503,.504],sup2:[.363,.431,.404],sup3:[.289,.286,.294],sub1:[.15,.143,.2],sub2:[.247,.286,.4],supDrop:[.386,.353,.494],subDrop:[.05,.071,.1],delim1:[2.39,1.7,1.98],delim2:[1.01,1.157,1.42],axisHeight:[.25,.25,.25]};var s=0;var l=0;var o=0;var u=0;var p=.431;var h=1;var c=0;var v=.04;var f=.111;var m=.166;var d=.2;var g=.6;var y=.1;var x=10;var b=2/x;var w={defaultRuleThickness:v,bigOpSpacing1:f,bigOpSpacing2:m,bigOpSpacing3:d,bigOpSpacing4:g,bigOpSpacing5:y,ptPerEm:x,doubleRuleSep:b};var k=e("./fontMetricsData");var z={"\xc0":"A","\xc1":"A","\xc2":"A","\xc3":"A","\xc4":"A","\xc5":"A","\xc6":"A","\xc7":"C","\xc8":"E","\xc9":"E","\xca":"E","\xcb":"E","\xcc":"I","\xcd":"I","\xce":"I","\xcf":"I","\xd0":"D","\xd1":"N","\xd2":"O","\xd3":"O","\xd4":"O","\xd5":"O","\xd6":"O","\xd8":"O","\xd9":"U","\xda":"U","\xdb":"U","\xdc":"U","\xdd":"Y","\xde":"o","\xdf":"B","\xe0":"a","\xe1":"a","\xe2":"a","\xe3":"a","\xe4":"a","\xe5":"a","\xe6":"a","\xe7":"c","\xe8":"e","\xe9":"e","\xea":"e","\xeb":"e","\xec":"i","\xed":"i","\xee":"i","\xef":"i","\xf0":"d","\xf1":"n","\xf2":"o","\xf3":"o","\xf4":"o","\xf5":"o","\xf6":"o","\xf8":"o","\xf9":"u","\xfa":"u","\xfb":"u","\xfc":"u","\xfd":"y","\xfe":"o","\xff":"y","\u0410":"A","\u0411":"B","\u0412":"B","\u0413":"F","\u0414":"A","\u0415":"E","\u0416":"K","\u0417":"3","\u0418":"N","\u0419":"N","\u041a":"K","\u041b":"N","\u041c":"M","\u041d":"H","\u041e":"O","\u041f":"N","\u0420":"P","\u0421":"C","\u0422":"T","\u0423":"y","\u0424":"O","\u0425":"X","\u0426":"U","\u0427":"h","\u0428":"W","\u0429":"W","\u042a":"B","\u042b":"X","\u042c":"B","\u042d":"3","\u042e":"X","\u042f":"R","\u0430":"a","\u0431":"b","\u0432":"a","\u0433":"r","\u0434":"y","\u0435":"e","\u0436":"m","\u0437":"e","\u0438":"n","\u0439":"n","\u043a":"n","\u043b":"n","\u043c":"m","\u043d":"n","\u043e":"o","\u043f":"n","\u0440":"p","\u0441":"c","\u0442":"o","\u0443":"y","\u0444":"b","\u0445":"x","\u0446":"n","\u0447":"n","\u0448":"w","\u0449":"w","\u044a":"a","\u044b":"m","\u044c":"a","\u044d":"e","\u044e":"m","\u044f":"r"};var S=function(e,t){var r=e.charCodeAt(0);if(e[0]in z){r=z[e[0]].charCodeAt(0)}else if(i.test(e[0])){r="M".charCodeAt(0)}var a=k[t][r];if(a){return{depth:a[0],height:a[1],italic:a[2],skew:a[3],width:a[4]}}};t.exports={metrics:w,sigmas:n,getCharacterMetrics:S}},{"./Style":9,"./fontMetricsData":18,"./unicodeRegexes":24}],18:[function(e,t,r){t.exports={"AMS-Regular":{65:[0,.68889,0,0],66:[0,.68889,0,0],67:[0,.68889,0,0],68:[0,.68889,0,0],69:[0,.68889,0,0],70:[0,.68889,0,0],71:[0,.68889,0,0],72:[0,.68889,0,0],73:[0,.68889,0,0],74:[.16667,.68889,0,0],75:[0,.68889,0,0],76:[0,.68889,0,0],77:[0,.68889,0,0],78:[0,.68889,0,0],79:[.16667,.68889,0,0],80:[0,.68889,0,0],81:[.16667,.68889,0,0],82:[0,.68889,0,0],83:[0,.68889,0,0],84:[0,.68889,0,0],85:[0,.68889,0,0],86:[0,.68889,0,0],87:[0,.68889,0,0],88:[0,.68889,0,0],89:[0,.68889,0,0],90:[0,.68889,0,0],107:[0,.68889,0,0],165:[0,.675,.025,0],174:[.15559,.69224,0,0],240:[0,.68889,0,0],295:[0,.68889,0,0],710:[0,.825,0,0],732:[0,.9,0,0],770:[0,.825,0,0],771:[0,.9,0,0],989:[.08167,.58167,0,0],1008:[0,.43056,.04028,0],8245:[0,.54986,0,0],8463:[0,.68889,0,0],8487:[0,.68889,0,0],8498:[0,.68889,0,0],8502:[0,.68889,0,0],8503:[0,.68889,0,0],8504:[0,.68889,0,0],8513:[0,.68889,0,0],8592:[-.03598,.46402,0,0],8594:[-.03598,.46402,0,0],8602:[-.13313,.36687,0,0],8603:[-.13313,.36687,0,0],8606:[.01354,.52239,0,0],8608:[.01354,.52239,0,0],8610:[.01354,.52239,0,0],8611:[.01354,.52239,0,0],8619:[0,.54986,0,0],8620:[0,.54986,0,0],8621:[-.13313,.37788,0,0],8622:[-.13313,.36687,0,0],8624:[0,.69224,0,0],8625:[0,.69224,0,0],8630:[0,.43056,0,0],8631:[0,.43056,0,0],8634:[.08198,.58198,0,0],8635:[.08198,.58198,0,0],8638:[.19444,.69224,0,0],8639:[.19444,.69224,0,0],8642:[.19444,.69224,0,0],8643:[.19444,.69224,0,0],8644:[.1808,.675,0,0],8646:[.1808,.675,0,0],8647:[.1808,.675,0,0],8648:[.19444,.69224,0,0],8649:[.1808,.675,0,0],8650:[.19444,.69224,0,0],8651:[.01354,.52239,0,0],8652:[.01354,.52239,0,0],8653:[-.13313,.36687,0,0],8654:[-.13313,.36687,0,0],8655:[-.13313,.36687,0,0],8666:[.13667,.63667,0,0],8667:[.13667,.63667,0,0],8669:[-.13313,.37788,0,0],8672:[-.064,.437,0,0],8674:[-.064,.437,0,0],8705:[0,.825,0,0],8708:[0,.68889,0,0],8709:[.08167,.58167,0,0],8717:[0,.43056,0,0],8722:[-.03598,.46402,0,0],8724:[.08198,.69224,0,0],8726:[.08167,.58167,0,0],8733:[0,.69224,0,0],8736:[0,.69224,0,0],8737:[0,.69224,0,0],8738:[.03517,.52239,0,0],8739:[.08167,.58167,0,0],8740:[.25142,.74111,0,0],8741:[.08167,.58167,0,0],8742:[.25142,.74111,0,0],8756:[0,.69224,0,0],8757:[0,.69224,0,0],8764:[-.13313,.36687,0,0],8765:[-.13313,.37788,0,0],8769:[-.13313,.36687,0,0],8770:[-.03625,.46375,0,0],8774:[.30274,.79383,0,0],8776:[-.01688,.48312,0,0],8778:[.08167,.58167,0,0],8782:[.06062,.54986,0,0],8783:[.06062,.54986,0,0],8785:[.08198,.58198,0,0],8786:[.08198,.58198,0,0],8787:[.08198,.58198,0,0],8790:[0,.69224,0,0],8791:[.22958,.72958,0,0],8796:[.08198,.91667,0,0],8806:[.25583,.75583,0,0],8807:[.25583,.75583,0,0],8808:[.25142,.75726,0,0],8809:[.25142,.75726,0,0],8812:[.25583,.75583,0,0],8814:[.20576,.70576,0,0],8815:[.20576,.70576,0,0],8816:[.30274,.79383,0,0],8817:[.30274,.79383,0,0],8818:[.22958,.72958,0,0],8819:[.22958,.72958,0,0],8822:[.1808,.675,0,0],8823:[.1808,.675,0,0],8828:[.13667,.63667,0,0],8829:[.13667,.63667,0,0],8830:[.22958,.72958,0,0],8831:[.22958,.72958,0,0],8832:[.20576,.70576,0,0],8833:[.20576,.70576,0,0],8840:[.30274,.79383,0,0],8841:[.30274,.79383,0,0],8842:[.13597,.63597,0,0],8843:[.13597,.63597,0,0],8847:[.03517,.54986,0,0],8848:[.03517,.54986,0,0],8858:[.08198,.58198,0,0],8859:[.08198,.58198,0,0],8861:[.08198,.58198,0,0],8862:[0,.675,0,0],8863:[0,.675,0,0],8864:[0,.675,0,0],8865:[0,.675,0,0],8872:[0,.69224,0,0],8873:[0,.69224,0,0],8874:[0,.69224,0,0],8876:[0,.68889,0,0],8877:[0,.68889,0,0],8878:[0,.68889,0,0],8879:[0,.68889,0,0],8882:[.03517,.54986,0,0],8883:[.03517,.54986,0,0],8884:[.13667,.63667,0,0],8885:[.13667,.63667,0,0],8888:[0,.54986,0,0],8890:[.19444,.43056,0,0],8891:[.19444,.69224,0,0],8892:[.19444,.69224,0,0],8901:[0,.54986,0,0],8903:[.08167,.58167,0,0],8905:[.08167,.58167,0,0],8906:[.08167,.58167,0,0],8907:[0,.69224,0,0],8908:[0,.69224,0,0],8909:[-.03598,.46402,0,0],8910:[0,.54986,0,0],8911:[0,.54986,0,0],8912:[.03517,.54986,0,0],8913:[.03517,.54986,0,0],8914:[0,.54986,0,0],8915:[0,.54986,0,0],8916:[0,.69224,0,0],8918:[.0391,.5391,0,0],8919:[.0391,.5391,0,0],8920:[.03517,.54986,0,0],8921:[.03517,.54986,0,0],8922:[.38569,.88569,0,0],8923:[.38569,.88569,0,0],8926:[.13667,.63667,0,0],8927:[.13667,.63667,0,0],8928:[.30274,.79383,0,0],8929:[.30274,.79383,0,0],8934:[.23222,.74111,0,0],8935:[.23222,.74111,0,0],8936:[.23222,.74111,0,0],8937:[.23222,.74111,0,0],8938:[.20576,.70576,0,0],8939:[.20576,.70576,0,0],8940:[.30274,.79383,0,0],8941:[.30274,.79383,0,0],8994:[.19444,.69224,0,0],8995:[.19444,.69224,0,0],9416:[.15559,.69224,0,0],9484:[0,.69224,0,0],9488:[0,.69224,0,0],9492:[0,.37788,0,0],9496:[0,.37788,0,0],9585:[.19444,.68889,0,0],9586:[.19444,.74111,0,0],9632:[0,.675,0,0],
9633:[0,.675,0,0],9650:[0,.54986,0,0],9651:[0,.54986,0,0],9654:[.03517,.54986,0,0],9660:[0,.54986,0,0],9661:[0,.54986,0,0],9664:[.03517,.54986,0,0],9674:[.11111,.69224,0,0],9733:[.19444,.69224,0,0],10003:[0,.69224,0,0],10016:[0,.69224,0,0],10731:[.11111,.69224,0,0],10846:[.19444,.75583,0,0],10877:[.13667,.63667,0,0],10878:[.13667,.63667,0,0],10885:[.25583,.75583,0,0],10886:[.25583,.75583,0,0],10887:[.13597,.63597,0,0],10888:[.13597,.63597,0,0],10889:[.26167,.75726,0,0],10890:[.26167,.75726,0,0],10891:[.48256,.98256,0,0],10892:[.48256,.98256,0,0],10901:[.13667,.63667,0,0],10902:[.13667,.63667,0,0],10933:[.25142,.75726,0,0],10934:[.25142,.75726,0,0],10935:[.26167,.75726,0,0],10936:[.26167,.75726,0,0],10937:[.26167,.75726,0,0],10938:[.26167,.75726,0,0],10949:[.25583,.75583,0,0],10950:[.25583,.75583,0,0],10955:[.28481,.79383,0,0],10956:[.28481,.79383,0,0],57350:[.08167,.58167,0,0],57351:[.08167,.58167,0,0],57352:[.08167,.58167,0,0],57353:[0,.43056,.04028,0],57356:[.25142,.75726,0,0],57357:[.25142,.75726,0,0],57358:[.41951,.91951,0,0],57359:[.30274,.79383,0,0],57360:[.30274,.79383,0,0],57361:[.41951,.91951,0,0],57366:[.25142,.75726,0,0],57367:[.25142,.75726,0,0],57368:[.25142,.75726,0,0],57369:[.25142,.75726,0,0],57370:[.13597,.63597,0,0],57371:[.13597,.63597,0,0]},"Caligraphic-Regular":{48:[0,.43056,0,0],49:[0,.43056,0,0],50:[0,.43056,0,0],51:[.19444,.43056,0,0],52:[.19444,.43056,0,0],53:[.19444,.43056,0,0],54:[0,.64444,0,0],55:[.19444,.43056,0,0],56:[0,.64444,0,0],57:[.19444,.43056,0,0],65:[0,.68333,0,.19445],66:[0,.68333,.03041,.13889],67:[0,.68333,.05834,.13889],68:[0,.68333,.02778,.08334],69:[0,.68333,.08944,.11111],70:[0,.68333,.09931,.11111],71:[.09722,.68333,.0593,.11111],72:[0,.68333,.00965,.11111],73:[0,.68333,.07382,0],74:[.09722,.68333,.18472,.16667],75:[0,.68333,.01445,.05556],76:[0,.68333,0,.13889],77:[0,.68333,0,.13889],78:[0,.68333,.14736,.08334],79:[0,.68333,.02778,.11111],80:[0,.68333,.08222,.08334],81:[.09722,.68333,0,.11111],82:[0,.68333,0,.08334],83:[0,.68333,.075,.13889],84:[0,.68333,.25417,0],85:[0,.68333,.09931,.08334],86:[0,.68333,.08222,0],87:[0,.68333,.08222,.08334],88:[0,.68333,.14643,.13889],89:[.09722,.68333,.08222,.08334],90:[0,.68333,.07944,.13889]},"Fraktur-Regular":{33:[0,.69141,0,0],34:[0,.69141,0,0],38:[0,.69141,0,0],39:[0,.69141,0,0],40:[.24982,.74947,0,0],41:[.24982,.74947,0,0],42:[0,.62119,0,0],43:[.08319,.58283,0,0],44:[0,.10803,0,0],45:[.08319,.58283,0,0],46:[0,.10803,0,0],47:[.24982,.74947,0,0],48:[0,.47534,0,0],49:[0,.47534,0,0],50:[0,.47534,0,0],51:[.18906,.47534,0,0],52:[.18906,.47534,0,0],53:[.18906,.47534,0,0],54:[0,.69141,0,0],55:[.18906,.47534,0,0],56:[0,.69141,0,0],57:[.18906,.47534,0,0],58:[0,.47534,0,0],59:[.12604,.47534,0,0],61:[-.13099,.36866,0,0],63:[0,.69141,0,0],65:[0,.69141,0,0],66:[0,.69141,0,0],67:[0,.69141,0,0],68:[0,.69141,0,0],69:[0,.69141,0,0],70:[.12604,.69141,0,0],71:[0,.69141,0,0],72:[.06302,.69141,0,0],73:[0,.69141,0,0],74:[.12604,.69141,0,0],75:[0,.69141,0,0],76:[0,.69141,0,0],77:[0,.69141,0,0],78:[0,.69141,0,0],79:[0,.69141,0,0],80:[.18906,.69141,0,0],81:[.03781,.69141,0,0],82:[0,.69141,0,0],83:[0,.69141,0,0],84:[0,.69141,0,0],85:[0,.69141,0,0],86:[0,.69141,0,0],87:[0,.69141,0,0],88:[0,.69141,0,0],89:[.18906,.69141,0,0],90:[.12604,.69141,0,0],91:[.24982,.74947,0,0],93:[.24982,.74947,0,0],94:[0,.69141,0,0],97:[0,.47534,0,0],98:[0,.69141,0,0],99:[0,.47534,0,0],100:[0,.62119,0,0],101:[0,.47534,0,0],102:[.18906,.69141,0,0],103:[.18906,.47534,0,0],104:[.18906,.69141,0,0],105:[0,.69141,0,0],106:[0,.69141,0,0],107:[0,.69141,0,0],108:[0,.69141,0,0],109:[0,.47534,0,0],110:[0,.47534,0,0],111:[0,.47534,0,0],112:[.18906,.52396,0,0],113:[.18906,.47534,0,0],114:[0,.47534,0,0],115:[0,.47534,0,0],116:[0,.62119,0,0],117:[0,.47534,0,0],118:[0,.52396,0,0],119:[0,.52396,0,0],120:[.18906,.47534,0,0],121:[.18906,.47534,0,0],122:[.18906,.47534,0,0],8216:[0,.69141,0,0],8217:[0,.69141,0,0],58112:[0,.62119,0,0],58113:[0,.62119,0,0],58114:[.18906,.69141,0,0],58115:[.18906,.69141,0,0],58116:[.18906,.47534,0,0],58117:[0,.69141,0,0],58118:[0,.62119,0,0],58119:[0,.47534,0,0]},"Main-Bold":{33:[0,.69444,0,0],34:[0,.69444,0,0],35:[.19444,.69444,0,0],36:[.05556,.75,0,0],37:[.05556,.75,0,0],38:[0,.69444,0,0],39:[0,.69444,0,0],40:[.25,.75,0,0],41:[.25,.75,0,0],42:[0,.75,0,0],43:[.13333,.63333,0,0],44:[.19444,.15556,0,0],45:[0,.44444,0,0],46:[0,.15556,0,0],47:[.25,.75,0,0],48:[0,.64444,0,0],49:[0,.64444,0,0],50:[0,.64444,0,0],51:[0,.64444,0,0],52:[0,.64444,0,0],53:[0,.64444,0,0],54:[0,.64444,0,0],55:[0,.64444,0,0],56:[0,.64444,0,0],57:[0,.64444,0,0],58:[0,.44444,0,0],59:[.19444,.44444,0,0],60:[.08556,.58556,0,0],61:[-.10889,.39111,0,0],62:[.08556,.58556,0,0],63:[0,.69444,0,0],64:[0,.69444,0,0],65:[0,.68611,0,0],66:[0,.68611,0,0],67:[0,.68611,0,0],68:[0,.68611,0,0],69:[0,.68611,0,0],70:[0,.68611,0,0],71:[0,.68611,0,0],72:[0,.68611,0,0],73:[0,.68611,0,0],74:[0,.68611,0,0],75:[0,.68611,0,0],76:[0,.68611,0,0],77:[0,.68611,0,0],78:[0,.68611,0,0],79:[0,.68611,0,0],80:[0,.68611,0,0],81:[.19444,.68611,0,0],82:[0,.68611,0,0],83:[0,.68611,0,0],84:[0,.68611,0,0],85:[0,.68611,0,0],86:[0,.68611,.01597,0],87:[0,.68611,.01597,0],88:[0,.68611,0,0],89:[0,.68611,.02875,0],90:[0,.68611,0,0],91:[.25,.75,0,0],92:[.25,.75,0,0],93:[.25,.75,0,0],94:[0,.69444,0,0],95:[.31,.13444,.03194,0],96:[0,.69444,0,0],97:[0,.44444,0,0],98:[0,.69444,0,0],99:[0,.44444,0,0],100:[0,.69444,0,0],101:[0,.44444,0,0],102:[0,.69444,.10903,0],103:[.19444,.44444,.01597,0],104:[0,.69444,0,0],105:[0,.69444,0,0],106:[.19444,.69444,0,0],107:[0,.69444,0,0],108:[0,.69444,0,0],109:[0,.44444,0,0],110:[0,.44444,0,0],111:[0,.44444,0,0],112:[.19444,.44444,0,0],113:[.19444,.44444,0,0],114:[0,.44444,0,0],115:[0,.44444,0,0],116:[0,.63492,0,0],117:[0,.44444,0,0],118:[0,.44444,.01597,0],119:[0,.44444,.01597,0],120:[0,.44444,0,0],121:[.19444,.44444,.01597,0],122:[0,.44444,0,0],123:[.25,.75,0,0],124:[.25,.75,0,0],125:[.25,.75,0,0],126:[.35,.34444,0,0],168:[0,.69444,0,0],172:[0,.44444,0,0],175:[0,.59611,0,0],176:[0,.69444,0,0],177:[.13333,.63333,0,0],180:[0,.69444,0,0],215:[.13333,.63333,0,0],247:[.13333,.63333,0,0],305:[0,.44444,0,0],567:[.19444,.44444,0,0],710:[0,.69444,0,0],711:[0,.63194,0,0],713:[0,.59611,0,0],714:[0,.69444,0,0],715:[0,.69444,0,0],728:[0,.69444,0,0],729:[0,.69444,0,0],730:[0,.69444,0,0],732:[0,.69444,0,0],768:[0,.69444,0,0],769:[0,.69444,0,0],770:[0,.69444,0,0],771:[0,.69444,0,0],772:[0,.59611,0,0],774:[0,.69444,0,0],775:[0,.69444,0,0],776:[0,.69444,0,0],778:[0,.69444,0,0],779:[0,.69444,0,0],780:[0,.63194,0,0],824:[.19444,.69444,0,0],915:[0,.68611,0,0],916:[0,.68611,0,0],920:[0,.68611,0,0],923:[0,.68611,0,0],926:[0,.68611,0,0],928:[0,.68611,0,0],931:[0,.68611,0,0],933:[0,.68611,0,0],934:[0,.68611,0,0],936:[0,.68611,0,0],937:[0,.68611,0,0],8211:[0,.44444,.03194,0],8212:[0,.44444,.03194,0],8216:[0,.69444,0,0],8217:[0,.69444,0,0],8220:[0,.69444,0,0],8221:[0,.69444,0,0],8224:[.19444,.69444,0,0],8225:[.19444,.69444,0,0],8242:[0,.55556,0,0],8407:[0,.72444,.15486,0],8463:[0,.69444,0,0],8465:[0,.69444,0,0],8467:[0,.69444,0,0],8472:[.19444,.44444,0,0],8476:[0,.69444,0,0],8501:[0,.69444,0,0],8592:[-.10889,.39111,0,0],8593:[.19444,.69444,0,0],8594:[-.10889,.39111,0,0],8595:[.19444,.69444,0,0],8596:[-.10889,.39111,0,0],8597:[.25,.75,0,0],8598:[.19444,.69444,0,0],8599:[.19444,.69444,0,0],8600:[.19444,.69444,0,0],8601:[.19444,.69444,0,0],8636:[-.10889,.39111,0,0],8637:[-.10889,.39111,0,0],8640:[-.10889,.39111,0,0],8641:[-.10889,.39111,0,0],8656:[-.10889,.39111,0,0],8657:[.19444,.69444,0,0],8658:[-.10889,.39111,0,0],8659:[.19444,.69444,0,0],8660:[-.10889,.39111,0,0],8661:[.25,.75,0,0],8704:[0,.69444,0,0],8706:[0,.69444,.06389,0],8707:[0,.69444,0,0],8709:[.05556,.75,0,0],8711:[0,.68611,0,0],8712:[.08556,.58556,0,0],8715:[.08556,.58556,0,0],8722:[.13333,.63333,0,0],8723:[.13333,.63333,0,0],8725:[.25,.75,0,0],8726:[.25,.75,0,0],8727:[-.02778,.47222,0,0],8728:[-.02639,.47361,0,0],8729:[-.02639,.47361,0,0],8730:[.18,.82,0,0],8733:[0,.44444,0,0],8734:[0,.44444,0,0],8736:[0,.69224,0,0],8739:[.25,.75,0,0],8741:[.25,.75,0,0],8743:[0,.55556,0,0],8744:[0,.55556,0,0],8745:[0,.55556,0,0],8746:[0,.55556,0,0],8747:[.19444,.69444,.12778,0],8764:[-.10889,.39111,0,0],8768:[.19444,.69444,0,0],8771:[.00222,.50222,0,0],8776:[.02444,.52444,0,0],8781:[.00222,.50222,0,0],8801:[.00222,.50222,0,0],8804:[.19667,.69667,0,0],8805:[.19667,.69667,0,0],8810:[.08556,.58556,0,0],8811:[.08556,.58556,0,0],8826:[.08556,.58556,0,0],8827:[.08556,.58556,0,0],8834:[.08556,.58556,0,0],8835:[.08556,.58556,0,0],8838:[.19667,.69667,0,0],8839:[.19667,.69667,0,0],8846:[0,.55556,0,0],8849:[.19667,.69667,0,0],8850:[.19667,.69667,0,0],8851:[0,.55556,0,0],8852:[0,.55556,0,0],8853:[.13333,.63333,0,0],8854:[.13333,.63333,0,0],8855:[.13333,.63333,0,0],8856:[.13333,.63333,0,0],8857:[.13333,.63333,0,0],8866:[0,.69444,0,0],8867:[0,.69444,0,0],8868:[0,.69444,0,0],8869:[0,.69444,0,0],8900:[-.02639,.47361,0,0],8901:[-.02639,.47361,0,0],8902:[-.02778,.47222,0,0],8968:[.25,.75,0,0],8969:[.25,.75,0,0],8970:[.25,.75,0,0],8971:[.25,.75,0,0],8994:[-.13889,.36111,0,0],8995:[-.13889,.36111,0,0],9651:[.19444,.69444,0,0],9657:[-.02778,.47222,0,0],9661:[.19444,.69444,0,0],9667:[-.02778,.47222,0,0],9711:[.19444,.69444,0,0],9824:[.12963,.69444,0,0],9825:[.12963,.69444,0,0],9826:[.12963,.69444,0,0],9827:[.12963,.69444,0,0],9837:[0,.75,0,0],9838:[.19444,.69444,0,0],9839:[.19444,.69444,0,0],10216:[.25,.75,0,0],10217:[.25,.75,0,0],10815:[0,.68611,0,0],10927:[.19667,.69667,0,0],10928:[.19667,.69667,0,0]},"Main-Italic":{33:[0,.69444,.12417,0],34:[0,.69444,.06961,0],35:[.19444,.69444,.06616,0],37:[.05556,.75,.13639,0],38:[0,.69444,.09694,0],39:[0,.69444,.12417,0],40:[.25,.75,.16194,0],41:[.25,.75,.03694,0],42:[0,.75,.14917,0],43:[.05667,.56167,.03694,0],44:[.19444,.10556,0,0],45:[0,.43056,.02826,0],46:[0,.10556,0,0],47:[.25,.75,.16194,0],48:[0,.64444,.13556,0],49:[0,.64444,.13556,0],50:[0,.64444,.13556,0],51:[0,.64444,.13556,0],52:[.19444,.64444,.13556,0],53:[0,.64444,.13556,0],54:[0,.64444,.13556,0],55:[.19444,.64444,.13556,0],56:[0,.64444,.13556,0],57:[0,.64444,.13556,0],58:[0,.43056,.0582,0],59:[.19444,.43056,.0582,0],61:[-.13313,.36687,.06616,0],63:[0,.69444,.1225,0],64:[0,.69444,.09597,0],65:[0,.68333,0,0],66:[0,.68333,.10257,0],67:[0,.68333,.14528,0],68:[0,.68333,.09403,0],69:[0,.68333,.12028,0],70:[0,.68333,.13305,0],71:[0,.68333,.08722,0],72:[0,.68333,.16389,0],73:[0,.68333,.15806,0],74:[0,.68333,.14028,0],75:[0,.68333,.14528,0],76:[0,.68333,0,0],77:[0,.68333,.16389,0],78:[0,.68333,.16389,0],79:[0,.68333,.09403,0],80:[0,.68333,.10257,0],81:[.19444,.68333,.09403,0],82:[0,.68333,.03868,0],83:[0,.68333,.11972,0],84:[0,.68333,.13305,0],85:[0,.68333,.16389,0],86:[0,.68333,.18361,0],87:[0,.68333,.18361,0],88:[0,.68333,.15806,0],89:[0,.68333,.19383,0],90:[0,.68333,.14528,0],91:[.25,.75,.1875,0],93:[.25,.75,.10528,0],94:[0,.69444,.06646,0],95:[.31,.12056,.09208,0],97:[0,.43056,.07671,0],98:[0,.69444,.06312,0],99:[0,.43056,.05653,0],100:[0,.69444,.10333,0],101:[0,.43056,.07514,0],102:[.19444,.69444,.21194,0],103:[.19444,.43056,.08847,0],104:[0,.69444,.07671,0],105:[0,.65536,.1019,0],106:[.19444,.65536,.14467,0],107:[0,.69444,.10764,0],108:[0,.69444,.10333,0],109:[0,.43056,.07671,0],110:[0,.43056,.07671,0],111:[0,.43056,.06312,0],112:[.19444,.43056,.06312,0],113:[.19444,.43056,.08847,0],114:[0,.43056,.10764,0],115:[0,.43056,.08208,0],116:[0,.61508,.09486,0],117:[0,.43056,.07671,0],118:[0,.43056,.10764,0],119:[0,.43056,.10764,0],120:[0,.43056,.12042,0],121:[.19444,.43056,.08847,0],122:[0,.43056,.12292,0],126:[.35,.31786,.11585,0],163:[0,.69444,0,0],305:[0,.43056,0,.02778],567:[.19444,.43056,0,.08334],768:[0,.69444,0,0],769:[0,.69444,.09694,0],770:[0,.69444,.06646,0],771:[0,.66786,.11585,0],772:[0,.56167,.10333,0],774:[0,.69444,.10806,0],775:[0,.66786,.11752,0],776:[0,.66786,.10474,0],778:[0,.69444,0,0],779:[0,.69444,.1225,0],780:[0,.62847,.08295,0],915:[0,.68333,.13305,0],916:[0,.68333,0,0],920:[0,.68333,.09403,0],923:[0,.68333,0,0],926:[0,.68333,.15294,0],928:[0,.68333,.16389,0],931:[0,.68333,.12028,0],933:[0,.68333,.11111,0],934:[0,.68333,.05986,0],936:[0,.68333,.11111,0],937:[0,.68333,.10257,0],8211:[0,.43056,.09208,0],8212:[0,.43056,.09208,0],8216:[0,.69444,.12417,0],8217:[0,.69444,.12417,0],8220:[0,.69444,.1685,0],8221:[0,.69444,.06961,0],8463:[0,.68889,0,0]},"Main-Regular":{32:[0,0,0,0],33:[0,.69444,0,0],34:[0,.69444,0,0],35:[.19444,.69444,0,0],36:[.05556,.75,0,0],37:[.05556,.75,0,0],38:[0,.69444,0,0],39:[0,.69444,0,0],40:[.25,.75,0,0],41:[.25,.75,0,0],42:[0,.75,0,0],43:[.08333,.58333,0,0],44:[.19444,.10556,0,0],45:[0,.43056,0,0],46:[0,.10556,0,0],47:[.25,.75,0,0],48:[0,.64444,0,0],49:[0,.64444,0,0],50:[0,.64444,0,0],51:[0,.64444,0,0],52:[0,.64444,0,0],53:[0,.64444,0,0],54:[0,.64444,0,0],55:[0,.64444,0,0],56:[0,.64444,0,0],57:[0,.64444,0,0],58:[0,.43056,0,0],59:[.19444,.43056,0,0],60:[.0391,.5391,0,0],61:[-.13313,.36687,0,0],62:[.0391,.5391,0,0],63:[0,.69444,0,0],64:[0,.69444,0,0],65:[0,.68333,0,0],66:[0,.68333,0,0],67:[0,.68333,0,0],68:[0,.68333,0,0],69:[0,.68333,0,0],70:[0,.68333,0,0],71:[0,.68333,0,0],72:[0,.68333,0,0],73:[0,.68333,0,0],74:[0,.68333,0,0],75:[0,.68333,0,0],76:[0,.68333,0,0],77:[0,.68333,0,0],78:[0,.68333,0,0],79:[0,.68333,0,0],80:[0,.68333,0,0],81:[.19444,.68333,0,0],82:[0,.68333,0,0],83:[0,.68333,0,0],84:[0,.68333,0,0],85:[0,.68333,0,0],86:[0,.68333,.01389,0],87:[0,.68333,.01389,0],88:[0,.68333,0,0],89:[0,.68333,.025,0],90:[0,.68333,0,0],91:[.25,.75,0,0],92:[.25,.75,0,0],93:[.25,.75,0,0],94:[0,.69444,0,0],95:[.31,.12056,.02778,0],96:[0,.69444,0,0],97:[0,.43056,0,0],98:[0,.69444,0,0],99:[0,.43056,0,0],100:[0,.69444,0,0],101:[0,.43056,0,0],102:[0,.69444,.07778,0],103:[.19444,.43056,.01389,0],104:[0,.69444,0,0],105:[0,.66786,0,0],106:[.19444,.66786,0,0],107:[0,.69444,0,0],108:[0,.69444,0,0],109:[0,.43056,0,0],110:[0,.43056,0,0],111:[0,.43056,0,0],112:[.19444,.43056,0,0],113:[.19444,.43056,0,0],114:[0,.43056,0,0],115:[0,.43056,0,0],116:[0,.61508,0,0],117:[0,.43056,0,0],118:[0,.43056,.01389,0],119:[0,.43056,.01389,0],120:[0,.43056,0,0],121:[.19444,.43056,.01389,0],122:[0,.43056,0,0],123:[.25,.75,0,0],124:[.25,.75,0,0],125:[.25,.75,0,0],126:[.35,.31786,0,0],160:[0,0,0,0],168:[0,.66786,0,0],172:[0,.43056,0,0],175:[0,.56778,0,0],176:[0,.69444,0,0],177:[.08333,.58333,0,0],180:[0,.69444,0,0],215:[.08333,.58333,0,0],247:[.08333,.58333,0,0],305:[0,.43056,0,0],567:[.19444,.43056,0,0],710:[0,.69444,0,0],711:[0,.62847,0,0],713:[0,.56778,0,0],714:[0,.69444,0,0],715:[0,.69444,0,0],728:[0,.69444,0,0],729:[0,.66786,0,0],730:[0,.69444,0,0],732:[0,.66786,0,0],768:[0,.69444,0,0],769:[0,.69444,0,0],770:[0,.69444,0,0],771:[0,.66786,0,0],772:[0,.56778,0,0],774:[0,.69444,0,0],775:[0,.66786,0,0],776:[0,.66786,0,0],778:[0,.69444,0,0],779:[0,.69444,0,0],780:[0,.62847,0,0],824:[.19444,.69444,0,0],915:[0,.68333,0,0],916:[0,.68333,0,0],920:[0,.68333,0,0],923:[0,.68333,0,0],926:[0,.68333,0,0],928:[0,.68333,0,0],931:[0,.68333,0,0],933:[0,.68333,0,0],934:[0,.68333,0,0],936:[0,.68333,0,0],937:[0,.68333,0,0],8211:[0,.43056,.02778,0],8212:[0,.43056,.02778,0],8216:[0,.69444,0,0],8217:[0,.69444,0,0],8220:[0,.69444,0,0],8221:[0,.69444,0,0],8224:[.19444,.69444,0,0],8225:[.19444,.69444,0,0],8230:[0,.12,0,0],8242:[0,.55556,0,0],8407:[0,.71444,.15382,0],8463:[0,.68889,0,0],8465:[0,.69444,0,0],8467:[0,.69444,0,.11111],8472:[.19444,.43056,0,.11111],8476:[0,.69444,0,0],8501:[0,.69444,0,0],8592:[-.13313,.36687,0,0],8593:[.19444,.69444,0,0],8594:[-.13313,.36687,0,0],8595:[.19444,.69444,0,0],8596:[-.13313,.36687,0,0],8597:[.25,.75,0,0],8598:[.19444,.69444,0,0],8599:[.19444,.69444,0,0],8600:[.19444,.69444,0,0],8601:[.19444,.69444,0,0],8614:[.011,.511,0,0],8617:[.011,.511,0,0],8618:[.011,.511,0,0],8636:[-.13313,.36687,0,0],8637:[-.13313,.36687,0,0],8640:[-.13313,.36687,0,0],8641:[-.13313,.36687,0,0],8652:[.011,.671,0,0],8656:[-.13313,.36687,0,0],8657:[.19444,.69444,0,0],8658:[-.13313,.36687,0,0],8659:[.19444,.69444,0,0],8660:[-.13313,.36687,0,0],8661:[.25,.75,0,0],8704:[0,.69444,0,0],8706:[0,.69444,.05556,.08334],8707:[0,.69444,0,0],8709:[.05556,.75,0,0],8711:[0,.68333,0,0],8712:[.0391,.5391,0,0],8715:[.0391,.5391,0,0],8722:[.08333,.58333,0,0],8723:[.08333,.58333,0,0],8725:[.25,.75,0,0],8726:[.25,.75,0,0],8727:[-.03472,.46528,0,0],8728:[-.05555,.44445,0,0],8729:[-.05555,.44445,0,0],8730:[.2,.8,0,0],8733:[0,.43056,0,0],8734:[0,.43056,0,0],8736:[0,.69224,0,0],8739:[.25,.75,0,0],8741:[.25,.75,0,0],8743:[0,.55556,0,0],8744:[0,.55556,0,0],8745:[0,.55556,0,0],8746:[0,.55556,0,0],8747:[.19444,.69444,.11111,0],8764:[-.13313,.36687,0,0],8768:[.19444,.69444,0,0],8771:[-.03625,.46375,0,0],8773:[-.022,.589,0,0],8776:[-.01688,.48312,0,0],8781:[-.03625,.46375,0,0],8784:[-.133,.67,0,0],8800:[.215,.716,0,0],8801:[-.03625,.46375,0,0],8804:[.13597,.63597,0,0],8805:[.13597,.63597,0,0],8810:[.0391,.5391,0,0],8811:[.0391,.5391,0,0],8826:[.0391,.5391,0,0],8827:[.0391,.5391,0,0],8834:[.0391,.5391,0,0],8835:[.0391,.5391,0,0],8838:[.13597,.63597,0,0],8839:[.13597,.63597,0,0],8846:[0,.55556,0,0],8849:[.13597,.63597,0,0],8850:[.13597,.63597,0,0],8851:[0,.55556,0,0],8852:[0,.55556,0,0],8853:[.08333,.58333,0,0],8854:[.08333,.58333,0,0],8855:[.08333,.58333,0,0],8856:[.08333,.58333,0,0],8857:[.08333,.58333,0,0],8866:[0,.69444,0,0],8867:[0,.69444,0,0],8868:[0,.69444,0,0],8869:[0,.69444,0,0],8872:[.249,.75,0,0],8900:[-.05555,.44445,0,0],8901:[-.05555,.44445,0,0],8902:[-.03472,.46528,0,0],8904:[.005,.505,0,0],8942:[.03,.9,0,0],8943:[-.19,.31,0,0],8945:[-.1,.82,0,0],8968:[.25,.75,0,0],8969:[.25,.75,0,0],8970:[.25,.75,0,0],8971:[.25,.75,0,0],8994:[-.14236,.35764,0,0],8995:[-.14236,.35764,0,0],9136:[.244,.744,0,0],9137:[.244,.744,0,0],9651:[.19444,.69444,0,0],9657:[-.03472,.46528,0,0],9661:[.19444,.69444,0,0],9667:[-.03472,.46528,0,0],9711:[.19444,.69444,0,0],9824:[.12963,.69444,0,0],9825:[.12963,.69444,0,0],9826:[.12963,.69444,0,0],9827:[.12963,.69444,0,0],9837:[0,.75,0,0],9838:[.19444,.69444,0,0],9839:[.19444,.69444,0,0],10216:[.25,.75,0,0],10217:[.25,.75,0,0],10222:[.244,.744,0,0],10223:[.244,.744,0,0],10229:[.011,.511,0,0],10230:[.011,.511,0,0],10231:[.011,.511,0,0],10232:[.024,.525,0,0],10233:[.024,.525,0,0],10234:[.024,.525,0,0],10236:[.011,.511,0,0],10815:[0,.68333,0,0],10927:[.13597,.63597,0,0],10928:[.13597,.63597,0,0]},"Math-BoldItalic":{47:[.19444,.69444,0,0],65:[0,.68611,0,0],66:[0,.68611,.04835,0],67:[0,.68611,.06979,0],68:[0,.68611,.03194,0],69:[0,.68611,.05451,0],70:[0,.68611,.15972,0],71:[0,.68611,0,0],72:[0,.68611,.08229,0],73:[0,.68611,.07778,0],74:[0,.68611,.10069,0],75:[0,.68611,.06979,0],76:[0,.68611,0,0],77:[0,.68611,.11424,0],78:[0,.68611,.11424,0],79:[0,.68611,.03194,0],80:[0,.68611,.15972,0],81:[.19444,.68611,0,0],82:[0,.68611,.00421,0],83:[0,.68611,.05382,0],84:[0,.68611,.15972,0],85:[0,.68611,.11424,0],86:[0,.68611,.25555,0],87:[0,.68611,.15972,0],88:[0,.68611,.07778,0],89:[0,.68611,.25555,0],90:[0,.68611,.06979,0],97:[0,.44444,0,0],98:[0,.69444,0,0],99:[0,.44444,0,0],100:[0,.69444,0,0],101:[0,.44444,0,0],102:[.19444,.69444,.11042,0],103:[.19444,.44444,.03704,0],104:[0,.69444,0,0],105:[0,.69326,0,0],106:[.19444,.69326,.0622,0],107:[0,.69444,.01852,0],108:[0,.69444,.0088,0],109:[0,.44444,0,0],110:[0,.44444,0,0],111:[0,.44444,0,0],112:[.19444,.44444,0,0],113:[.19444,.44444,.03704,0],114:[0,.44444,.03194,0],115:[0,.44444,0,0],116:[0,.63492,0,0],117:[0,.44444,0,0],118:[0,.44444,.03704,0],119:[0,.44444,.02778,0],120:[0,.44444,0,0],121:[.19444,.44444,.03704,0],122:[0,.44444,.04213,0],915:[0,.68611,.15972,0],916:[0,.68611,0,0],920:[0,.68611,.03194,0],923:[0,.68611,0,0],926:[0,.68611,.07458,0],928:[0,.68611,.08229,0],931:[0,.68611,.05451,0],933:[0,.68611,.15972,0],934:[0,.68611,0,0],936:[0,.68611,.11653,0],937:[0,.68611,.04835,0],945:[0,.44444,0,0],946:[.19444,.69444,.03403,0],947:[.19444,.44444,.06389,0],948:[0,.69444,.03819,0],949:[0,.44444,0,0],950:[.19444,.69444,.06215,0],951:[.19444,.44444,.03704,0],952:[0,.69444,.03194,0],953:[0,.44444,0,0],954:[0,.44444,0,0],955:[0,.69444,0,0],956:[.19444,.44444,0,0],957:[0,.44444,.06898,0],958:[.19444,.69444,.03021,0],959:[0,.44444,0,0],960:[0,.44444,.03704,0],961:[.19444,.44444,0,0],962:[.09722,.44444,.07917,0],963:[0,.44444,.03704,0],964:[0,.44444,.13472,0],965:[0,.44444,.03704,0],966:[.19444,.44444,0,0],967:[.19444,.44444,0,0],968:[.19444,.69444,.03704,0],969:[0,.44444,.03704,0],977:[0,.69444,0,0],981:[.19444,.69444,0,0],982:[0,.44444,.03194,0],1009:[.19444,.44444,0,0],1013:[0,.44444,0,0]},"Math-Italic":{47:[.19444,.69444,0,0],65:[0,.68333,0,.13889],66:[0,.68333,.05017,.08334],67:[0,.68333,.07153,.08334],68:[0,.68333,.02778,.05556],69:[0,.68333,.05764,.08334],70:[0,.68333,.13889,.08334],71:[0,.68333,0,.08334],72:[0,.68333,.08125,.05556],73:[0,.68333,.07847,.11111],74:[0,.68333,.09618,.16667],75:[0,.68333,.07153,.05556],76:[0,.68333,0,.02778],77:[0,.68333,.10903,.08334],78:[0,.68333,.10903,.08334],79:[0,.68333,.02778,.08334],80:[0,.68333,.13889,.08334],81:[.19444,.68333,0,.08334],82:[0,.68333,.00773,.08334],83:[0,.68333,.05764,.08334],84:[0,.68333,.13889,.08334],85:[0,.68333,.10903,.02778],86:[0,.68333,.22222,0],87:[0,.68333,.13889,0],88:[0,.68333,.07847,.08334],89:[0,.68333,.22222,0],90:[0,.68333,.07153,.08334],97:[0,.43056,0,0],98:[0,.69444,0,0],99:[0,.43056,0,.05556],100:[0,.69444,0,.16667],101:[0,.43056,0,.05556],102:[.19444,.69444,.10764,.16667],103:[.19444,.43056,.03588,.02778],104:[0,.69444,0,0],105:[0,.65952,0,0],106:[.19444,.65952,.05724,0],107:[0,.69444,.03148,0],108:[0,.69444,.01968,.08334],109:[0,.43056,0,0],110:[0,.43056,0,0],111:[0,.43056,0,.05556],112:[.19444,.43056,0,.08334],113:[.19444,.43056,.03588,.08334],114:[0,.43056,.02778,.05556],115:[0,.43056,0,.05556],116:[0,.61508,0,.08334],117:[0,.43056,0,.02778],118:[0,.43056,.03588,.02778],119:[0,.43056,.02691,.08334],120:[0,.43056,0,.02778],121:[.19444,.43056,.03588,.05556],122:[0,.43056,.04398,.05556],915:[0,.68333,.13889,.08334],916:[0,.68333,0,.16667],920:[0,.68333,.02778,.08334],923:[0,.68333,0,.16667],926:[0,.68333,.07569,.08334],928:[0,.68333,.08125,.05556],931:[0,.68333,.05764,.08334],933:[0,.68333,.13889,.05556],934:[0,.68333,0,.08334],936:[0,.68333,.11,.05556],937:[0,.68333,.05017,.08334],945:[0,.43056,.0037,.02778],946:[.19444,.69444,.05278,.08334],947:[.19444,.43056,.05556,0],948:[0,.69444,.03785,.05556],949:[0,.43056,0,.08334],950:[.19444,.69444,.07378,.08334],951:[.19444,.43056,.03588,.05556],952:[0,.69444,.02778,.08334],953:[0,.43056,0,.05556],954:[0,.43056,0,0],955:[0,.69444,0,0],956:[.19444,.43056,0,.02778],957:[0,.43056,.06366,.02778],958:[.19444,.69444,.04601,.11111],959:[0,.43056,0,.05556],960:[0,.43056,.03588,0],961:[.19444,.43056,0,.08334],962:[.09722,.43056,.07986,.08334],963:[0,.43056,.03588,0],964:[0,.43056,.1132,.02778],965:[0,.43056,.03588,.02778],966:[.19444,.43056,0,.08334],967:[.19444,.43056,0,.05556],968:[.19444,.69444,.03588,.11111],969:[0,.43056,.03588,0],977:[0,.69444,0,.08334],981:[.19444,.69444,0,.08334],982:[0,.43056,.02778,0],1009:[.19444,.43056,0,.08334],1013:[0,.43056,0,.05556]},"Math-Regular":{65:[0,.68333,0,.13889],66:[0,.68333,.05017,.08334],67:[0,.68333,.07153,.08334],68:[0,.68333,.02778,.05556],69:[0,.68333,.05764,.08334],70:[0,.68333,.13889,.08334],71:[0,.68333,0,.08334],72:[0,.68333,.08125,.05556],73:[0,.68333,.07847,.11111],74:[0,.68333,.09618,.16667],75:[0,.68333,.07153,.05556],76:[0,.68333,0,.02778],77:[0,.68333,.10903,.08334],78:[0,.68333,.10903,.08334],79:[0,.68333,.02778,.08334],80:[0,.68333,.13889,.08334],81:[.19444,.68333,0,.08334],82:[0,.68333,.00773,.08334],83:[0,.68333,.05764,.08334],84:[0,.68333,.13889,.08334],85:[0,.68333,.10903,.02778],86:[0,.68333,.22222,0],87:[0,.68333,.13889,0],88:[0,.68333,.07847,.08334],89:[0,.68333,.22222,0],90:[0,.68333,.07153,.08334],97:[0,.43056,0,0],98:[0,.69444,0,0],99:[0,.43056,0,.05556],100:[0,.69444,0,.16667],101:[0,.43056,0,.05556],102:[.19444,.69444,.10764,.16667],103:[.19444,.43056,.03588,.02778],104:[0,.69444,0,0],105:[0,.65952,0,0],106:[.19444,.65952,.05724,0],107:[0,.69444,.03148,0],108:[0,.69444,.01968,.08334],109:[0,.43056,0,0],110:[0,.43056,0,0],111:[0,.43056,0,.05556],112:[.19444,.43056,0,.08334],113:[.19444,.43056,.03588,.08334],114:[0,.43056,.02778,.05556],115:[0,.43056,0,.05556],116:[0,.61508,0,.08334],117:[0,.43056,0,.02778],118:[0,.43056,.03588,.02778],119:[0,.43056,.02691,.08334],120:[0,.43056,0,.02778],121:[.19444,.43056,.03588,.05556],122:[0,.43056,.04398,.05556],915:[0,.68333,.13889,.08334],916:[0,.68333,0,.16667],920:[0,.68333,.02778,.08334],923:[0,.68333,0,.16667],926:[0,.68333,.07569,.08334],928:[0,.68333,.08125,.05556],931:[0,.68333,.05764,.08334],933:[0,.68333,.13889,.05556],934:[0,.68333,0,.08334],936:[0,.68333,.11,.05556],937:[0,.68333,.05017,.08334],945:[0,.43056,.0037,.02778],946:[.19444,.69444,.05278,.08334],947:[.19444,.43056,.05556,0],948:[0,.69444,.03785,.05556],949:[0,.43056,0,.08334],950:[.19444,.69444,.07378,.08334],951:[.19444,.43056,.03588,.05556],952:[0,.69444,.02778,.08334],953:[0,.43056,0,.05556],954:[0,.43056,0,0],955:[0,.69444,0,0],956:[.19444,.43056,0,.02778],957:[0,.43056,.06366,.02778],958:[.19444,.69444,.04601,.11111],959:[0,.43056,0,.05556],960:[0,.43056,.03588,0],961:[.19444,.43056,0,.08334],962:[.09722,.43056,.07986,.08334],963:[0,.43056,.03588,0],964:[0,.43056,.1132,.02778],965:[0,.43056,.03588,.02778],966:[.19444,.43056,0,.08334],967:[.19444,.43056,0,.05556],968:[.19444,.69444,.03588,.11111],969:[0,.43056,.03588,0],977:[0,.69444,0,.08334],981:[.19444,.69444,0,.08334],982:[0,.43056,.02778,0],1009:[.19444,.43056,0,.08334],1013:[0,.43056,0,.05556]},"SansSerif-Regular":{33:[0,.69444,0,0],34:[0,.69444,0,0],35:[.19444,.69444,0,0],36:[.05556,.75,0,0],37:[.05556,.75,0,0],38:[0,.69444,0,0],39:[0,.69444,0,0],40:[.25,.75,0,0],41:[.25,.75,0,0],42:[0,.75,0,0],43:[.08333,.58333,0,0],44:[.125,.08333,0,0],45:[0,.44444,0,0],46:[0,.08333,0,0],47:[.25,.75,0,0],48:[0,.65556,0,0],49:[0,.65556,0,0],50:[0,.65556,0,0],51:[0,.65556,0,0],52:[0,.65556,0,0],53:[0,.65556,0,0],54:[0,.65556,0,0],55:[0,.65556,0,0],56:[0,.65556,0,0],57:[0,.65556,0,0],58:[0,.44444,0,0],59:[.125,.44444,0,0],61:[-.13,.37,0,0],63:[0,.69444,0,0],64:[0,.69444,0,0],65:[0,.69444,0,0],66:[0,.69444,0,0],67:[0,.69444,0,0],68:[0,.69444,0,0],69:[0,.69444,0,0],70:[0,.69444,0,0],71:[0,.69444,0,0],72:[0,.69444,0,0],73:[0,.69444,0,0],74:[0,.69444,0,0],75:[0,.69444,0,0],76:[0,.69444,0,0],77:[0,.69444,0,0],78:[0,.69444,0,0],79:[0,.69444,0,0],80:[0,.69444,0,0],81:[.125,.69444,0,0],82:[0,.69444,0,0],83:[0,.69444,0,0],84:[0,.69444,0,0],85:[0,.69444,0,0],86:[0,.69444,.01389,0],87:[0,.69444,.01389,0],88:[0,.69444,0,0],89:[0,.69444,.025,0],90:[0,.69444,0,0],91:[.25,.75,0,0],93:[.25,.75,0,0],94:[0,.69444,0,0],95:[.35,.09444,.02778,0],97:[0,.44444,0,0],98:[0,.69444,0,0],99:[0,.44444,0,0],100:[0,.69444,0,0],101:[0,.44444,0,0],102:[0,.69444,.06944,0],103:[.19444,.44444,.01389,0],104:[0,.69444,0,0],105:[0,.67937,0,0],106:[.19444,.67937,0,0],107:[0,.69444,0,0],108:[0,.69444,0,0],109:[0,.44444,0,0],110:[0,.44444,0,0],111:[0,.44444,0,0],112:[.19444,.44444,0,0],113:[.19444,.44444,0,0],114:[0,.44444,.01389,0],115:[0,.44444,0,0],116:[0,.57143,0,0],117:[0,.44444,0,0],118:[0,.44444,.01389,0],119:[0,.44444,.01389,0],120:[0,.44444,0,0],121:[.19444,.44444,.01389,0],122:[0,.44444,0,0],126:[.35,.32659,0,0],305:[0,.44444,0,0],567:[.19444,.44444,0,0],768:[0,.69444,0,0],769:[0,.69444,0,0],770:[0,.69444,0,0],771:[0,.67659,0,0],772:[0,.60889,0,0],774:[0,.69444,0,0],775:[0,.67937,0,0],776:[0,.67937,0,0],778:[0,.69444,0,0],779:[0,.69444,0,0],780:[0,.63194,0,0],915:[0,.69444,0,0],916:[0,.69444,0,0],920:[0,.69444,0,0],923:[0,.69444,0,0],926:[0,.69444,0,0],928:[0,.69444,0,0],931:[0,.69444,0,0],933:[0,.69444,0,0],934:[0,.69444,0,0],936:[0,.69444,0,0],937:[0,.69444,0,0],8211:[0,.44444,.02778,0],8212:[0,.44444,.02778,0],8216:[0,.69444,0,0],8217:[0,.69444,0,0],8220:[0,.69444,0,0],8221:[0,.69444,0,0]},"Script-Regular":{65:[0,.7,.22925,0],66:[0,.7,.04087,0],67:[0,.7,.1689,0],68:[0,.7,.09371,0],69:[0,.7,.18583,0],70:[0,.7,.13634,0],71:[0,.7,.17322,0],72:[0,.7,.29694,0],73:[0,.7,.19189,0],74:[.27778,.7,.19189,0],75:[0,.7,.31259,0],76:[0,.7,.19189,0],77:[0,.7,.15981,0],78:[0,.7,.3525,0],79:[0,.7,.08078,0],80:[0,.7,.08078,0],81:[0,.7,.03305,0],82:[0,.7,.06259,0],83:[0,.7,.19189,0],84:[0,.7,.29087,0],85:[0,.7,.25815,0],86:[0,.7,.27523,0],87:[0,.7,.27523,0],88:[0,.7,.26006,0],89:[0,.7,.2939,0],90:[0,.7,.24037,0]},"Size1-Regular":{40:[.35001,.85,0,0],41:[.35001,.85,0,0],47:[.35001,.85,0,0],91:[.35001,.85,0,0],92:[.35001,.85,0,0],93:[.35001,.85,0,0],123:[.35001,.85,0,0],125:[.35001,.85,0,0],710:[0,.72222,0,0],732:[0,.72222,0,0],770:[0,.72222,0,0],771:[0,.72222,0,0],8214:[-99e-5,.601,0,0],8593:[1e-5,.6,0,0],8595:[1e-5,.6,0,0],8657:[1e-5,.6,0,0],8659:[1e-5,.6,0,0],8719:[.25001,.75,0,0],8720:[.25001,.75,0,0],8721:[.25001,.75,0,0],8730:[.35001,.85,0,0],8739:[-.00599,.606,0,0],8741:[-.00599,.606,0,0],8747:[.30612,.805,.19445,0],8748:[.306,.805,.19445,0],8749:[.306,.805,.19445,0],8750:[.30612,.805,.19445,0],8896:[.25001,.75,0,0],8897:[.25001,.75,0,0],8898:[.25001,.75,0,0],8899:[.25001,.75,0,0],8968:[.35001,.85,0,0],8969:[.35001,.85,0,0],8970:[.35001,.85,0,0],8971:[.35001,.85,0,0],9168:[-99e-5,.601,0,0],10216:[.35001,.85,0,0],10217:[.35001,.85,0,0],10752:[.25001,.75,0,0],10753:[.25001,.75,0,0],10754:[.25001,.75,0,0],10756:[.25001,.75,0,0],10758:[.25001,.75,0,0]},"Size2-Regular":{40:[.65002,1.15,0,0],41:[.65002,1.15,0,0],47:[.65002,1.15,0,0],91:[.65002,1.15,0,0],92:[.65002,1.15,0,0],93:[.65002,1.15,0,0],123:[.65002,1.15,0,0],125:[.65002,1.15,0,0],710:[0,.75,0,0],732:[0,.75,0,0],770:[0,.75,0,0],771:[0,.75,0,0],8719:[.55001,1.05,0,0],8720:[.55001,1.05,0,0],8721:[.55001,1.05,0,0],8730:[.65002,1.15,0,0],8747:[.86225,1.36,.44445,0],8748:[.862,1.36,.44445,0],8749:[.862,1.36,.44445,0],8750:[.86225,1.36,.44445,0],8896:[.55001,1.05,0,0],8897:[.55001,1.05,0,0],8898:[.55001,1.05,0,0],8899:[.55001,1.05,0,0],8968:[.65002,1.15,0,0],8969:[.65002,1.15,0,0],8970:[.65002,1.15,0,0],8971:[.65002,1.15,0,0],10216:[.65002,1.15,0,0],10217:[.65002,1.15,0,0],10752:[.55001,1.05,0,0],10753:[.55001,1.05,0,0],10754:[.55001,1.05,0,0],10756:[.55001,1.05,0,0],10758:[.55001,1.05,0,0]},"Size3-Regular":{40:[.95003,1.45,0,0],41:[.95003,1.45,0,0],47:[.95003,1.45,0,0],91:[.95003,1.45,0,0],92:[.95003,1.45,0,0],93:[.95003,1.45,0,0],123:[.95003,1.45,0,0],125:[.95003,1.45,0,0],710:[0,.75,0,0],732:[0,.75,0,0],770:[0,.75,0,0],771:[0,.75,0,0],8730:[.95003,1.45,0,0],8968:[.95003,1.45,0,0],8969:[.95003,1.45,0,0],8970:[.95003,1.45,0,0],8971:[.95003,1.45,0,0],10216:[.95003,1.45,0,0],10217:[.95003,1.45,0,0]},"Size4-Regular":{40:[1.25003,1.75,0,0],41:[1.25003,1.75,0,0],47:[1.25003,1.75,0,0],91:[1.25003,1.75,0,0],92:[1.25003,1.75,0,0],93:[1.25003,1.75,0,0],123:[1.25003,1.75,0,0],125:[1.25003,1.75,0,0],710:[0,.825,0,0],732:[0,.825,0,0],770:[0,.825,0,0],771:[0,.825,0,0],8730:[1.25003,1.75,0,0],8968:[1.25003,1.75,0,0],8969:[1.25003,1.75,0,0],8970:[1.25003,1.75,0,0],8971:[1.25003,1.75,0,0],9115:[.64502,1.155,0,0],9116:[1e-5,.6,0,0],9117:[.64502,1.155,0,0],9118:[.64502,1.155,0,0],9119:[1e-5,.6,0,0],9120:[.64502,1.155,0,0],9121:[.64502,1.155,0,0],9122:[-99e-5,.601,0,0],9123:[.64502,1.155,0,0],9124:[.64502,1.155,0,0],9125:[-99e-5,.601,0,0],9126:[.64502,1.155,0,0],9127:[1e-5,.9,0,0],9128:[.65002,1.15,0,0],9129:[.90001,0,0,0],9130:[0,.3,0,0],9131:[1e-5,.9,0,0],9132:[.65002,1.15,0,0],9133:[.90001,0,0,0],9143:[.88502,.915,0,0],10216:[1.25003,1.75,0,0],10217:[1.25003,1.75,0,0],57344:[-.00499,.605,0,0],57345:[-.00499,.605,0,0],57680:[0,.12,0,0],57681:[0,.12,0,0],57682:[0,.12,0,0],57683:[0,.12,0,0]},"Typewriter-Regular":{33:[0,.61111,0,0],34:[0,.61111,0,0],35:[0,.61111,0,0],36:[.08333,.69444,0,0],37:[.08333,.69444,0,0],38:[0,.61111,0,0],39:[0,.61111,0,0],40:[.08333,.69444,0,0],41:[.08333,.69444,0,0],42:[0,.52083,0,0],43:[-.08056,.53055,0,0],44:[.13889,.125,0,0],45:[-.08056,.53055,0,0],46:[0,.125,0,0],47:[.08333,.69444,0,0],48:[0,.61111,0,0],49:[0,.61111,0,0],50:[0,.61111,0,0],51:[0,.61111,0,0],52:[0,.61111,0,0],53:[0,.61111,0,0],54:[0,.61111,0,0],55:[0,.61111,0,0],56:[0,.61111,0,0],57:[0,.61111,0,0],58:[0,.43056,0,0],59:[.13889,.43056,0,0],60:[-.05556,.55556,0,0],61:[-.19549,.41562,0,0],
62:[-.05556,.55556,0,0],63:[0,.61111,0,0],64:[0,.61111,0,0],65:[0,.61111,0,0],66:[0,.61111,0,0],67:[0,.61111,0,0],68:[0,.61111,0,0],69:[0,.61111,0,0],70:[0,.61111,0,0],71:[0,.61111,0,0],72:[0,.61111,0,0],73:[0,.61111,0,0],74:[0,.61111,0,0],75:[0,.61111,0,0],76:[0,.61111,0,0],77:[0,.61111,0,0],78:[0,.61111,0,0],79:[0,.61111,0,0],80:[0,.61111,0,0],81:[.13889,.61111,0,0],82:[0,.61111,0,0],83:[0,.61111,0,0],84:[0,.61111,0,0],85:[0,.61111,0,0],86:[0,.61111,0,0],87:[0,.61111,0,0],88:[0,.61111,0,0],89:[0,.61111,0,0],90:[0,.61111,0,0],91:[.08333,.69444,0,0],92:[.08333,.69444,0,0],93:[.08333,.69444,0,0],94:[0,.61111,0,0],95:[.09514,0,0,0],96:[0,.61111,0,0],97:[0,.43056,0,0],98:[0,.61111,0,0],99:[0,.43056,0,0],100:[0,.61111,0,0],101:[0,.43056,0,0],102:[0,.61111,0,0],103:[.22222,.43056,0,0],104:[0,.61111,0,0],105:[0,.61111,0,0],106:[.22222,.61111,0,0],107:[0,.61111,0,0],108:[0,.61111,0,0],109:[0,.43056,0,0],110:[0,.43056,0,0],111:[0,.43056,0,0],112:[.22222,.43056,0,0],113:[.22222,.43056,0,0],114:[0,.43056,0,0],115:[0,.43056,0,0],116:[0,.55358,0,0],117:[0,.43056,0,0],118:[0,.43056,0,0],119:[0,.43056,0,0],120:[0,.43056,0,0],121:[.22222,.43056,0,0],122:[0,.43056,0,0],123:[.08333,.69444,0,0],124:[.08333,.69444,0,0],125:[.08333,.69444,0,0],126:[0,.61111,0,0],127:[0,.61111,0,0],305:[0,.43056,0,0],567:[.22222,.43056,0,0],768:[0,.61111,0,0],769:[0,.61111,0,0],770:[0,.61111,0,0],771:[0,.61111,0,0],772:[0,.56555,0,0],774:[0,.61111,0,0],776:[0,.61111,0,0],778:[0,.61111,0,0],780:[0,.56597,0,0],915:[0,.61111,0,0],916:[0,.61111,0,0],920:[0,.61111,0,0],923:[0,.61111,0,0],926:[0,.61111,0,0],928:[0,.61111,0,0],931:[0,.61111,0,0],933:[0,.61111,0,0],934:[0,.61111,0,0],936:[0,.61111,0,0],937:[0,.61111,0,0],2018:[0,.61111,0,0],2019:[0,.61111,0,0],8242:[0,.61111,0,0]}}},{}],19:[function(e,t,r){var a=e("./utils");var i=e("./ParseError");function n(e,r,a){if(typeof e==="string"){e=[e]}if(typeof r==="number"){r={numArgs:r}}var i={numArgs:r.numArgs,argTypes:r.argTypes,greediness:r.greediness===undefined?1:r.greediness,allowedInText:!!r.allowedInText,numOptionalArgs:r.numOptionalArgs||0,infix:!!r.infix,handler:a};for(var n=0;n<e.length;++n){t.exports[e[n]]=i}}n("\\sqrt",{numArgs:1,numOptionalArgs:1},function(e,t){var r=t[0];var a=t[1];return{type:"sqrt",body:a,index:r}});n("\\text",{numArgs:1,argTypes:["text"],greediness:2},function(e,t){var r=t[0];var a;if(r.type==="ordgroup"){a=r.value}else{a=[r]}return{type:"text",body:a}});n("\\xmlClass",{numArgs:2,allowedInText:true,greediness:3,argTypes:["string","original"]},function(e,t){var r=t[0];var a=t[1];var i;if(a.type==="ordgroup"){i=a.value}else{i=[a]}return{type:"xmlClass",cl:r,value:i}});n("\\color",{numArgs:2,allowedInText:true,greediness:3,argTypes:["color","original"]},function(e,t){var r=t[0];var a=t[1];var i;if(a.type==="ordgroup"){i=a.value}else{i=[a]}return{type:"color",color:r.value,value:i}});n("\\overline",{numArgs:1},function(e,t){var r=t[0];return{type:"overline",body:r}});n("\\underline",{numArgs:1},function(e,t){var r=t[0];return{type:"underline",body:r}});n("\\rule",{numArgs:2,numOptionalArgs:1,argTypes:["size","size","size"]},function(e,t){var r=t[0];var a=t[1];var i=t[2];return{type:"rule",shift:r&&r.value,width:a.value,height:i.value}});n("\\cursor",{numArgs:1,numOptionalArgs:1,argTypes:["size","size"]},function(e,t){var r=t[0];var a=t[1];return{type:"cursor",shift:r&&r.value,height:a.value}});n("\\kern",{numArgs:1,argTypes:["size"]},function(e,t){return{type:"kern",dimension:t[0].value}});n("\\KaTeX",{numArgs:0},function(e){return{type:"katex"}});n("\\phantom",{numArgs:1},function(e,t){var r=t[0];var a;if(r.type==="ordgroup"){a=r.value}else{a=[r]}return{type:"phantom",value:a}});var s={"\\bigl":{type:"open",size:1},"\\Bigl":{type:"open",size:2},"\\biggl":{type:"open",size:3},"\\Biggl":{type:"open",size:4},"\\bigr":{type:"close",size:1},"\\Bigr":{type:"close",size:2},"\\biggr":{type:"close",size:3},"\\Biggr":{type:"close",size:4},"\\bigm":{type:"rel",size:1},"\\Bigm":{type:"rel",size:2},"\\biggm":{type:"rel",size:3},"\\Biggm":{type:"rel",size:4},"\\big":{type:"textord",size:1},"\\Big":{type:"textord",size:2},"\\bigg":{type:"textord",size:3},"\\Bigg":{type:"textord",size:4}};var l=["(",")","[","\\lbrack","]","\\rbrack","\\{","\\lbrace","\\}","\\rbrace","\\lfloor","\\rfloor","\\lceil","\\rceil","<",">","\\langle","\\rangle","\\lt","\\gt","\\lvert","\\rvert","\\lVert","\\rVert","\\lgroup","\\rgroup","\\lmoustache","\\rmoustache","/","\\backslash","|","\\vert","\\|","\\Vert","\\uparrow","\\Uparrow","\\downarrow","\\Downarrow","\\updownarrow","\\Updownarrow","."];var o={"\\Bbb":"\\mathbb","\\bold":"\\mathbf","\\frak":"\\mathfrak"};n(["\\blue","\\orange","\\pink","\\red","\\green","\\gray","\\purple","\\blueA","\\blueB","\\blueC","\\blueD","\\blueE","\\tealA","\\tealB","\\tealC","\\tealD","\\tealE","\\greenA","\\greenB","\\greenC","\\greenD","\\greenE","\\goldA","\\goldB","\\goldC","\\goldD","\\goldE","\\redA","\\redB","\\redC","\\redD","\\redE","\\maroonA","\\maroonB","\\maroonC","\\maroonD","\\maroonE","\\purpleA","\\purpleB","\\purpleC","\\purpleD","\\purpleE","\\mintA","\\mintB","\\mintC","\\grayA","\\grayB","\\grayC","\\grayD","\\grayE","\\grayF","\\grayG","\\grayH","\\grayI","\\kaBlue","\\kaGreen"],{numArgs:1,allowedInText:true,greediness:3},function(e,t){var r=t[0];var a;if(r.type==="ordgroup"){a=r.value}else{a=[r]}return{type:"color",color:"katex-"+e.funcName.slice(1),value:a}});n(["\\arcsin","\\arccos","\\arctan","\\arg","\\cos","\\cosh","\\cot","\\coth","\\csc","\\deg","\\dim","\\exp","\\hom","\\ker","\\lg","\\ln","\\log","\\sec","\\sin","\\sinh","\\tan","\\tanh"],{numArgs:0},function(e){return{type:"op",limits:false,symbol:false,body:e.funcName}});n(["\\det","\\gcd","\\inf","\\lim","\\liminf","\\limsup","\\max","\\min","\\Pr","\\sup"],{numArgs:0},function(e){return{type:"op",limits:true,symbol:false,body:e.funcName}});n(["\\int","\\iint","\\iiint","\\oint"],{numArgs:0},function(e){return{type:"op",limits:false,symbol:true,body:e.funcName}});n(["\\coprod","\\bigvee","\\bigwedge","\\biguplus","\\bigcap","\\bigcup","\\intop","\\prod","\\sum","\\bigotimes","\\bigoplus","\\bigodot","\\bigsqcup","\\smallint"],{numArgs:0},function(e){return{type:"op",limits:true,symbol:true,body:e.funcName}});n(["\\dfrac","\\frac","\\tfrac","\\dbinom","\\binom","\\tbinom"],{numArgs:2,greediness:2},function(e,t){var r=t[0];var a=t[1];var i;var n=null;var s=null;var l="auto";switch(e.funcName){case"\\dfrac":case"\\frac":case"\\tfrac":i=true;break;case"\\dbinom":case"\\binom":case"\\tbinom":i=false;n="(";s=")";break;default:throw new Error("Unrecognized genfrac command")}switch(e.funcName){case"\\dfrac":case"\\dbinom":l="display";break;case"\\tfrac":case"\\tbinom":l="text";break}return{type:"genfrac",numer:r,denom:a,hasBarLine:i,leftDelim:n,rightDelim:s,size:l}});n(["\\llap","\\rlap"],{numArgs:1,allowedInText:true},function(e,t){var r=t[0];return{type:e.funcName.slice(1),body:r}});n(["\\bigl","\\Bigl","\\biggl","\\Biggl","\\bigr","\\Bigr","\\biggr","\\Biggr","\\bigm","\\Bigm","\\biggm","\\Biggm","\\big","\\Big","\\bigg","\\Bigg","\\left","\\right"],{numArgs:1},function(e,t){var r=t[0];if(!a.contains(l,r.value)){throw new i("Invalid delimiter: '"+r.value+"' after '"+e.funcName+"'",r)}if(e.funcName==="\\left"||e.funcName==="\\right"){return{type:"leftright",value:r.value}}else{return{type:"delimsizing",size:s[e.funcName].size,delimType:s[e.funcName].type,value:r.value}}});n(["\\tiny","\\scriptsize","\\footnotesize","\\small","\\normalsize","\\large","\\Large","\\LARGE","\\huge","\\Huge"],0,null);n(["\\displaystyle","\\textstyle","\\scriptstyle","\\scriptscriptstyle"],0,null);n(["\\mathrm","\\mathit","\\mathbf","\\mathbb","\\mathcal","\\mathfrak","\\mathscr","\\mathsf","\\mathtt","\\Bbb","\\bold","\\frak"],{numArgs:1,greediness:2},function(e,t){var r=t[0];var a=e.funcName;if(a in o){a=o[a]}return{type:"font",font:a.slice(1),body:r}});n(["\\acute","\\grave","\\ddot","\\tilde","\\bar","\\breve","\\check","\\hat","\\vec","\\dot"],{numArgs:1},function(e,t){var r=t[0];return{type:"accent",accent:e.funcName,base:r}});n(["\\over","\\choose"],{numArgs:0,infix:true},function(e){var t;switch(e.funcName){case"\\over":t="\\frac";break;case"\\choose":t="\\binom";break;default:throw new Error("Unrecognized infix genfrac command")}return{type:"infix",replaceWith:t,token:e.token}});n(["\\\\","\\cr"],{numArgs:0,numOptionalArgs:1,argTypes:["size"]},function(e,t){var r=t[0];return{type:"cr",size:r}});n(["\\begin","\\end"],{numArgs:1,argTypes:["text"]},function(e,t){var r=t[0];if(r.type!=="ordgroup"){throw new i("Invalid environment name",r)}var a="";for(var n=0;n<r.value.length;++n){a+=r.value[n].value}return{type:"environment",name:a,nameGroup:r}})},{"./ParseError":6,"./utils":25}],20:[function(e,t,r){var a=e("./utils");function i(e,t){this.type=e;this.attributes={};this.children=t||[]}i.prototype.setAttribute=function(e,t){this.attributes[e]=t};i.prototype.toNode=function(){var e=document.createElementNS("http://www.w3.org/1998/Math/MathML",this.type);for(var t in this.attributes){if(Object.prototype.hasOwnProperty.call(this.attributes,t)){e.setAttribute(t,this.attributes[t])}}for(var r=0;r<this.children.length;r++){e.appendChild(this.children[r].toNode())}return e};i.prototype.toMarkup=function(){var e="<"+this.type;for(var t in this.attributes){if(Object.prototype.hasOwnProperty.call(this.attributes,t)){e+=" "+t+'="';e+=a.escape(this.attributes[t]);e+='"'}}e+=">";for(var r=0;r<this.children.length;r++){e+=this.children[r].toMarkup()}e+="</"+this.type+">";return e};function n(e){this.text=e}n.prototype.toNode=function(){return document.createTextNode(this.text)};n.prototype.toMarkup=function(){return a.escape(this.text)};t.exports={MathNode:i,TextNode:n}},{"./utils":25}],21:[function(e,t,r){function a(e,t,r,a,i){this.type=e;this.value=t;this.mode=r;if(a&&(!i||i.lexer===a.lexer)){this.lexer=a.lexer;this.start=a.start;this.end=(i||a).end}}t.exports={ParseNode:a}},{}],22:[function(e,t,r){var a=e("./Parser");var i=function(e,t){if(!(typeof e==="string"||e instanceof String)){throw new TypeError("KaTeX can only parse string typed expression")}var r=new a(e,t);return r.parse()};t.exports=i},{"./Parser":7}],23:[function(e,t,r){t.exports={math:{},text:{}};function a(e,r,a,i,n){t.exports[e][n]={font:r,group:a,replace:i}}var i="math";var n="text";var s="main";var l="ams";var o="accent";var u="bin";var p="close";var h="inner";var c="mathord";var v="op";var f="open";var m="punct";var d="rel";var g="spacing";var y="textord";a(i,s,d,"\u2261","\\equiv");a(i,s,d,"\u227a","\\prec");a(i,s,d,"\u227b","\\succ");a(i,s,d,"\u223c","\\sim");a(i,s,d,"\u22a5","\\perp");a(i,s,d,"\u2aaf","\\preceq");a(i,s,d,"\u2ab0","\\succeq");a(i,s,d,"\u2243","\\simeq");a(i,s,d,"\u2223","\\mid");a(i,s,d,"\u226a","\\ll");a(i,s,d,"\u226b","\\gg");a(i,s,d,"\u224d","\\asymp");a(i,s,d,"\u2225","\\parallel");a(i,s,d,"\u22c8","\\bowtie");a(i,s,d,"\u2323","\\smile");a(i,s,d,"\u2291","\\sqsubseteq");a(i,s,d,"\u2292","\\sqsupseteq");a(i,s,d,"\u2250","\\doteq");a(i,s,d,"\u2322","\\frown");a(i,s,d,"\u220b","\\ni");a(i,s,d,"\u221d","\\propto");a(i,s,d,"\u22a2","\\vdash");a(i,s,d,"\u22a3","\\dashv");a(i,s,d,"\u220b","\\owns");a(i,s,m,".","\\ldotp");a(i,s,m,"\u22c5","\\cdotp");a(i,s,y,"#","\\#");a(i,s,y,"&","\\&");a(i,s,y,"\u2135","\\aleph");a(i,s,y,"\u2200","\\forall");a(i,s,y,"\u210f","\\hbar");a(i,s,y,"\u2203","\\exists");a(i,s,y,"\u2207","\\nabla");a(i,s,y,"\u266d","\\flat");a(i,s,y,"\u2113","\\ell");a(i,s,y,"\u266e","\\natural");a(i,s,y,"\u2663","\\clubsuit");a(i,s,y,"\u2118","\\wp");a(i,s,y,"\u266f","\\sharp");a(i,s,y,"\u2662","\\diamondsuit");a(i,s,y,"\u211c","\\Re");a(i,s,y,"\u2661","\\heartsuit");a(i,s,y,"\u2111","\\Im");a(i,s,y,"\u2660","\\spadesuit");a(i,s,y,"\u2020","\\dag");a(i,s,y,"\u2021","\\ddag");a(i,s,p,"\u23b1","\\rmoustache");a(i,s,f,"\u23b0","\\lmoustache");a(i,s,p,"\u27ef","\\rgroup");a(i,s,f,"\u27ee","\\lgroup");a(i,s,u,"\u2213","\\mp");a(i,s,u,"\u2296","\\ominus");a(i,s,u,"\u228e","\\uplus");a(i,s,u,"\u2293","\\sqcap");a(i,s,u,"\u2217","\\ast");a(i,s,u,"\u2294","\\sqcup");a(i,s,u,"\u25ef","\\bigcirc");a(i,s,u,"\u2219","\\bullet");a(i,s,u,"\u2021","\\ddagger");a(i,s,u,"\u2240","\\wr");a(i,s,u,"\u2a3f","\\amalg");a(i,s,d,"\u27f5","\\longleftarrow");a(i,s,d,"\u21d0","\\Leftarrow");a(i,s,d,"\u27f8","\\Longleftarrow");a(i,s,d,"\u27f6","\\longrightarrow");a(i,s,d,"\u21d2","\\Rightarrow");a(i,s,d,"\u27f9","\\Longrightarrow");a(i,s,d,"\u2194","\\leftrightarrow");a(i,s,d,"\u27f7","\\longleftrightarrow");a(i,s,d,"\u21d4","\\Leftrightarrow");a(i,s,d,"\u27fa","\\Longleftrightarrow");a(i,s,d,"\u21a6","\\mapsto");a(i,s,d,"\u27fc","\\longmapsto");a(i,s,d,"\u2197","\\nearrow");a(i,s,d,"\u21a9","\\hookleftarrow");a(i,s,d,"\u21aa","\\hookrightarrow");a(i,s,d,"\u2198","\\searrow");a(i,s,d,"\u21bc","\\leftharpoonup");a(i,s,d,"\u21c0","\\rightharpoonup");a(i,s,d,"\u2199","\\swarrow");a(i,s,d,"\u21bd","\\leftharpoondown");a(i,s,d,"\u21c1","\\rightharpoondown");a(i,s,d,"\u2196","\\nwarrow");a(i,s,d,"\u21cc","\\rightleftharpoons");a(i,l,d,"\u226e","\\nless");a(i,l,d,"\ue010","\\nleqslant");a(i,l,d,"\ue011","\\nleqq");a(i,l,d,"\u2a87","\\lneq");a(i,l,d,"\u2268","\\lneqq");a(i,l,d,"\ue00c","\\lvertneqq");a(i,l,d,"\u22e6","\\lnsim");a(i,l,d,"\u2a89","\\lnapprox");a(i,l,d,"\u2280","\\nprec");a(i,l,d,"\u22e0","\\npreceq");a(i,l,d,"\u22e8","\\precnsim");a(i,l,d,"\u2ab9","\\precnapprox");a(i,l,d,"\u2241","\\nsim");a(i,l,d,"\ue006","\\nshortmid");a(i,l,d,"\u2224","\\nmid");a(i,l,d,"\u22ac","\\nvdash");a(i,l,d,"\u22ad","\\nvDash");a(i,l,d,"\u22ea","\\ntriangleleft");a(i,l,d,"\u22ec","\\ntrianglelefteq");a(i,l,d,"\u228a","\\subsetneq");a(i,l,d,"\ue01a","\\varsubsetneq");a(i,l,d,"\u2acb","\\subsetneqq");a(i,l,d,"\ue017","\\varsubsetneqq");a(i,l,d,"\u226f","\\ngtr");a(i,l,d,"\ue00f","\\ngeqslant");a(i,l,d,"\ue00e","\\ngeqq");a(i,l,d,"\u2a88","\\gneq");a(i,l,d,"\u2269","\\gneqq");a(i,l,d,"\ue00d","\\gvertneqq");a(i,l,d,"\u22e7","\\gnsim");a(i,l,d,"\u2a8a","\\gnapprox");a(i,l,d,"\u2281","\\nsucc");a(i,l,d,"\u22e1","\\nsucceq");a(i,l,d,"\u22e9","\\succnsim");a(i,l,d,"\u2aba","\\succnapprox");a(i,l,d,"\u2246","\\ncong");a(i,l,d,"\ue007","\\nshortparallel");a(i,l,d,"\u2226","\\nparallel");a(i,l,d,"\u22af","\\nVDash");a(i,l,d,"\u22eb","\\ntriangleright");a(i,l,d,"\u22ed","\\ntrianglerighteq");a(i,l,d,"\ue018","\\nsupseteqq");a(i,l,d,"\u228b","\\supsetneq");a(i,l,d,"\ue01b","\\varsupsetneq");a(i,l,d,"\u2acc","\\supsetneqq");a(i,l,d,"\ue019","\\varsupsetneqq");a(i,l,d,"\u22ae","\\nVdash");a(i,l,d,"\u2ab5","\\precneqq");a(i,l,d,"\u2ab6","\\succneqq");a(i,l,d,"\ue016","\\nsubseteqq");a(i,l,u,"\u22b4","\\unlhd");a(i,l,u,"\u22b5","\\unrhd");a(i,l,d,"\u219a","\\nleftarrow");a(i,l,d,"\u219b","\\nrightarrow");a(i,l,d,"\u21cd","\\nLeftarrow");a(i,l,d,"\u21cf","\\nRightarrow");a(i,l,d,"\u21ae","\\nleftrightarrow");a(i,l,d,"\u21ce","\\nLeftrightarrow");a(i,l,d,"\u25b3","\\vartriangle");a(i,l,y,"\u210f","\\hslash");a(i,l,y,"\u25bd","\\triangledown");a(i,l,y,"\u25ca","\\lozenge");a(i,l,y,"\u24c8","\\circledS");a(i,l,y,"\xae","\\circledR");a(i,l,y,"\u2221","\\measuredangle");a(i,l,y,"\u2204","\\nexists");a(i,l,y,"\u2127","\\mho");a(i,l,y,"\u2132","\\Finv");a(i,l,y,"\u2141","\\Game");a(i,l,y,"k","\\Bbbk");a(i,l,y,"\u2035","\\backprime");a(i,l,y,"\u25b2","\\blacktriangle");a(i,l,y,"\u25bc","\\blacktriangledown");a(i,l,y,"\u25a0","\\blacksquare");a(i,l,y,"\u29eb","\\blacklozenge");a(i,l,y,"\u2605","\\bigstar");a(i,l,y,"\u2222","\\sphericalangle");a(i,l,y,"\u2201","\\complement");a(i,l,y,"\xf0","\\eth");a(i,l,y,"\u2571","\\diagup");a(i,l,y,"\u2572","\\diagdown");a(i,l,y,"\u25a1","\\square");a(i,l,y,"\u25a1","\\Box");a(i,l,y,"\u25ca","\\Diamond");a(i,l,y,"\xa5","\\yen");a(i,l,y,"\u2713","\\checkmark");a(i,l,y,"\u2136","\\beth");a(i,l,y,"\u2138","\\daleth");a(i,l,y,"\u2137","\\gimel");a(i,l,y,"\u03dd","\\digamma");a(i,l,y,"\u03f0","\\varkappa");a(i,l,f,"\u250c","\\ulcorner");a(i,l,p,"\u2510","\\urcorner");a(i,l,f,"\u2514","\\llcorner");a(i,l,p,"\u2518","\\lrcorner");a(i,l,d,"\u2266","\\leqq");a(i,l,d,"\u2a7d","\\leqslant");a(i,l,d,"\u2a95","\\eqslantless");a(i,l,d,"\u2272","\\lesssim");a(i,l,d,"\u2a85","\\lessapprox");a(i,l,d,"\u224a","\\approxeq");a(i,l,u,"\u22d6","\\lessdot");a(i,l,d,"\u22d8","\\lll");a(i,l,d,"\u2276","\\lessgtr");a(i,l,d,"\u22da","\\lesseqgtr");a(i,l,d,"\u2a8b","\\lesseqqgtr");a(i,l,d,"\u2251","\\doteqdot");a(i,l,d,"\u2253","\\risingdotseq");a(i,l,d,"\u2252","\\fallingdotseq");a(i,l,d,"\u223d","\\backsim");a(i,l,d,"\u22cd","\\backsimeq");a(i,l,d,"\u2ac5","\\subseteqq");a(i,l,d,"\u22d0","\\Subset");a(i,l,d,"\u228f","\\sqsubset");a(i,l,d,"\u227c","\\preccurlyeq");a(i,l,d,"\u22de","\\curlyeqprec");a(i,l,d,"\u227e","\\precsim");a(i,l,d,"\u2ab7","\\precapprox");a(i,l,d,"\u22b2","\\vartriangleleft");a(i,l,d,"\u22b4","\\trianglelefteq");a(i,l,d,"\u22a8","\\vDash");a(i,l,d,"\u22aa","\\Vvdash");a(i,l,d,"\u2323","\\smallsmile");a(i,l,d,"\u2322","\\smallfrown");a(i,l,d,"\u224f","\\bumpeq");a(i,l,d,"\u224e","\\Bumpeq");a(i,l,d,"\u2267","\\geqq");a(i,l,d,"\u2a7e","\\geqslant");a(i,l,d,"\u2a96","\\eqslantgtr");a(i,l,d,"\u2273","\\gtrsim");a(i,l,d,"\u2a86","\\gtrapprox");a(i,l,u,"\u22d7","\\gtrdot");a(i,l,d,"\u22d9","\\ggg");a(i,l,d,"\u2277","\\gtrless");a(i,l,d,"\u22db","\\gtreqless");a(i,l,d,"\u2a8c","\\gtreqqless");a(i,l,d,"\u2256","\\eqcirc");a(i,l,d,"\u2257","\\circeq");a(i,l,d,"\u225c","\\triangleq");a(i,l,d,"\u223c","\\thicksim");a(i,l,d,"\u2248","\\thickapprox");a(i,l,d,"\u2ac6","\\supseteqq");a(i,l,d,"\u22d1","\\Supset");a(i,l,d,"\u2290","\\sqsupset");a(i,l,d,"\u227d","\\succcurlyeq");a(i,l,d,"\u22df","\\curlyeqsucc");a(i,l,d,"\u227f","\\succsim");a(i,l,d,"\u2ab8","\\succapprox");a(i,l,d,"\u22b3","\\vartriangleright");a(i,l,d,"\u22b5","\\trianglerighteq");a(i,l,d,"\u22a9","\\Vdash");a(i,l,d,"\u2223","\\shortmid");a(i,l,d,"\u2225","\\shortparallel");a(i,l,d,"\u226c","\\between");a(i,l,d,"\u22d4","\\pitchfork");a(i,l,d,"\u221d","\\varpropto");a(i,l,d,"\u25c0","\\blacktriangleleft");a(i,l,d,"\u2234","\\therefore");a(i,l,d,"\u220d","\\backepsilon");a(i,l,d,"\u25b6","\\blacktriangleright");a(i,l,d,"\u2235","\\because");a(i,l,d,"\u22d8","\\llless");a(i,l,d,"\u22d9","\\gggtr");a(i,l,u,"\u22b2","\\lhd");a(i,l,u,"\u22b3","\\rhd");a(i,l,d,"\u2242","\\eqsim");a(i,s,d,"\u22c8","\\Join");a(i,l,d,"\u2251","\\Doteq");a(i,l,u,"\u2214","\\dotplus");a(i,l,u,"\u2216","\\smallsetminus");a(i,l,u,"\u22d2","\\Cap");a(i,l,u,"\u22d3","\\Cup");a(i,l,u,"\u2a5e","\\doublebarwedge");a(i,l,u,"\u229f","\\boxminus");a(i,l,u,"\u229e","\\boxplus");a(i,l,u,"\u22c7","\\divideontimes");a(i,l,u,"\u22c9","\\ltimes");a(i,l,u,"\u22ca","\\rtimes");a(i,l,u,"\u22cb","\\leftthreetimes");a(i,l,u,"\u22cc","\\rightthreetimes");a(i,l,u,"\u22cf","\\curlywedge");a(i,l,u,"\u22ce","\\curlyvee");a(i,l,u,"\u229d","\\circleddash");a(i,l,u,"\u229b","\\circledast");a(i,l,u,"\u22c5","\\centerdot");a(i,l,u,"\u22ba","\\intercal");a(i,l,u,"\u22d2","\\doublecap");a(i,l,u,"\u22d3","\\doublecup");a(i,l,u,"\u22a0","\\boxtimes");a(i,l,d,"\u21e2","\\dashrightarrow");a(i,l,d,"\u21e0","\\dashleftarrow");a(i,l,d,"\u21c7","\\leftleftarrows");a(i,l,d,"\u21c6","\\leftrightarrows");a(i,l,d,"\u21da","\\Lleftarrow");a(i,l,d,"\u219e","\\twoheadleftarrow");a(i,l,d,"\u21a2","\\leftarrowtail");a(i,l,d,"\u21ab","\\looparrowleft");a(i,l,d,"\u21cb","\\leftrightharpoons");a(i,l,d,"\u21b6","\\curvearrowleft");a(i,l,d,"\u21ba","\\circlearrowleft");a(i,l,d,"\u21b0","\\Lsh");a(i,l,d,"\u21c8","\\upuparrows");a(i,l,d,"\u21bf","\\upharpoonleft");a(i,l,d,"\u21c3","\\downharpoonleft");a(i,l,d,"\u22b8","\\multimap");a(i,l,d,"\u21ad","\\leftrightsquigarrow");a(i,l,d,"\u21c9","\\rightrightarrows");a(i,l,d,"\u21c4","\\rightleftarrows");a(i,l,d,"\u21a0","\\twoheadrightarrow");a(i,l,d,"\u21a3","\\rightarrowtail");a(i,l,d,"\u21ac","\\looparrowright");a(i,l,d,"\u21b7","\\curvearrowright");a(i,l,d,"\u21bb","\\circlearrowright");a(i,l,d,"\u21b1","\\Rsh");a(i,l,d,"\u21ca","\\downdownarrows");a(i,l,d,"\u21be","\\upharpoonright");a(i,l,d,"\u21c2","\\downharpoonright");a(i,l,d,"\u21dd","\\rightsquigarrow");a(i,l,d,"\u21dd","\\leadsto");a(i,l,d,"\u21db","\\Rrightarrow");a(i,l,d,"\u21be","\\restriction");a(i,s,y,"\u2018","`");a(i,s,y,"$","\\$");a(i,s,y,"%","\\%");a(i,s,y,"_","\\_");a(i,s,y,"\u2220","\\angle");a(i,s,y,"\u221e","\\infty");a(i,s,y,"\u2032","\\prime");a(i,s,y,"\u25b3","\\triangle");a(i,s,y,"\u0393","\\Gamma");a(i,s,y,"\u0394","\\Delta");a(i,s,y,"\u0398","\\Theta");a(i,s,y,"\u039b","\\Lambda");a(i,s,y,"\u039e","\\Xi");a(i,s,y,"\u03a0","\\Pi");a(i,s,y,"\u03a3","\\Sigma");a(i,s,y,"\u03a5","\\Upsilon");a(i,s,y,"\u03a6","\\Phi");a(i,s,y,"\u03a8","\\Psi");a(i,s,y,"\u03a9","\\Omega");a(i,s,y,"\xac","\\neg");a(i,s,y,"\xac","\\lnot");a(i,s,y,"\u22a4","\\top");a(i,s,y,"\u22a5","\\bot");a(i,s,y,"\u2205","\\emptyset");a(i,l,y,"\u2205","\\varnothing");a(i,s,c,"\u03b1","\\alpha");a(i,s,c,"\u03b2","\\beta");a(i,s,c,"\u03b3","\\gamma");a(i,s,c,"\u03b4","\\delta");a(i,s,c,"\u03f5","\\epsilon");a(i,s,c,"\u03b6","\\zeta");a(i,s,c,"\u03b7","\\eta");a(i,s,c,"\u03b8","\\theta");a(i,s,c,"\u03b9","\\iota");a(i,s,c,"\u03ba","\\kappa");a(i,s,c,"\u03bb","\\lambda");a(i,s,c,"\u03bc","\\mu");a(i,s,c,"\u03bd","\\nu");a(i,s,c,"\u03be","\\xi");a(i,s,c,"o","\\omicron");a(i,s,c,"\u03c0","\\pi");a(i,s,c,"\u03c1","\\rho");a(i,s,c,"\u03c3","\\sigma");a(i,s,c,"\u03c4","\\tau");a(i,s,c,"\u03c5","\\upsilon");a(i,s,c,"\u03d5","\\phi");a(i,s,c,"\u03c7","\\chi");a(i,s,c,"\u03c8","\\psi");a(i,s,c,"\u03c9","\\omega");a(i,s,c,"\u03b5","\\varepsilon");a(i,s,c,"\u03d1","\\vartheta");a(i,s,c,"\u03d6","\\varpi");a(i,s,c,"\u03f1","\\varrho");a(i,s,c,"\u03c2","\\varsigma");a(i,s,c,"\u03c6","\\varphi");a(i,s,u,"\u2217","*");a(i,s,u,"+","+");a(i,s,u,"\u2212","-");a(i,s,u,"\u22c5","\\cdot");a(i,s,u,"\u2218","\\circ");a(i,s,u,"\xf7","\\div");a(i,s,u,"\xb1","\\pm");a(i,s,u,"\xd7","\\times");a(i,s,u,"\u2229","\\cap");a(i,s,u,"\u222a","\\cup");a(i,s,u,"\u2216","\\setminus");a(i,s,u,"\u2227","\\land");a(i,s,u,"\u2228","\\lor");a(i,s,u,"\u2227","\\wedge");a(i,s,u,"\u2228","\\vee");a(i,s,y,"\u221a","\\surd");a(i,s,f,"(","(");a(i,s,f,"[","[");a(i,s,f,"\u27e8","\\langle");a(i,s,f,"\u2223","\\lvert");a(i,s,f,"\u2225","\\lVert");a(i,s,p,")",")");a(i,s,p,"]","]");a(i,s,p,"?","?");a(i,s,p,"!","!");a(i,s,p,"\u27e9","\\rangle");a(i,s,p,"\u2223","\\rvert");a(i,s,p,"\u2225","\\rVert");a(i,s,d,"=","=");a(i,s,d,"<","<");a(i,s,d,">",">");a(i,s,d,":",":");a(i,s,d,"\u2248","\\approx");a(i,s,d,"\u2245","\\cong");a(i,s,d,"\u2265","\\ge");a(i,s,d,"\u2265","\\geq");a(i,s,d,"\u2190","\\gets");a(i,s,d,">","\\gt");a(i,s,d,"\u2208","\\in");a(i,s,d,"\u2209","\\notin");a(i,s,d,"\u2282","\\subset");a(i,s,d,"\u2283","\\supset");a(i,s,d,"\u2286","\\subseteq");a(i,s,d,"\u2287","\\supseteq");a(i,l,d,"\u2288","\\nsubseteq");a(i,l,d,"\u2289","\\nsupseteq");a(i,s,d,"\u22a8","\\models");a(i,s,d,"\u2190","\\leftarrow");a(i,s,d,"\u2264","\\le");a(i,s,d,"\u2264","\\leq");a(i,s,d,"<","\\lt");a(i,s,d,"\u2260","\\ne");a(i,s,d,"\u2260","\\neq");a(i,s,d,"\u2192","\\rightarrow");a(i,s,d,"\u2192","\\to");a(i,l,d,"\u2271","\\ngeq");a(i,l,d,"\u2270","\\nleq");a(i,s,g,null,"\\!");a(i,s,g,"\xa0","\\ ");a(i,s,g,"\xa0","~");a(i,s,g,null,"\\,");a(i,s,g,null,"\\:");a(i,s,g,null,"\\;");a(i,s,g,null,"\\enspace");a(i,s,g,null,"\\qquad");a(i,s,g,null,"\\quad");a(i,s,g,"\xa0","\\space");a(i,s,m,",",",");a(i,s,m,";",";");a(i,s,m,":","\\colon");a(i,l,u,"\u22bc","\\barwedge");a(i,l,u,"\u22bb","\\veebar");a(i,s,u,"\u2299","\\odot");a(i,s,u,"\u2295","\\oplus");a(i,s,u,"\u2297","\\otimes");a(i,s,y,"\u2202","\\partial");a(i,s,u,"\u2298","\\oslash");a(i,l,u,"\u229a","\\circledcirc");a(i,l,u,"\u22a1","\\boxdot");a(i,s,u,"\u25b3","\\bigtriangleup");a(i,s,u,"\u25bd","\\bigtriangledown");a(i,s,u,"\u2020","\\dagger");a(i,s,u,"\u22c4","\\diamond");a(i,s,u,"\u22c6","\\star");a(i,s,u,"\u25c3","\\triangleleft");a(i,s,u,"\u25b9","\\triangleright");a(i,s,f,"{","\\{");a(i,s,p,"}","\\}");a(i,s,f,"{","\\lbrace");a(i,s,p,"}","\\rbrace");a(i,s,f,"[","\\lbrack");a(i,s,p,"]","\\rbrack");a(i,s,f,"\u230a","\\lfloor");a(i,s,p,"\u230b","\\rfloor");a(i,s,f,"\u2308","\\lceil");a(i,s,p,"\u2309","\\rceil");a(i,s,y,"\\","\\backslash");a(i,s,y,"\u2223","|");a(i,s,y,"\u2223","\\vert");a(i,s,y,"\u2225","\\|");a(i,s,y,"\u2225","\\Vert");a(i,s,d,"\u2191","\\uparrow");a(i,s,d,"\u21d1","\\Uparrow");a(i,s,d,"\u2193","\\downarrow");a(i,s,d,"\u21d3","\\Downarrow");a(i,s,d,"\u2195","\\updownarrow");a(i,s,d,"\u21d5","\\Updownarrow");a(i,i,v,"\u2210","\\coprod");a(i,i,v,"\u22c1","\\bigvee");a(i,i,v,"\u22c0","\\bigwedge");a(i,i,v,"\u2a04","\\biguplus");a(i,i,v,"\u22c2","\\bigcap");a(i,i,v,"\u22c3","\\bigcup");a(i,i,v,"\u222b","\\int");a(i,i,v,"\u222b","\\intop");a(i,i,v,"\u222c","\\iint");a(i,i,v,"\u222d","\\iiint");a(i,i,v,"\u220f","\\prod");a(i,i,v,"\u2211","\\sum");a(i,i,v,"\u2a02","\\bigotimes");a(i,i,v,"\u2a01","\\bigoplus");a(i,i,v,"\u2a00","\\bigodot");a(i,i,v,"\u222e","\\oint");a(i,i,v,"\u2a06","\\bigsqcup");a(i,i,v,"\u222b","\\smallint");a(i,s,h,"\u2026","\\ldots");a(i,s,h,"\u22ef","\\cdots");a(i,s,h,"\u22f1","\\ddots");a(i,s,y,"\u22ee","\\vdots");a(i,s,o,"\xb4","\\acute");a(i,s,o,"`","\\grave");a(i,s,o,"\xa8","\\ddot");a(i,s,o,"~","\\tilde");a(i,s,o,"\xaf","\\bar");a(i,s,o,"\u02d8","\\breve");a(i,s,o,"\u02c7","\\check");a(i,s,o,"^","\\hat");a(i,s,o,"\u20d7","\\vec");a(i,s,o,"\u02d9","\\dot");a(i,s,c,"\u0131","\\imath");a(i,s,c,"\u0237","\\jmath");a(n,s,y,"\u2013","--");a(n,s,y,"\u2014","---");a(n,s,y,"\u2018","`");a(n,s,y,"\u2019","'");a(n,s,y,"\u201c","``");a(n,s,y,"\u201d","''");a(i,s,y,"\xb0","\\degree");a(n,s,y,"\xb0","\\degree");a(i,s,c,"\xa3","\\pounds");a(i,l,y,"\u2720","\\maltese");a(n,l,y,"\u2720","\\maltese");a(n,s,g,"\xa0","\\ ");a(n,s,g,"\xa0"," ");a(n,s,g,"\xa0","~");var x;var b;var w='0123456789/@."';for(x=0;x<w.length;x++){b=w.charAt(x);a(i,s,y,b,b)}var k='0123456789!@*()-=+[]";:?/.,';for(x=0;x<k.length;x++){b=k.charAt(x);a(n,s,y,b,b)}var z="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";for(x=0;x<z.length;x++){b=z.charAt(x);a(i,s,c,b,b);a(n,s,y,b,b)}for(x=192;x<=214;x++){b=String.fromCharCode(x);a(n,s,y,b,b)}for(x=216;x<=246;x++){b=String.fromCharCode(x);a(n,s,y,b,b)}for(x=248;x<=255;x++){b=String.fromCharCode(x);a(n,s,y,b,b)}for(x=1040;x<=1103;x++){b=String.fromCharCode(x);a(n,s,y,b,b)}},{}],24:[function(e,t,r){var a=/[\uAC00-\uD7AF]/;var i=/[\u3040-\u309F]|[\u30A0-\u30FF]|[\u4E00-\u9FAF]|[\uAC00-\uD7AF]/;t.exports={cjkRegex:i,hangulRegex:a}},{}],25:[function(e,t,r){var a=Array.prototype.indexOf;var i=function(e,t){if(e==null){return-1}if(a&&e.indexOf===a){return e.indexOf(t)}var r=0;var i=e.length;for(;r<i;r++){if(e[r]===t){return r}}return-1};var n=function(e,t){return i(e,t)!==-1};var s=function(e,t){return e===undefined?t:e};var l=/([A-Z])/g;var o=function(e){return e.replace(l,"-$1").toLowerCase()};var u={"&":"&amp;",">":"&gt;","<":"&lt;",'"':"&quot;","'":"&#x27;"};var p=/[&><"']/g;function h(e){return u[e]}function c(e){return(""+e).replace(p,h)}var v;if(typeof document!=="undefined"){var f=document.createElement("span");if("textContent"in f){v=function(e,t){e.textContent=t}}else{v=function(e,t){e.innerText=t}}}function m(e){v(e,"")}t.exports={contains:n,deflt:s,escape:c,hyphenate:o,indexOf:i,setTextContent:v,clearNode:m}},{}]},{},[1])(1)});

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{}],2:[function(require,module,exports){
/*global define:false */
/**
 * Copyright 2016 Craig Campbell
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Mousetrap is a simple keyboard shortcut library for Javascript with
 * no external dependencies
 *
 * @version 1.6.0
 * @url craig.is/killing/mice
 */
(function(window, document, undefined) {

    // Check if mousetrap is used inside browser, if not, return
    if (!window) {
        return;
    }

    /**
     * mapping of special keycodes to their corresponding keys
     *
     * everything in this dictionary cannot use keypress events
     * so it has to be here to map to the correct keycodes for
     * keyup/keydown events
     *
     * @type {Object}
     */
    var _MAP = {
        8: 'backspace',
        9: 'tab',
        13: 'enter',
        16: 'shift',
        17: 'ctrl',
        18: 'alt',
        20: 'capslock',
        27: 'esc',
        32: 'space',
        33: 'pageup',
        34: 'pagedown',
        35: 'end',
        36: 'home',
        37: 'left',
        38: 'up',
        39: 'right',
        40: 'down',
        45: 'ins',
        46: 'del',
        91: 'meta',
        93: 'meta',
        224: 'meta'
    };

    /**
     * mapping for special characters so they can support
     *
     * this dictionary is only used incase you want to bind a
     * keyup or keydown event to one of these keys
     *
     * @type {Object}
     */
    var _KEYCODE_MAP = {
        106: '*',
        107: '+',
        109: '-',
        110: '.',
        111 : '/',
        186: ';',
        187: '=',
        188: ',',
        189: '-',
        190: '.',
        191: '/',
        192: '`',
        219: '[',
        220: '\\',
        221: ']',
        222: '\''
    };

    /**
     * this is a mapping of keys that require shift on a US keypad
     * back to the non shift equivelents
     *
     * this is so you can use keyup events with these keys
     *
     * note that this will only work reliably on US keyboards
     *
     * @type {Object}
     */
    var _SHIFT_MAP = {
        '~': '`',
        '!': '1',
        '@': '2',
        '#': '3',
        '$': '4',
        '%': '5',
        '^': '6',
        '&': '7',
        '*': '8',
        '(': '9',
        ')': '0',
        '_': '-',
        '+': '=',
        ':': ';',
        '\"': '\'',
        '<': ',',
        '>': '.',
        '?': '/',
        '|': '\\'
    };

    /**
     * this is a list of special strings you can use to map
     * to modifier keys when you specify your keyboard shortcuts
     *
     * @type {Object}
     */
    var _SPECIAL_ALIASES = {
        'option': 'alt',
        'command': 'meta',
        'return': 'enter',
        'escape': 'esc',
        'plus': '+',
        'mod': /Mac|iPod|iPhone|iPad/.test(navigator.platform) ? 'meta' : 'ctrl'
    };

    /**
     * variable to store the flipped version of _MAP from above
     * needed to check if we should use keypress or not when no action
     * is specified
     *
     * @type {Object|undefined}
     */
    var _REVERSE_MAP;

    /**
     * loop through the f keys, f1 to f19 and add them to the map
     * programatically
     */
    for (var i = 1; i < 20; ++i) {
        _MAP[111 + i] = 'f' + i;
    }

    /**
     * loop through to map numbers on the numeric keypad
     */
    for (i = 0; i <= 9; ++i) {
        _MAP[i + 96] = i;
    }

    /**
     * cross browser add event method
     *
     * @param {Element|HTMLDocument} object
     * @param {string} type
     * @param {Function} callback
     * @returns void
     */
    function _addEvent(object, type, callback) {
        if (object.addEventListener) {
            object.addEventListener(type, callback, false);
            return;
        }

        object.attachEvent('on' + type, callback);
    }

    /**
     * takes the event and returns the key character
     *
     * @param {Event} e
     * @return {string}
     */
    function _characterFromEvent(e) {

        // for keypress events we should return the character as is
        if (e.type == 'keypress') {
            var character = String.fromCharCode(e.which);

            // if the shift key is not pressed then it is safe to assume
            // that we want the character to be lowercase.  this means if
            // you accidentally have caps lock on then your key bindings
            // will continue to work
            //
            // the only side effect that might not be desired is if you
            // bind something like 'A' cause you want to trigger an
            // event when capital A is pressed caps lock will no longer
            // trigger the event.  shift+a will though.
            if (!e.shiftKey) {
                character = character.toLowerCase();
            }

            return character;
        }

        // for non keypress events the special maps are needed
        if (_MAP[e.which]) {
            return _MAP[e.which];
        }

        if (_KEYCODE_MAP[e.which]) {
            return _KEYCODE_MAP[e.which];
        }

        // if it is not in the special map

        // with keydown and keyup events the character seems to always
        // come in as an uppercase character whether you are pressing shift
        // or not.  we should make sure it is always lowercase for comparisons
        return String.fromCharCode(e.which).toLowerCase();
    }

    /**
     * checks if two arrays are equal
     *
     * @param {Array} modifiers1
     * @param {Array} modifiers2
     * @returns {boolean}
     */
    function _modifiersMatch(modifiers1, modifiers2) {
        return modifiers1.sort().join(',') === modifiers2.sort().join(',');
    }

    /**
     * takes a key event and figures out what the modifiers are
     *
     * @param {Event} e
     * @returns {Array}
     */
    function _eventModifiers(e) {
        var modifiers = [];

        if (e.shiftKey) {
            modifiers.push('shift');
        }

        if (e.altKey) {
            modifiers.push('alt');
        }

        if (e.ctrlKey) {
            modifiers.push('ctrl');
        }

        if (e.metaKey) {
            modifiers.push('meta');
        }

        return modifiers;
    }

    /**
     * prevents default for this event
     *
     * @param {Event} e
     * @returns void
     */
    function _preventDefault(e) {
        if (e.preventDefault) {
            e.preventDefault();
            return;
        }

        e.returnValue = false;
    }

    /**
     * stops propogation for this event
     *
     * @param {Event} e
     * @returns void
     */
    function _stopPropagation(e) {
        if (e.stopPropagation) {
            e.stopPropagation();
            return;
        }

        e.cancelBubble = true;
    }

    /**
     * determines if the keycode specified is a modifier key or not
     *
     * @param {string} key
     * @returns {boolean}
     */
    function _isModifier(key) {
        return key == 'shift' || key == 'ctrl' || key == 'alt' || key == 'meta';
    }

    /**
     * reverses the map lookup so that we can look for specific keys
     * to see what can and can't use keypress
     *
     * @return {Object}
     */
    function _getReverseMap() {
        if (!_REVERSE_MAP) {
            _REVERSE_MAP = {};
            for (var key in _MAP) {

                // pull out the numeric keypad from here cause keypress should
                // be able to detect the keys from the character
                if (key > 95 && key < 112) {
                    continue;
                }

                if (_MAP.hasOwnProperty(key)) {
                    _REVERSE_MAP[_MAP[key]] = key;
                }
            }
        }
        return _REVERSE_MAP;
    }

    /**
     * picks the best action based on the key combination
     *
     * @param {string} key - character for key
     * @param {Array} modifiers
     * @param {string=} action passed in
     */
    function _pickBestAction(key, modifiers, action) {

        // if no action was picked in we should try to pick the one
        // that we think would work best for this key
        if (!action) {
            action = _getReverseMap()[key] ? 'keydown' : 'keypress';
        }

        // modifier keys don't work as expected with keypress,
        // switch to keydown
        if (action == 'keypress' && modifiers.length) {
            action = 'keydown';
        }

        return action;
    }

    /**
     * Converts from a string key combination to an array
     *
     * @param  {string} combination like "command+shift+l"
     * @return {Array}
     */
    function _keysFromString(combination) {
        if (combination === '+') {
            return ['+'];
        }

        combination = combination.replace(/\+{2}/g, '+plus');
        return combination.split('+');
    }

    /**
     * Gets info for a specific key combination
     *
     * @param  {string} combination key combination ("command+s" or "a" or "*")
     * @param  {string=} action
     * @returns {Object}
     */
    function _getKeyInfo(combination, action) {
        var keys;
        var key;
        var i;
        var modifiers = [];

        // take the keys from this pattern and figure out what the actual
        // pattern is all about
        keys = _keysFromString(combination);

        for (i = 0; i < keys.length; ++i) {
            key = keys[i];

            // normalize key names
            if (_SPECIAL_ALIASES[key]) {
                key = _SPECIAL_ALIASES[key];
            }

            // if this is not a keypress event then we should
            // be smart about using shift keys
            // this will only work for US keyboards however
            if (action && action != 'keypress' && _SHIFT_MAP[key]) {
                key = _SHIFT_MAP[key];
                modifiers.push('shift');
            }

            // if this key is a modifier then add it to the list of modifiers
            if (_isModifier(key)) {
                modifiers.push(key);
            }
        }

        // depending on what the key combination is
        // we will try to pick the best event for it
        action = _pickBestAction(key, modifiers, action);

        return {
            key: key,
            modifiers: modifiers,
            action: action
        };
    }

    function _belongsTo(element, ancestor) {
        if (element === null || element === document) {
            return false;
        }

        if (element === ancestor) {
            return true;
        }

        return _belongsTo(element.parentNode, ancestor);
    }

    function Mousetrap(targetElement) {
        var self = this;

        targetElement = targetElement || document;

        if (!(self instanceof Mousetrap)) {
            return new Mousetrap(targetElement);
        }

        /**
         * element to attach key events to
         *
         * @type {Element}
         */
        self.target = targetElement;

        /**
         * a list of all the callbacks setup via Mousetrap.bind()
         *
         * @type {Object}
         */
        self._callbacks = {};

        /**
         * direct map of string combinations to callbacks used for trigger()
         *
         * @type {Object}
         */
        self._directMap = {};

        /**
         * keeps track of what level each sequence is at since multiple
         * sequences can start out with the same sequence
         *
         * @type {Object}
         */
        var _sequenceLevels = {};

        /**
         * variable to store the setTimeout call
         *
         * @type {null|number}
         */
        var _resetTimer;

        /**
         * temporary state where we will ignore the next keyup
         *
         * @type {boolean|string}
         */
        var _ignoreNextKeyup = false;

        /**
         * temporary state where we will ignore the next keypress
         *
         * @type {boolean}
         */
        var _ignoreNextKeypress = false;

        /**
         * are we currently inside of a sequence?
         * type of action ("keyup" or "keydown" or "keypress") or false
         *
         * @type {boolean|string}
         */
        var _nextExpectedAction = false;

        /**
         * resets all sequence counters except for the ones passed in
         *
         * @param {Object} doNotReset
         * @returns void
         */
        function _resetSequences(doNotReset) {
            doNotReset = doNotReset || {};

            var activeSequences = false,
                key;

            for (key in _sequenceLevels) {
                if (doNotReset[key]) {
                    activeSequences = true;
                    continue;
                }
                _sequenceLevels[key] = 0;
            }

            if (!activeSequences) {
                _nextExpectedAction = false;
            }
        }

        /**
         * finds all callbacks that match based on the keycode, modifiers,
         * and action
         *
         * @param {string} character
         * @param {Array} modifiers
         * @param {Event|Object} e
         * @param {string=} sequenceName - name of the sequence we are looking for
         * @param {string=} combination
         * @param {number=} level
         * @returns {Array}
         */
        function _getMatches(character, modifiers, e, sequenceName, combination, level) {
            var i;
            var callback;
            var matches = [];
            var action = e.type;

            // if there are no events related to this keycode
            if (!self._callbacks[character]) {
                return [];
            }

            // if a modifier key is coming up on its own we should allow it
            if (action == 'keyup' && _isModifier(character)) {
                modifiers = [character];
            }

            // loop through all callbacks for the key that was pressed
            // and see if any of them match
            for (i = 0; i < self._callbacks[character].length; ++i) {
                callback = self._callbacks[character][i];

                // if a sequence name is not specified, but this is a sequence at
                // the wrong level then move onto the next match
                if (!sequenceName && callback.seq && _sequenceLevels[callback.seq] != callback.level) {
                    continue;
                }

                // if the action we are looking for doesn't match the action we got
                // then we should keep going
                if (action != callback.action) {
                    continue;
                }

                // if this is a keypress event and the meta key and control key
                // are not pressed that means that we need to only look at the
                // character, otherwise check the modifiers as well
                //
                // chrome will not fire a keypress if meta or control is down
                // safari will fire a keypress if meta or meta+shift is down
                // firefox will fire a keypress if meta or control is down
                if ((action == 'keypress' && !e.metaKey && !e.ctrlKey) || _modifiersMatch(modifiers, callback.modifiers)) {

                    // when you bind a combination or sequence a second time it
                    // should overwrite the first one.  if a sequenceName or
                    // combination is specified in this call it does just that
                    //
                    // @todo make deleting its own method?
                    var deleteCombo = !sequenceName && callback.combo == combination;
                    var deleteSequence = sequenceName && callback.seq == sequenceName && callback.level == level;
                    if (deleteCombo || deleteSequence) {
                        self._callbacks[character].splice(i, 1);
                    }

                    matches.push(callback);
                }
            }

            return matches;
        }

        /**
         * actually calls the callback function
         *
         * if your callback function returns false this will use the jquery
         * convention - prevent default and stop propogation on the event
         *
         * @param {Function} callback
         * @param {Event} e
         * @returns void
         */
        function _fireCallback(callback, e, combo, sequence) {

            // if this event should not happen stop here
            if (self.stopCallback(e, e.target || e.srcElement, combo, sequence)) {
                return;
            }

            if (callback(e, combo) === false) {
                _preventDefault(e);
                _stopPropagation(e);
            }
        }

        /**
         * handles a character key event
         *
         * @param {string} character
         * @param {Array} modifiers
         * @param {Event} e
         * @returns void
         */
        self._handleKey = function(character, modifiers, e) {
            var callbacks = _getMatches(character, modifiers, e);
            var i;
            var doNotReset = {};
            var maxLevel = 0;
            var processedSequenceCallback = false;

            // Calculate the maxLevel for sequences so we can only execute the longest callback sequence
            for (i = 0; i < callbacks.length; ++i) {
                if (callbacks[i].seq) {
                    maxLevel = Math.max(maxLevel, callbacks[i].level);
                }
            }

            // loop through matching callbacks for this key event
            for (i = 0; i < callbacks.length; ++i) {

                // fire for all sequence callbacks
                // this is because if for example you have multiple sequences
                // bound such as "g i" and "g t" they both need to fire the
                // callback for matching g cause otherwise you can only ever
                // match the first one
                if (callbacks[i].seq) {

                    // only fire callbacks for the maxLevel to prevent
                    // subsequences from also firing
                    //
                    // for example 'a option b' should not cause 'option b' to fire
                    // even though 'option b' is part of the other sequence
                    //
                    // any sequences that do not match here will be discarded
                    // below by the _resetSequences call
                    if (callbacks[i].level != maxLevel) {
                        continue;
                    }

                    processedSequenceCallback = true;

                    // keep a list of which sequences were matches for later
                    doNotReset[callbacks[i].seq] = 1;
                    _fireCallback(callbacks[i].callback, e, callbacks[i].combo, callbacks[i].seq);
                    continue;
                }

                // if there were no sequence matches but we are still here
                // that means this is a regular match so we should fire that
                if (!processedSequenceCallback) {
                    _fireCallback(callbacks[i].callback, e, callbacks[i].combo);
                }
            }

            // if the key you pressed matches the type of sequence without
            // being a modifier (ie "keyup" or "keypress") then we should
            // reset all sequences that were not matched by this event
            //
            // this is so, for example, if you have the sequence "h a t" and you
            // type "h e a r t" it does not match.  in this case the "e" will
            // cause the sequence to reset
            //
            // modifier keys are ignored because you can have a sequence
            // that contains modifiers such as "enter ctrl+space" and in most
            // cases the modifier key will be pressed before the next key
            //
            // also if you have a sequence such as "ctrl+b a" then pressing the
            // "b" key will trigger a "keypress" and a "keydown"
            //
            // the "keydown" is expected when there is a modifier, but the
            // "keypress" ends up matching the _nextExpectedAction since it occurs
            // after and that causes the sequence to reset
            //
            // we ignore keypresses in a sequence that directly follow a keydown
            // for the same character
            var ignoreThisKeypress = e.type == 'keypress' && _ignoreNextKeypress;
            if (e.type == _nextExpectedAction && !_isModifier(character) && !ignoreThisKeypress) {
                _resetSequences(doNotReset);
            }

            _ignoreNextKeypress = processedSequenceCallback && e.type == 'keydown';
        };

        /**
         * handles a keydown event
         *
         * @param {Event} e
         * @returns void
         */
        function _handleKeyEvent(e) {

            // normalize e.which for key events
            // @see http://stackoverflow.com/questions/4285627/javascript-keycode-vs-charcode-utter-confusion
            if (typeof e.which !== 'number') {
                e.which = e.keyCode;
            }

            var character = _characterFromEvent(e);

            // no character found then stop
            if (!character) {
                return;
            }

            // need to use === for the character check because the character can be 0
            if (e.type == 'keyup' && _ignoreNextKeyup === character) {
                _ignoreNextKeyup = false;
                return;
            }

            self.handleKey(character, _eventModifiers(e), e);
        }

        /**
         * called to set a 1 second timeout on the specified sequence
         *
         * this is so after each key press in the sequence you have 1 second
         * to press the next key before you have to start over
         *
         * @returns void
         */
        function _resetSequenceTimer() {
            clearTimeout(_resetTimer);
            _resetTimer = setTimeout(_resetSequences, 1000);
        }

        /**
         * binds a key sequence to an event
         *
         * @param {string} combo - combo specified in bind call
         * @param {Array} keys
         * @param {Function} callback
         * @param {string=} action
         * @returns void
         */
        function _bindSequence(combo, keys, callback, action) {

            // start off by adding a sequence level record for this combination
            // and setting the level to 0
            _sequenceLevels[combo] = 0;

            /**
             * callback to increase the sequence level for this sequence and reset
             * all other sequences that were active
             *
             * @param {string} nextAction
             * @returns {Function}
             */
            function _increaseSequence(nextAction) {
                return function() {
                    _nextExpectedAction = nextAction;
                    ++_sequenceLevels[combo];
                    _resetSequenceTimer();
                };
            }

            /**
             * wraps the specified callback inside of another function in order
             * to reset all sequence counters as soon as this sequence is done
             *
             * @param {Event} e
             * @returns void
             */
            function _callbackAndReset(e) {
                _fireCallback(callback, e, combo);

                // we should ignore the next key up if the action is key down
                // or keypress.  this is so if you finish a sequence and
                // release the key the final key will not trigger a keyup
                if (action !== 'keyup') {
                    _ignoreNextKeyup = _characterFromEvent(e);
                }

                // weird race condition if a sequence ends with the key
                // another sequence begins with
                setTimeout(_resetSequences, 10);
            }

            // loop through keys one at a time and bind the appropriate callback
            // function.  for any key leading up to the final one it should
            // increase the sequence. after the final, it should reset all sequences
            //
            // if an action is specified in the original bind call then that will
            // be used throughout.  otherwise we will pass the action that the
            // next key in the sequence should match.  this allows a sequence
            // to mix and match keypress and keydown events depending on which
            // ones are better suited to the key provided
            for (var i = 0; i < keys.length; ++i) {
                var isFinal = i + 1 === keys.length;
                var wrappedCallback = isFinal ? _callbackAndReset : _increaseSequence(action || _getKeyInfo(keys[i + 1]).action);
                _bindSingle(keys[i], wrappedCallback, action, combo, i);
            }
        }

        /**
         * binds a single keyboard combination
         *
         * @param {string} combination
         * @param {Function} callback
         * @param {string=} action
         * @param {string=} sequenceName - name of sequence if part of sequence
         * @param {number=} level - what part of the sequence the command is
         * @returns void
         */
        function _bindSingle(combination, callback, action, sequenceName, level) {

            // store a direct mapped reference for use with Mousetrap.trigger
            self._directMap[combination + ':' + action] = callback;

            // make sure multiple spaces in a row become a single space
            combination = combination.replace(/\s+/g, ' ');

            var sequence = combination.split(' ');
            var info;

            // if this pattern is a sequence of keys then run through this method
            // to reprocess each pattern one key at a time
            if (sequence.length > 1) {
                _bindSequence(combination, sequence, callback, action);
                return;
            }

            info = _getKeyInfo(combination, action);

            // make sure to initialize array if this is the first time
            // a callback is added for this key
            self._callbacks[info.key] = self._callbacks[info.key] || [];

            // remove an existing match if there is one
            _getMatches(info.key, info.modifiers, {type: info.action}, sequenceName, combination, level);

            // add this call back to the array
            // if it is a sequence put it at the beginning
            // if not put it at the end
            //
            // this is important because the way these are processed expects
            // the sequence ones to come first
            self._callbacks[info.key][sequenceName ? 'unshift' : 'push']({
                callback: callback,
                modifiers: info.modifiers,
                action: info.action,
                seq: sequenceName,
                level: level,
                combo: combination
            });
        }

        /**
         * binds multiple combinations to the same callback
         *
         * @param {Array} combinations
         * @param {Function} callback
         * @param {string|undefined} action
         * @returns void
         */
        self._bindMultiple = function(combinations, callback, action) {
            for (var i = 0; i < combinations.length; ++i) {
                _bindSingle(combinations[i], callback, action);
            }
        };

        // start!
        _addEvent(targetElement, 'keypress', _handleKeyEvent);
        _addEvent(targetElement, 'keydown', _handleKeyEvent);
        _addEvent(targetElement, 'keyup', _handleKeyEvent);
    }

    /**
     * binds an event to mousetrap
     *
     * can be a single key, a combination of keys separated with +,
     * an array of keys, or a sequence of keys separated by spaces
     *
     * be sure to list the modifier keys first to make sure that the
     * correct key ends up getting bound (the last key in the pattern)
     *
     * @param {string|Array} keys
     * @param {Function} callback
     * @param {string=} action - 'keypress', 'keydown', or 'keyup'
     * @returns void
     */
    Mousetrap.prototype.bind = function(keys, callback, action) {
        var self = this;
        keys = keys instanceof Array ? keys : [keys];
        self._bindMultiple.call(self, keys, callback, action);
        return self;
    };

    /**
     * unbinds an event to mousetrap
     *
     * the unbinding sets the callback function of the specified key combo
     * to an empty function and deletes the corresponding key in the
     * _directMap dict.
     *
     * TODO: actually remove this from the _callbacks dictionary instead
     * of binding an empty function
     *
     * the keycombo+action has to be exactly the same as
     * it was defined in the bind method
     *
     * @param {string|Array} keys
     * @param {string} action
     * @returns void
     */
    Mousetrap.prototype.unbind = function(keys, action) {
        var self = this;
        return self.bind.call(self, keys, function() {}, action);
    };

    /**
     * triggers an event that has already been bound
     *
     * @param {string} keys
     * @param {string=} action
     * @returns void
     */
    Mousetrap.prototype.trigger = function(keys, action) {
        var self = this;
        if (self._directMap[keys + ':' + action]) {
            self._directMap[keys + ':' + action]({}, keys);
        }
        return self;
    };

    /**
     * resets the library back to its initial state.  this is useful
     * if you want to clear out the current keyboard shortcuts and bind
     * new ones - for example if you switch to another page
     *
     * @returns void
     */
    Mousetrap.prototype.reset = function() {
        var self = this;
        self._callbacks = {};
        self._directMap = {};
        return self;
    };

    /**
     * should we stop this event before firing off callbacks
     *
     * @param {Event} e
     * @param {Element} element
     * @return {boolean}
     */
    Mousetrap.prototype.stopCallback = function(e, element) {
        var self = this;

        // if the element has the class "mousetrap" then no need to stop
        if ((' ' + element.className + ' ').indexOf(' mousetrap ') > -1) {
            return false;
        }

        if (_belongsTo(element, self.target)) {
            return false;
        }

        // stop for input, select, and textarea
        return element.tagName == 'INPUT' || element.tagName == 'SELECT' || element.tagName == 'TEXTAREA' || element.isContentEditable;
    };

    /**
     * exposes _handleKey publicly so it can be overwritten by extensions
     */
    Mousetrap.prototype.handleKey = function() {
        var self = this;
        return self._handleKey.apply(self, arguments);
    };

    /**
     * allow custom key mappings
     */
    Mousetrap.addKeycodes = function(object) {
        for (var key in object) {
            if (object.hasOwnProperty(key)) {
                _MAP[key] = object[key];
            }
        }
        _REVERSE_MAP = null;
    };

    /**
     * Init the global mousetrap functions
     *
     * This method is needed to allow the global mousetrap functions to work
     * now that mousetrap is a constructor function.
     */
    Mousetrap.init = function() {
        var documentMousetrap = Mousetrap(document);
        for (var method in documentMousetrap) {
            if (method.charAt(0) !== '_') {
                Mousetrap[method] = (function(method) {
                    return function() {
                        return documentMousetrap[method].apply(documentMousetrap, arguments);
                    };
                } (method));
            }
        }
    };

    Mousetrap.init();

    // expose mousetrap to the global object
    window.Mousetrap = Mousetrap;

    // expose as a common js module
    if (typeof module !== 'undefined' && module.exports) {
        module.exports = Mousetrap;
    }

    // expose mousetrap as an AMD module
    if (typeof define === 'function' && define.amd) {
        define(function() {
            return Mousetrap;
        });
    }
}) (typeof window !== 'undefined' ? window : null, typeof  window !== 'undefined' ? document : null);

},{}],3:[function(require,module,exports){
Mousetrap = require('mousetrap');
katex = require('../lib/katex/katex-modified.min.js');

String.prototype.splice = function(idx, s){ return (this.slice(0,idx) + s + this.slice(idx)); };
String.prototype.splicen = function(idx, s, n){ return (this.slice(0,idx) + s + this.slice(idx+n));};
String.prototype.search_at = function(idx, s){ return (this.substring(idx-s.length,idx) == s); };

var Guppy = function(guppy_div, properties){
    var self = this;
    properties = properties || {};
    if(typeof guppy_div === 'string' || guppy_div instanceof String){
	guppy_div = document.getElementById(guppy_div);
    }
    
    // Set the id on the div if it is not currently set.
    if(!(guppy_div.id)){
	Guppy.log(3,"no id");
	var i = Guppy.max_uid || 0;
	Guppy.log(3,"setting id",i);
	while(document.getElementById("guppy_uid_"+i)) i++;
	Guppy.max_uid = i;
	guppy_div.id = "guppy_uid_"+i;
    }
    var i = Guppy.max_tabIndex || 0;
    guppy_div.tabIndex = i;
    Guppy.max_tabIndex = i+1;
    
    
    this.editor_active = true;
    this.debug = 0;
    this.empty_content = "\\color{red}{[?]}"
    this.editor = guppy_div;
    this.type_blacklist = [];
    this.done_callback = this;
    this.ready = false;
    
    if('xml_content' in properties){
	this.base = (new window.DOMParser()).parseFromString(properties.xml_content, "text/xml");
    }
    else {
	this.base = (new window.DOMParser()).parseFromString("<m><e></e></m>", "text/xml");
    }

    var props = ['blacklist','done_callback','right_callback','left_callback','ready_callback','blank_caret','debug','empty_content']
    for(var i = 0; i < props.length; i++){
	var p = props[i];
	if(p in properties) this[p] = properties[p];
    }
    
    Guppy.instances[guppy_div.id] = this;
    
    if(Guppy.ready && !this.ready){
    	if(this.ready_callback) this.ready_callback();
    	this.ready = true;
	this.render(true);
    }
    Guppy.log(3,"Guppy active",Guppy.active_guppy);
    this.clipboard = null;
    this.current = this.base.documentElement.firstChild;
    this.temp_cursor = {"node":null,"caret":0}
    if(!this.current.firstChild) this.current.appendChild(this.base.createTextNode(""));
    this.caret = 0;
    this.sel_start = null;
    this.sel_end = null;
    this.undo_data = [];
    this.undo_now = -1;
    this.sel_status = Guppy.SEL_NONE;
    this.checkpoint();
    this.editor.addEventListener("keydown",Guppy.key_down, false);
    this.editor.addEventListener("keyup",Guppy.key_up, false);
    this.editor.addEventListener("focus", function(e) { Guppy.kb.alt_down = false; if(self.activate) self.activate();}, false);
    this.deactivate();
    this.recompute_locations_paths();
}

/* Functions intended for external use */

Guppy.prototype.get_content = function(t){
    if(t != "xml") return Guppy.transform(t,this.base);
    else return (new XMLSerializer()).serializeToString(this.base);
}

Guppy.prototype.set_content = function(xml_data){
    this.base = (new window.DOMParser()).parseFromString(xml_data, "text/xml");
    this.clipboard = null;
    var l = this.base.getElementsByTagName("e");
    Guppy.log(4,"selected",l);
    for(var i = 0; i < l.length; i++){
	if(!(l[i].firstChild)) l[i].appendChild(this.base.createTextNode(""));
    }
    this.current = this.base.documentElement.firstChild;
    this.caret = 0;
    this.sel_start = null;
    this.sel_end = null;
    this.undo_data = [];
    this.undo_now = -1;
    this.sel_status = Guppy.SEL_NONE;
    this.checkpoint();
}

Guppy.instances = {};
Guppy.ready = false;

/* -------------------- */

Guppy.active_guppy = null;

Guppy.SEL_NONE = 0;
Guppy.SEL_CURSOR_AT_START = 1;
Guppy.SEL_CURSOR_AT_END = 2;

Guppy.is_blank = function(n){
    return n.firstChild == null || n.firstChild.nodeValue == '';
}

Guppy.get_symbols = function(symbols, callback){
    var all_ready = function(){
	Guppy.register_keyboard_handlers();
	for(var i in Guppy.instances){
	    Guppy.instances[i].ready = true;
	    Guppy.instances[i].render(true);
	    if(Guppy.instances[i].ready_callback){
		Guppy.instances[i].ready_callback();
		Guppy.instances[i].ready_callback = null;
	    }
	}
	Guppy.ready = true;
    }
    var get_builtins = function(callback){
	var greek_syms = ["alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigma","tau","upsilon","phi","chi","psi","omega","Gamma","Delta","Theta","Lambda","Xi","Pi","Sigma","Phi","Psi","Omega"];
	var raw_syms = ["leq","geq","infty"];
	var func_syms = ["sin","cos","tan","sec","csc","cot","log","ln"]
	
	for(var i = 0; i < greek_syms.length; i++){
	    Guppy.symb_raw(greek_syms[i],"{\\"+greek_syms[i]+"}"," $"+greek_syms[i]+" ");
	}
	
	for(var i = 0; i < raw_syms.length; i++){
	    Guppy.symb_raw(raw_syms[i],"{\\"+raw_syms[i]+"}"," "+raw_syms[i]+" ");
	}
	
	for(var i = 0; i < func_syms.length; i++){
	    Guppy.symb_func(func_syms[i]);
	}
    
	Guppy.symb_raw("*","\\cdot ","*");
	if(callback) callback();
    }

    if(!(Array.isArray(symbols))){
	symbols = [symbols];
    }
    var answers = [];
    var calls = [];
    var set_symbols = function(){
	for(var i = 0; i < answers.length; i++){
	    for(var s in answers[i]){
		Guppy.kb.symbols[s] = answers[i][s];
	    }
	}
	if(callback) callback();
    }
    for(var i = 0; i < symbols.length; i++){
	answers.push(null);
	if(symbols[i] == "builtins"){
	    calls.push(get_builtins);
	    continue;
	}
	var x = function outer(j){
	    return function(callback){
		var req = new XMLHttpRequest();
		req.onload = function(){
		    var syms = JSON.parse(this.responseText);
		    for(var s in syms){
			Guppy.kb.symbols[s] = syms[s];
		    }
		    callback();
		};
		req.open("get", symbols[j], true);
		req.send();
	    }
	}(i);
	calls.push(x);
    }
    calls.push(all_ready);
    var j = 0;
    var cb = function(){
	j += 1;
	if(j < calls.length) calls[j](cb);
    }
    if(calls.length > 0) calls[0](cb);
}

Guppy.transform = function(t, base, r){
    return Guppy.manual_render(base,t,base.documentElement,r);
}

Guppy.bracket_xpath = "(count(./*) != 1 and not \
		          ( \
                            count(./e)=2 and \
			    count(./f)=1 and \
			    count(./e[string-length(text())=0])=2 and \
			    ( \
			      (\
                                count(./f/c)=1 and\
			        count(./f/c[@is_bracket='yes'])=1\
			      )\
			      or\
			      (\
			        f/@c='yes' and \
				count(./e[@current='yes'])=0 and \
				count(./e[@temp='yes'])=0 \
			      )\
			    )\
			  )\
			)  \
			or\
		        (\
			  count(./*) = 1 and \
			  string-length(./e/text()) != 1 and \
			  number(./e/text()) != ./e/text() \
			) \
			or \
		        ( \
			  count(./*) = 1 and \
			  ./e/@current = 'yes' \
			) \
			or \
		        ( \
			  count(./*) = 1 and \
			  ./e/@temp = 'yes' \
			)"

Guppy.manual_render = function(base,t,n,r){
    var ans = "";
    Guppy.log(4,"rendering",n);
    if(n.nodeName == "e"){
	if(t == "latex" && r){
	    ans = n.getAttribute("render");
	}
	else{
	    ans = n.firstChild.textContent;
	}
    }
    else if(n.nodeName == "f"){
	for(var nn = n.firstChild; nn != null; nn = nn.nextSibling){
	    if(nn.nodeName == "b" && nn.getAttribute("p") == t){
		ans = Guppy.manual_render(base,t,nn,r);
		break;
	    }
	}
    }
    else if(n.nodeName == "b"){
	var cs = []
	var i = 1;
	var par = n.parentNode;
	for(var nn = par.firstChild; nn != null; nn = nn.nextSibling)
	    if(nn.nodeName == "c" || nn.nodeName == "l") cs[i++] = Guppy.manual_render(base,t,nn,r);
	for(var nn = n.firstChild; nn != null; nn = nn.nextSibling){
	    if(nn.nodeType == 3) ans += nn.textContent;
	    else if(nn.nodeType == 1){
		if(nn.hasAttribute("d")){
		    var dim = parseInt(nn.getAttribute("d"));
		    var joiner = function(d,l){
			if(d > 1) for(var k = 0; k < l.length; k++) l[k] = joiner(d-1,l[k]);
			return l.join(nn.getAttribute('sep'+d));
		    }
		    ans += joiner(dim,cs[parseInt(nn.getAttribute("ref"))]);
		}
		else ans += cs[parseInt(nn.getAttribute("ref"))];
	    }
	}
    }
    else if(n.nodeName == "l"){
	ans = [];
	var i = 0;
	for(var nn = n.firstChild; nn != null; nn = nn.nextSibling){
	    ans[i++] = Guppy.manual_render(base,t,nn,r);
	}
    }
    else if(n.nodeName == "c" || n.nodeName == "m"){
	for(var nn = n.firstChild; nn != null; nn = nn.nextSibling)
	    ans += Guppy.manual_render(base,t,nn,r);
	if(t == "latex" &&
           n.getAttribute("bracket") == "yes" &&
	   base.evaluate(Guppy.bracket_xpath, n, null,
			 XPathResult.BOOLEAN_TYPE, null).booleanValue){ 
	    ans = "\\left("+ans+"\\right)";
	}
    }
    Guppy.log(4,"rendered",ans)
    //console.log("AAA",n,ans);
    return ans;
}

Guppy.prototype.path_to = function(n){
    var name = n.nodeName;
    if(name == "m") return "guppy_loc_m";
    var ns = 0;
    for(var nn = n; nn != null; nn = nn.previousSibling) if(nn.nodeType == 1 && nn.nodeName == name) ns++;
    return this.path_to(n.parentNode)+"_"+name+""+ns;
}

Guppy.prototype.is_changed = function(){
    var bb = this.editor.getElementsByClassName("katex")[0];
    if(!bb) return;
    var rect = bb.getBoundingClientRect();
    if(this.bounding_box)
	ans = this.bounding_box.top != rect.top || this.bounding_box.bottom != rect.bottom || this.bounding_box.right != rect.right || this.bounding_box.left != rect.left;
    else
	ans = true;
    this.bounding_box = rect;
    return ans;
}

Guppy.prototype.recompute_locations_paths = function(){
    ans = [];
    var bb = this.editor.getElementsByClassName("katex")[0];
    if(!bb) return;
    var rect = bb.getBoundingClientRect();
    ans.push({'path':'all',
	      'top':rect.top,
	      'bottom':rect.bottom,
	      'left':rect.left,
	      'right':rect.right});
    var elts = this.editor.getElementsByClassName("guppy_elt");
    for(var i = 0; i < elts.length; i++){
	var elt = elts[i];
	if(elt.nodeName == "mstyle") continue;
	var rect = elt.getBoundingClientRect();
	Guppy.log(4,"rect dimensions BTLR",rect.bottom,rect.top,rect.left,rect.right,elt.classList);
	if(rect.top == 0 && rect.bottom == 0 && rect.left == 0 && rect.right == 0) continue;
	var cl = elt.classList;
	for(var j = 0; j < cl.length; j++){
	    if(cl[j].indexOf("guppy_loc") == 0){
		ans.push({'path':cl[j],
			  'top':rect.top,
			  'bottom':rect.bottom,
			  'left':rect.left,
			  'right':rect.right,
			  'mid_x':(rect.left+rect.right)/2,
			  'mid_y':(rect.bottom+rect.top)/2,
			  'blank':(' '+elt.className+' ').indexOf(' guppy_blank ') >= 0});
		break;
	    }
	}
    }
    this.boxes = ans;
    Guppy.log(4,"boxes",JSON.stringify(this.boxes));
}

Guppy.get_loc = function(x,y,current_node,current_caret){
    var g = Guppy.active_guppy;
    var min_dist = -1;
    var mid_x_dist = 0;
    var pos = "";
    var opt = null;
    var cur = null;
    var car = null;
    Guppy.log(4,"searching");
    // check if we go to first or last element
    var bb = g.editor.getElementsByClassName("katex")[0];
    if(!bb) return;
    var rect = bb.getBoundingClientRect();
    if(current_node){
	var current_path = g.path_to(current_node);
	var current_pos = parseInt(current_path.substring(current_path.lastIndexOf("e")+1));
    }
    // if(x < rect.left){
    // 	cur = g.base.documentElement.firstChild;
    // 	car = 0;
    // 	pos = "left";
    // }
    // else if(x > rect.right){
    // 	cur = g.base.documentElement.lastChild;
    // 	car = cur.firstChild.nodeValue.length;
    // 	pos = "right";
    // }
    //else{
	// We are inside expression

    var boxes = g.boxes;
    if(current_node){
	current_path = current_path.replace(/e[0-9]+$/,"e");
	var boxes2 = [];
	for(var i = 0; i < boxes.length; i++){
	    if(boxes[i].path == "all") continue;
	    var loc = boxes[i].path.substring(0,boxes[i].path.lastIndexOf("_"));
	    loc = loc.replace(/e[0-9]+$/,"e");
	    if(loc == current_path){
		boxes2.push(boxes[i]);
	    }
	}
	boxes = boxes2;
    }
    if(!boxes) return;
    Guppy.log(4,"boxes",boxes);
    for(var i = 0; i < boxes.length; i++){
	var box = boxes[i];
	//Guppy.log(4,"BOX",JSON.stringify(box),x,y);
	if(box.path == "all") continue;
	var xdist = Math.max(box.left - x, x - box.right, 0)
	var ydist = Math.max(box.top - y, y - box.bottom, 0)
	var dist = Math.sqrt(xdist*xdist + ydist*ydist);
	if(min_dist == -1 || dist < min_dist){
	    min_dist = dist;
	    mid_dist = x - box.mid_x;
	    opt = box;
	}
    }
    //Guppy.log(3,"OPT",JSON.stringify(opt),x,y);
    var loc = opt.path.substring("guppy_loc".length);
    loc = loc.replace(/_/g,"/");
    loc = loc.replace(/([0-9]+)(?=.*?\/)/g,"[$1]");
    //Guppy.log(3,"LOC",loc);
    cur = g.base.evaluate(loc.substring(0,loc.lastIndexOf("/")), g.base.documentElement, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;
    car = parseInt(loc.substring(loc.lastIndexOf("/")+1));
    // Check if we want the cursor before or after the element
    Guppy.log(4,"signed distance to middle of box",mid_dist);
    if(mid_dist > 0 && !(opt.blank)){
	car++;
    }
    ans = {"current":cur,"caret":car,"pos":pos};
    if(current_node && opt){
	var opt_pos = parseInt(opt.path.substring(opt.path.lastIndexOf("e")+1,opt.path.lastIndexOf("_")));
	//var opt_caret = parseInt(opt.path.substring(opt.path.lastIndexOf("_")+1));
	if(opt_pos < current_pos) pos = "left";
	else if(opt_pos > current_pos) pos = "right";
	else if(car < current_caret) pos = "left";
	else if(car > current_caret) pos = "right";
	Guppy.log(3,"POS",current_path,current_pos,opt_pos,car,current_caret);
	if(pos) ans['pos'] = pos;
	else ans['pos'] = "none";
    }
    return ans;
}

Guppy.prototype.select_to = function(x,y, mouse){
    var sel_caret = this.caret;
    var sel_cursor = this.current;
    if(this.sel_status == Guppy.SEL_CURSOR_AT_START){
	sel_cursor = this.sel_end.node;
	sel_caret = this.sel_end.caret;
    }
    else if(this.sel_status == Guppy.SEL_CURSOR_AT_END){
	sel_cursor = this.sel_start.node;
	sel_caret = this.sel_start.caret;
    }
    var loc = Guppy.get_loc(x,y,sel_cursor,sel_caret);
    if(!loc) return;
    if(loc.current == sel_cursor && loc.caret == sel_caret){
	this.caret = loc.caret
	this.sel_status = Guppy.SEL_NONE;
    }
    else if(loc.pos == "left"){
	this.sel_end = {"node":sel_cursor,"caret":sel_caret};
	this.set_sel_boundary(Guppy.SEL_CURSOR_AT_START, mouse);
    }
    else if(loc.pos == "right"){
	this.sel_start = {"node":sel_cursor,"caret":sel_caret};
	this.set_sel_boundary(Guppy.SEL_CURSOR_AT_END, mouse);
    }
    this.current = loc.current;
    this.caret = loc.caret;
}

Guppy.mouse_up = function(e){
    Guppy.kb.is_mouse_down = false;
    var g = Guppy.active_guppy;
    if(g) g.render(true);
}

Guppy.mouse_down = function(e){
    var n = e.target;
    Guppy.kb.is_mouse_down = true;
    if(e.target == document.getElementById("toggle_ref")) toggle_div("help_card");
    else while(n != null){
	if(n.id in Guppy.instances){
	    e.preventDefault();
	    Guppy.active_guppy = Guppy.instances[n.id];
	    Guppy.active_guppy.activate();
	    for(var i in Guppy.instances){
		if(i != n.id) Guppy.instances[i].deactivate();
	    }
	    var g = Guppy.active_guppy;
	    if(e.shiftKey){
		g.select_to(e.clientX, e.clientY, true);
	    }
	    else {
		var loc = Guppy.get_loc(e.clientX,e.clientY);
		if(!loc) return;
		g.current = loc.current;
		g.caret = loc.caret;
		g.sel_status = Guppy.SEL_NONE;
	    }
	    g.render(true);
	    return;
	}
	n = n.parentNode;
    }
    Guppy.active_guppy = null;
    for(var i in Guppy.instances){
	Guppy.instances[i].deactivate();
    }
}

Guppy.mouse_move = function(e){
    var g = Guppy.active_guppy;
    if(!g) return;
    if(!Guppy.kb.is_mouse_down){
	var bb = g.editor;
	var rect = bb.getBoundingClientRect();
	if((e.clientX < rect.left || e.clientX > rect.right) || (e.clientY > rect.bottom || e.clientY < rect.top)){
	    //Guppy.log(3,"R",rect);
	    g.temp_cursor = {"node":null,"caret":0};
	}
	else{
	    var loc = Guppy.get_loc(e.clientX,e.clientY);
	    if(!loc) return;
	    g.temp_cursor = {"node":loc.current,"caret":loc.caret};
	}
	g.render(g.is_changed());
    }
    else{
	g.select_to(e.clientX,e.clientY, true);
	//Guppy.log(3,"SSS",g.sel_status,g.sel_start,g.sel_end,g.caret);
	g.render(g.is_changed());
    }
}

window.addEventListener("mousedown",Guppy.mouse_down, false);
window.addEventListener("mouseup",Guppy.mouse_up, false);
window.addEventListener("mousemove",Guppy.mouse_move, false);

Guppy.prototype.add_paths = function(n,path){
    //Guppy.log(3,"B",n.nodeName,n.firstChild.nodeName)
    if(n.nodeName == "e"){
	n.setAttribute("path",path);
	//Guppy.log(3,"DONE");
    }
    else{
	//Guppy.log(3,"NOT DONE");
	var es = 1, fs = 1, cs = 1, ls = 1;
	for(var c = n.firstChild; c != null; c = c.nextSibling){
	    //Guppy.log(3,"C",c)
	    if(c.nodeName == "c"){ this.add_paths(c, path+"_c"+cs); cs++; }
	    else if(c.nodeName == "f"){ this.add_paths(c, path+"_f"+fs); fs++; }
	    else if(c.nodeName == "l"){ this.add_paths(c, path+"_l"+ls); ls++; }
	    else if(c.nodeName == "e"){ this.add_paths(c, path+"_e"+es); es++; }
	}
    }
}

Guppy.prototype.add_classes_cursors = function(n,path){
    //Guppy.log(3,"B",n.nodeName,n.firstChild.nodeName)
    if(n.nodeName == "e"){
	var text = n.firstChild.nodeValue;
	//Guppy.log(3,"T",text);
	ans = "";
	var sel_cursor;
	var text_node = this.is_text(n);
	//Guppy.log(4, "SSS", this.sel_status, Guppy.SEL_CURSOR_AT_START, Guppy.SEL_CURSOR_AT_END, this.current, this.caret, this.sel_start, this.sel_end);
	if(this.sel_status == Guppy.SEL_CURSOR_AT_START) sel_cursor = this.sel_end;
	if(this.sel_status == Guppy.SEL_CURSOR_AT_END) sel_cursor = this.sel_start;
	if(this.sel_status != Guppy.SEL_NONE){
	    var sel_caret_text = this.is_small(sel_cursor.node) ? Guppy.kb.SMALL_SEL_CARET : Guppy.kb.SEL_CARET;
	    if(!text_node && text.length == 0 && n.parentNode.childElementCount > 1){
		sel_caret_text = "\\color{blue}{\\xmlClass{guppy_elt guppy_blank guppy_loc_"+n.getAttribute("path")+"_0}{"+sel_caret_text+"}}";
	    }
	    else{
		sel_caret_text = "\\color{blue}{"+sel_caret_text+"}";
	    }
	    if(this.sel_status == Guppy.SEL_CURSOR_AT_END) sel_caret_text = text_node ? "[" : sel_caret_text + "\\color{"+Guppy.kb.SEL_COLOR+"}{";
	    if(this.sel_status == Guppy.SEL_CURSOR_AT_START) sel_caret_text = text_node ? "]" : "}" + sel_caret_text;
	}
	var caret_text = "";
	var temp_caret_text = "";
	if(text.length == 0){
	    if(text_node) caret_text = "[]";
	    else if(n.parentNode.childElementCount == 1){
		if(this.current == n){
		    var blank_caret = this.blank_caret || (this.is_small(this.current) ? Guppy.kb.SMALL_CARET : Guppy.kb.CARET);
		    ans = "\\color{red}{\\xmlClass{main_cursor guppy_elt guppy_blank guppy_loc_"+n.getAttribute("path")+"_0"+"}{"+blank_caret+"}}";
		}
		else if(this.temp_cursor.node == n)
		    ans = "\\color{gray}{\\xmlClass{guppy_elt guppy_blank guppy_loc_"+n.getAttribute("path")+"_0"+"}{[?]}}";
		else
		    ans = "\\color{blue}{\\xmlClass{guppy_elt guppy_blank guppy_loc_"+n.getAttribute("path")+"_0"+"}{[?]}}";
	    }
	    else if(this.temp_cursor.node != n && this.current != n && (!(sel_cursor) || sel_cursor.node != n)){
		// These are the empty e elements at either end of
		// a c or m node, such as the space before and
		// after both the sin and x^2 in sin(x^2)
		//
		// Here, we add in a small element so that we can
		// use the mouse to select these areas
		ans = "\\phantom{\\xmlClass{guppy_elt guppy_blank guppy_loc_"+n.getAttribute("path")+"_0"+"}{\\cursor[0.1ex]{1ex}}}";
	    }
	}
	Guppy.log(3,"SEL",sel_cursor,sel_caret_text);
	for(var i = 0; i < text.length+1; i++){
	    if(n == this.current && i == this.caret && (text.length > 0 || n.parentNode.childElementCount > 1)){
		if(text_node){
		    if(this.sel_status == Guppy.SEL_CURSOR_AT_START)
			caret_text = "[";
		    else if(this.sel_status == Guppy.SEL_CURSOR_AT_END)
			caret_text = "]";
		    else
			caret_text = "[]";
		}
		else{
		    //Guppy.log(3,"HERE");
		    caret_text = this.is_small(this.current) ? Guppy.kb.SMALL_CARET : Guppy.kb.CARET;
		    if(text.length == 0)
			caret_text = "\\color{red}{\\xmlClass{main_cursor guppy_elt guppy_blank guppy_loc_"+n.getAttribute("path")+"_0}{"+caret_text+"}}";
		    else{
			caret_text = "\\color{red}{\\xmlClass{main_cursor}{"+caret_text+"}}"
		    }
		    if(this.sel_status == Guppy.SEL_CURSOR_AT_START)
			caret_text = caret_text + "\\color{"+Guppy.kb.SEL_COLOR+"}{";
		    else if(this.sel_status == Guppy.SEL_CURSOR_AT_END)
			caret_text = "}" + caret_text;
		}
		ans += caret_text;
	    }
	    else if(n == this.current && i == this.caret && text_node){
		ans += caret_text;
	    }
	    else if(this.sel_status != Guppy.SEL_NONE && sel_cursor.node == n && i == sel_cursor.caret){
		ans += sel_caret_text;
	    }
	    else if(this.temp_cursor.node == n && i == this.temp_cursor.caret && (text.length > 0 || n.parentNode.childElementCount > 1)){
		if(text_node) 
		    temp_caret_text = ".";
		else{
		    temp_caret_text = this.is_small(this.current) ? Guppy.kb.TEMP_SMALL_CARET : Guppy.kb.TEMP_CARET;
		    if(text.length == 0){
			temp_caret_text = "\\color{gray}{\\xmlClass{guppy_elt guppy_blank guppy_loc_"+n.getAttribute("path")+"_0}{"+temp_caret_text+"}}";
		    }
		    else
			temp_caret_text = "\\color{gray}{"+temp_caret_text+"}";
		}
		ans += temp_caret_text;
	    }
	    if(i < text.length) ans += "\\xmlClass{guppy_elt guppy_loc_"+n.getAttribute("path")+"_"+i+"}{"+text[i]+"}";
	}
	n.setAttribute("render", ans);
	n.removeAttribute("path");
    }
    else{
	for(var c = n.firstChild; c != null; c = c.nextSibling){
	    if(c.nodeName == "c" || c.nodeName == "l" || c.nodeName == "f" || c.nodeName == "e"){ this.add_classes_cursors(c); }
	}
    }
}

Guppy.prototype.post_render_cleanup = function(n){
    if(n.nodeName == "e"){
	n.removeAttribute("path");
	n.removeAttribute("render");
	n.removeAttribute("current");
	n.removeAttribute("temp");
    }
    else{
	for(var c = n.firstChild; c != null; c = c.nextSibling){
	    if(c.nodeType == 1){ this.post_render_cleanup(c); }
	}
    }
}

Guppy.prototype.render_node = function(n,t){
    // All the interesting work is done by transform.  This function just adds in the cursor and selection-start cursor
    //Guppy.log(4,"location",this.caret,"=caret",this.current,this.current.firstChild.nodeValue.slice(0,this.caret),"bb",this.current.firstChild.nodeValue.slice(this.caret+Guppy.kb.CARET.length));
    var output = "";
    if(t == "latex"){
	this.add_paths(this.base.documentElement,"m");
	this.add_classes_cursors(this.base.documentElement);
	this.current.setAttribute("current","yes");
	if(this.temp_cursor.node) this.temp_cursor.node.setAttribute("temp","yes");
	output = Guppy.transform(t, this.base, true);
	this.post_render_cleanup(this.base.documentElement);
	Guppy.log(4,"rendered output",output);
	output = output.replace(new RegExp('&amp;','g'), '&');
	return output;
    }
    else{
	output = Guppy.transform(t, this.base);
    }
    //Guppy.log(3,"cc",caret,"=caret",current.firstChild.nodeValue,current.firstChild.nodeValue.slice(0,caret),"bb",current.firstChild.nodeValue.slice(caret+CARET.length));
    //if(t == "latex") current.firstChild.nodeValue = (caret == 0 ? "" : current.firstChild.nodeValue.slice(0,caret))+current.firstChild.nodeValue.slice(caret+CARET.length);
    return output
}

Guppy.prototype.set_sel_start = function(){
    this.sel_start = {"node":this.current, "caret":this.caret};
}

Guppy.prototype.set_sel_end = function(){
    this.sel_end = {"node":this.current, "caret":this.caret};
}

Guppy.prototype.next_sibling = function(n){
    if(n == null) return null;
    var c = n.parentNode.nextSibling;
    while(c != null && c.nodeName != "e") c = c.nextSibling;
    if(c == null) return null
    else return c.firstChild;
}

Guppy.prototype.prev_sibling = function(n){
    if(n == null) return null;
    var c = n.parentNode.previousSibling;
    while(c != null && c.nodeName != "e") c = c.previousSibling;
    if(c == null) return null
    else return c.firstChild;
}

Guppy.prototype.down_from_f = function(){
    var nn = this.current.firstChild;
    while(nn != null && nn.nodeName != 'c' && nn.nodeName != 'l') nn = nn.nextSibling;
    if(nn != null){
	while(nn.nodeName == 'l') nn = nn.firstChild;
	this.current = nn.firstChild;
    }
}

Guppy.prototype.down_from_f_to_blank = function(){
    var nn = this.current.firstChild;
    while(nn != null && !(nn.nodeName == 'c' && nn.children.length == 1 && nn.firstChild.firstChild.nodeValue == "")){
	Guppy.log(3,"DFFTB",nn);
	nn = nn.nextSibling;
    }
    if(nn != null){
	//Sanity check:
	
	while(nn.nodeName == 'l') nn = nn.firstChild;
	if(nn.nodeName != 'c' || nn.firstChild.nodeName != 'e'){
	    this.problem('dfftb');
	    return;
	}
	this.current = nn.firstChild;
    }
    else this.down_from_f();
}

Guppy.prototype.delete_from_f = function(to_insert){
    var n = this.current;
    var p = n.parentNode;
    var prev = n.previousSibling;
    var next = n.nextSibling;
    var middle = to_insert || "";
    var new_node = this.make_e(prev.firstChild.textContent + middle + next.firstChild.textContent);
    this.current = new_node;
    this.caret = prev.firstChild.textContent.length;
    p.insertBefore(new_node, prev);
    p.removeChild(prev);
    p.removeChild(n);
    p.removeChild(next);
}

Guppy.prototype.next_node_from_e = function(n){
    if(n == null || n.nodeName != 'e') return null;
    // If we have a next sibling f node, use that:
    if(n.nextSibling != null){
	if(n.nextSibling.nodeName != 'f'){
	    this.problem('nnfe3');
	    return null;
	}
	Guppy.log(3,"next");
	var nc = n.nextSibling.firstChild;
	while(nc != null){
	    if(nc.nodeName == 'c')
		return nc.firstChild;
	    else if(nc.nodeName == 'l'){
		while(nc.nodeName == 'l') nc = nc.firstChild;
		return nc.firstChild;
	    }
	    nc = nc.nextSibling
	}
	return n.nextSibling.nextSibling;
    }
    // If not, then we're either at the top level or our parent is a c
    // child of an f or l node, at which point we should look to see our
    // parent has a next sibling c node: 
    if(n.parentNode.nextSibling != null && n.parentNode.nextSibling.nodeName == 'c'){
	var nn = n.parentNode.nextSibling.firstChild;
	//Another sanity check:
	if(nn.nodeName != 'e'){
	    this.problem('nnfe1');
	    return null
	}
	Guppy.log(3,"parent.next.child")
	return nn;
    }
    // If we're actually at the top level, then do nothing: 
    if(n.parentNode.parentNode == null) return null;
    //Another sanity check: 
    if(n.parentNode.parentNode.nodeName != 'f'){
	this.problem('nnfe2');
	return null;
    }
    return n.parentNode.parentNode.nextSibling;
}

Guppy.prototype.prev_node_from_e = function(n){
    Guppy.log(3,n.previousSibling);
    if(n == null || n.nodeName != 'e') return null;
    if(n.previousSibling != null){
	if(n.previousSibling.nodeName != 'f'){
	    this.problem('pnfe3');
	    return null;
	}
	var nc = n.previousSibling.lastChild;
	while(nc != null){
	    if(nc.nodeName == 'c')
		return nc.lastChild;
	    nc = nc.previousSibling
	}
	return n.previousSibling.previousSibling;
    }
    else if(n.parentNode.previousSibling != null && n.parentNode.previousSibling.nodeName == 'c'){
	var nn = n.parentNode.previousSibling.lastChild;
	//Another sanity check:
	if(nn.nodeName != 'e'){
	    this.problem('pnfe1');
	    return null
	}
	return nn;
    }
    else if(n.parentNode.parentNode == null) return null;
    //Another sanity check: 
    if(n.parentNode.parentNode.nodeName != 'f'){
	this.problem('pnfe2');
	return null;
    }
    return n.parentNode.parentNode.previousSibling;
}

Guppy.prototype.symbol_to_node = function(sym_name, content){
    // sym_name is a key in the symbols dictionary
    //
    // content is a list of nodes to insert
    
    var s = Guppy.kb.symbols[sym_name];
    var f = this.base.createElement("f");
    if("type" in s) f.setAttribute("type",s["type"])
    if(s['char']) f.setAttribute("c","yes");
    
    var first_ref = -1;
    var refs_count = 0;
    var lists = {}
    var first;

    // Make the b nodes for rendering each output    
    for(var t in s["output"]){
	var b = this.base.createElement("b");
	b.setAttribute("p",t);

	var out = s["output"][t];
	if(typeof out == 'string'){
	    out = out.split(/(\{\$[0-9]+(?:\{[^}]\})*\})/g);
	    for(var i = 0; i < out.length; i++){
		m = out[i].match(/^\{\$([0-9]+)((?:\{[^}]\})*)\}$/);
		if(m){
		    out[i] = {'ref':parseInt(m[1])};
		    if(m[2].length > 0){
			mm = m[2].match(/\{[^}]*\}/g);
			out[i]['d'] = mm.length;
			for(var j = 0; j < mm.length; j++){
			    out[i]['sep'+j] = mm[j].substring(1,mm[j].length-1);
			}
		    }
		}
	    }
	}
	for(var i = 0; i < out.length; i++){
	    if(typeof out[i] == 'string' || out[i] instanceof String){
		var nt = this.base.createTextNode(out[i]);
		b.appendChild(nt);
	    }
	    else{
		var nt = this.base.createElement("r");
		for(var attr in out[i]){
		    nt.setAttribute(attr,out[i][attr]);
		}
		if(t == 'latex') {
		    if(first_ref == -1) first_ref = out[i]['ref'];
		    if('d' in out[i]) lists[refs_count] = out[i]['d']
		    refs_count++;
		}
		b.appendChild(nt);
	    }
	}
	f.appendChild(b);
    }
    // Now make the c nodes for storing the content
    for(var i = 0; i < refs_count; i++){
	var nc = this.base.createElement("c");
	if(i in content){
	    var node_list = content[i];
	    for(var se = 0; se < node_list.length; se++){
		nc.appendChild(node_list[se].cloneNode(true));
	    }
	}
	else nc.appendChild(this.make_e(""));
	//Guppy.log(3,refs_count,first_ref,i,ne);
	if(i+1 == first_ref) first = nc.lastChild;
	for(var a in s['attrs'])
	    if(s['attrs'][a][i] != 0) nc.setAttribute(a,s['attrs'][a][i]);
	if(i in lists){
	    var nl = this.base.createElement("l");
	    nl.setAttribute('d',lists[i]);
	    for(var j = 0; j < lists[i]; j++){
		nl.setAttribute('d'+j,"1");
	    }
	    nl.appendChild(nc);
	    f.appendChild(nl);
	}
	else f.appendChild(nc);
    }
    Guppy.log(3,"FF",f);
    return {"f":f, "first":first};
}

Guppy.prototype.is_text = function(nn){
    return (nn.parentNode.getAttribute("mode") && nn.parentNode.getAttribute("mode") == "text")
}

Guppy.prototype.is_small = function(nn){
    var n = nn.parentNode;
    while(n != null && n.nodeName != 'm'){
	if(n.getAttribute("size") == "s"){
	    return true;
	}
	n = n.parentNode
	while(n != null && n.nodeName != 'c')
	    n = n.parentNode;
    }
    return false;
}

Guppy.prototype.insert_symbol = function(sym_name){
    var s = Guppy.kb.symbols[sym_name];
    if(this.is_blacklisted(s['type'])){
	Guppy.log(3,"BLACKLISTED");
	return false;
    }
    var node_list = {};
    var content = {};
    var left_piece,right_piece;
    var cur = s['current'] == null ? 0 : parseInt(s['current']);
    var to_remove = [];
    var to_replace = null;
    var replace_f = false;
    
    Guppy.log(3,"cur",cur);
    
    if(cur > 0){
	cur--;
	Guppy.log(3,cur);
	if(this.sel_status != Guppy.SEL_NONE){
	    Guppy.log(3,"SEL",this.current);
	    var sel = this.sel_get();
	    sel_parent = sel.involved[0].parentNode;
	    Guppy.log(3,"SCC", sel, "\nABC", sel.involved[0], sel_parent, sel.node_list, this.current);
	    to_remove = sel.involved;
	    left_piece = this.make_e(sel.remnant.firstChild.nodeValue.slice(0,this.sel_start.caret));
	    right_piece = this.make_e(sel.remnant.firstChild.nodeValue.slice(this.sel_start.caret));
	    content[cur] = sel.node_list;
	    Guppy.log(3,"DONE_SEL",left_piece,content,right_piece);
	}
	else if(s['current_type'] == 'token'){
	    Guppy.log(3,"TOKEN");
	    // If we're at the beginning, then the token is the previous f node
	    if(this.caret == 0 && this.current.previousSibling != null){
		content[cur] = [this.make_e(""), this.current.previousSibling, this.make_e("")];
		to_replace = this.current.previousSibling;
		replace_f = true;
	    }
	    else{
		// look for [0-9.]+|[a-zA-Z] immediately preceeding the caret and use that as token
		var prev = this.current.firstChild.nodeValue.substring(0,this.caret);
		var token = prev.match(/[0-9.]+$|[a-zA-Z]$/);
		if(token != null && token.length > 0){
		    token = token[0];
		    left_piece = this.make_e(this.current.firstChild.nodeValue.slice(0,this.caret-token.length));
		    right_piece = this.make_e(this.current.firstChild.nodeValue.slice(this.caret));
		    content[cur] = [this.make_e(token)];
		}
	    }
	}
    }
    if(!replace_f && (left_piece == null || right_piece == null)){
	Guppy.log(3,"splitting",this.current,this.caret);
	left_piece = this.make_e(this.current.firstChild.nodeValue.slice(0,this.caret));
	right_piece = this.make_e(this.current.firstChild.nodeValue.slice(this.caret));
	to_remove = [this.current];
    }

    // By now:
    // 
    // content contains whatever we want to pre-populate the 'current' field with (if any)
    //
    // right_piece contains whatever content was in an involved node
    // to the right of the cursor but is not part of the insertion.
    // Analogously for left_piece
    //
    // Thus all we should have to do now is symbol_to_node(sym_type,
    // content) and then add the left_piece, resulting node, and
    // right_piece in that order.
    
    var new_current = null;
    var current_parent = this.current.parentNode;
    Guppy.log(3,this.current,this.current.parentNode);
    Guppy.log(3,"SO",s,s["output"])
    Guppy.log(3,"TR",this.current,this.current_parent,to_remove);
    
    var sym = this.symbol_to_node(sym_name,content);
    var f = sym.f;
    var new_current = sym.first;

    var next = this.current.nextSibling;

    Guppy.log(3,"CSSCS",this.current,this.current.parentNode);

    if(replace_f){
	Guppy.log(3,to_replace,current_parent,f);
	current_parent.replaceChild(f,to_replace);
    }
    else{
	if(to_remove.length == 0) this.current.parentNode.removeChild(this.current);
	
	for(var i = 0; i < to_remove.length; i++){
	    Guppy.log(3,"removing", to_remove[i]," from" , current_parent);
	    if(next == to_remove[i]) next = next.nextSibling;
	    current_parent.removeChild(to_remove[i]);
	}
	current_parent.insertBefore(left_piece, next);
	current_parent.insertBefore(f, next);
	current_parent.insertBefore(right_piece, next);
    }
    
    Guppy.log(3,(new XMLSerializer()).serializeToString(this.base));
    Guppy.log(3,new_current);
    this.caret = 0;
    this.current = f;
    if(s['char']){
	this.current = this.current.nextSibling;
    }
    else this.down_from_f_to_blank();

    this.sel_clear();
    this.checkpoint();
    // if(new_current != null) {
    // 	if(new_current.firstChild == null) new_current.appendChild(this.base.createTextNode(""));
    // 	current = new_current;
    // }
    // else{ // WHEN COULD THIS HAPPEN--no children of an f?
    // 	current = right_piece;
    // }
    this.render(true);
    return true;
}

Guppy.prototype.sel_get = function(){
    //Guppy.log(3,"sel_start_end",this.sel_start,this.sel_end,this.current,this.caret,this.sel_status);
    if(this.sel_status == Guppy.SEL_NONE){
	// if(this.current.nodeName == 'f'){ // This block should be dead
	//     Guppy.log(3,"THIS SHOULD NEVER HAPPEN");
	//     Guppy.log(3,"ABCD",this.current,this.current.previousSibling,this.current.parentNode);
	//     this.sel_start = {"node":this.current, "caret":this.current.previousSibling.firstChild.nodeValue.length};
	//     return {"node_list":[this.make_e(""),this.current,this.make_e("")],
	// 	    "remnant":this.make_e(this.current.previousSibling.firstChild.nodeValue + this.current.nextSibling.firstChild.nodeValue),
	// 	    "involved":[this.current.previousSibling, this.current, this.current.nextSibling]}
	// }
	// else
	return null;
    }
    var involved = [];
    var node_list = [];
    var remnant = null;

    if(this.sel_start.node == this.sel_end.node){
	return {"node_list":[this.make_e(this.sel_start.node.firstChild.nodeValue.substring(this.sel_start.caret, this.sel_end.caret))],
		"remnant":this.make_e(this.sel_start.node.firstChild.nodeValue.substring(0, this.sel_start.caret) + this.sel_end.node.firstChild.nodeValue.substring(this.sel_end.caret)),
		"involved":[this.sel_start.node]};
    }
    
    node_list.push(this.make_e(this.sel_start.node.firstChild.nodeValue.substring(this.sel_start.caret)));
    involved.push(this.sel_start.node);
    involved.push(this.sel_end.node);
    remnant = this.make_e(this.sel_start.node.firstChild.nodeValue.substring(0, this.sel_start.caret) + this.sel_end.node.firstChild.nodeValue.substring(this.sel_end.caret));
    var n = this.sel_start.node.nextSibling;
    while(n != null && n != this.sel_end.node){
	involved.push(n);
	node_list.push(n);
	n = n.nextSibling;
    }
    node_list.push(this.make_e(this.sel_end.node.firstChild.nodeValue.substring(0, this.sel_end.caret)));
    Guppy.log(3,"NL",node_list);
    return {"node_list":node_list,
	    "remnant":remnant,
	    "involved":involved,
	    "cursor":0};
}

Guppy.prototype.print_selection = function(){
    var sel = this.sel_get();
    Guppy.log(3,sel);
    if(sel == null) return "[none]";
    var ans = "";
    ans += "node_list: \n";
    for(var i = 0; i < sel.node_list.length; i++){
	var n = sel.node_list[i];
	ans += (new XMLSerializer()).serializeToString(n) + "\n";
    }
    ans += "\ninvolved: \n";
    for(var i = 0; i < sel.involved.length; i++){
	var n = sel.involved[i];
	ans += (new XMLSerializer()).serializeToString(n) + "\n";
    }
    // ans += "\n remnant: \n";
    // ans += (new XMLSerializer()).serializeToString(sel.remnant) + "\n";
    Guppy.log(3,ans);
}

Guppy.prototype.make_e = function(text){
    var new_node = this.base.createElement("e");
    new_node.appendChild(this.base.createTextNode(text));
    return new_node;
}

Guppy.prototype.is_blank = function(){
    return this.base.documentElement.firstChild == this.base.documentElement.lastChild && this.base.documentElement.firstChild.firstChild.textContent == "";
}

Guppy.prototype.insert_string = function(s){
    if(this.sel_status != Guppy.SEL_NONE){
	this.sel_delete();
	this.sel_clear();
    }
    Guppy.log(3,"ASD",this.caret,this.current,this.current.firstChild.nodeValue,s);
    this.current.firstChild.nodeValue = this.current.firstChild.nodeValue.splice(this.caret,s)
    this.caret += s.length;
    this.checkpoint();
    this.check_for_symbol();
    this.render(true);
}

Guppy.prototype.render = function(updated){
    if(!this.editor_active && this.is_blank()){
	katex.render(this.empty_content,this.editor);
	return;
    }
    var tex = this.render_node(this.base,"latex");
    Guppy.log(3,this.caret,"TEX", tex);
    katex.render(tex,this.editor);
    if(updated){
	this.recompute_locations_paths();
    }
}

Guppy.prototype.activate = function(){
    Guppy.active_guppy = this;
    this.editor_active = true;
    this.editor.className = this.editor.className.replace(new RegExp('(\\s|^)guppy_inactive(\\s|$)'),' guppy_active ');
    this.editor.focus();
    if(this.ready){
	this.render(true);
    }
}

Guppy.prototype.deactivate = function(){
    this.editor_active = false;
    var r = new RegExp('(\\s|^)guppy_active(\\s|$)');
    if(this.editor.className.match(r,' guppy_inactive ')){
	this.editor.className = this.editor.className.replace(r,' guppy_inactive ');
    }
    else{
	this.editor.className += ' guppy_inactive ';
    }
    Guppy.kb.shift_down = false;
    Guppy.kb.ctrl_down = false;
    Guppy.kb.alt_down = false;
    if(this.ready){
	this.render();
    }
}

Guppy.prototype.sel_copy = function(){
    var sel = this.sel_get();
    if(!sel) return;
    this.clipboard = [];
    for(var i = 0; i < sel.node_list.length; i++){
	this.clipboard.push(sel.node_list[i].cloneNode(true));
    }
    this.sel_clear();
}

Guppy.prototype.sel_cut = function(){
    var node_list = this.sel_delete();
    this.clipboard = [];
    for(var i = 0; i < node_list.length; i++){
	this.clipboard.push(node_list[i].cloneNode(true));
    }
    this.sel_clear();
    this.checkpoint();
}

Guppy.prototype.insert_nodes = function(node_list, move_cursor){
    var real_clipboard = [];
    for(var i = 0; i < node_list.length; i++){
	real_clipboard.push(node_list[i].cloneNode(true));
    }

    if(real_clipboard.length == 1){
	Guppy.log(3,"wimp");
	this.current.firstChild.nodeValue = this.current.firstChild.nodeValue.substring(0,this.caret) + real_clipboard[0].firstChild.nodeValue + this.current.firstChild.nodeValue.substring(this.caret);
	if(move_cursor) this.caret += real_clipboard[0].firstChild.nodeValue.length;
    }
    else{
	var nn = this.make_e(real_clipboard[real_clipboard.length-1].firstChild.nodeValue + this.current.firstChild.nodeValue.substring(this.caret));
	this.current.firstChild.nodeValue = this.current.firstChild.nodeValue.substring(0,this.caret) + real_clipboard[0].firstChild.nodeValue;
	if(this.current.nextSibling == null)
	    this.current.parentNode.appendChild(nn)
	else
	    this.current.parentNode.insertBefore(nn, this.current.nextSibling)
	Guppy.log(3,nn);
	for(var i = 1; i < real_clipboard.length - 1; i++)
	    this.current.parentNode.insertBefore(real_clipboard[i], nn);
	if(move_cursor){
	    this.current = nn;
	    this.caret = real_clipboard[real_clipboard.length-1].firstChild.nodeValue.length
	}
    }

}

Guppy.prototype.sel_paste = function(){
    this.sel_delete();
    this.sel_clear();
    if(!(this.clipboard) || this.clipboard.length == 0) return;
    this.insert_nodes(this.clipboard, true);
    this.checkpoint();
    return;
    var real_clipboard = [];
    for(var i = 0; i < this.clipboard.length; i++){
	real_clipboard.push(this.clipboard[i].cloneNode(true));
    }
    Guppy.log(3,"CLIPBOARD",this.clipboard);
    Guppy.log(3,"PASTING");
    
    if(real_clipboard.length == 1){
	Guppy.log(3,"wimp");
	this.current.firstChild.nodeValue = this.current.firstChild.nodeValue.substring(0,this.caret) + real_clipboard[0].firstChild.nodeValue + this.current.firstChild.nodeValue.substring(this.caret);
	this.caret += real_clipboard[0].firstChild.nodeValue.length;
    }
    else{
	var nn = this.make_e(real_clipboard[real_clipboard.length-1].firstChild.nodeValue + this.current.firstChild.nodeValue.substring(this.caret));
	this.current.firstChild.nodeValue = this.current.firstChild.nodeValue.substring(0,this.caret) + real_clipboard[0].firstChild.nodeValue;
	if(this.current.nextSibling == null)
	    this.current.parentNode.appendChild(nn)
	else
	    this.current.parentNode.insertBefore(nn, this.current.nextSibling)
	Guppy.log(3,nn);
	for(var i = 1; i < real_clipboard.length - 1; i++)
	    this.current.parentNode.insertBefore(real_clipboard[i], nn);
	this.current = nn;
	this.caret = real_clipboard[real_clipboard.length-1].firstChild.nodeValue.length
    }
    this.checkpoint();
}

Guppy.prototype.sel_clear = function(){
    this.sel_start = null;    
    this.sel_end = null;
    this.sel_status = Guppy.SEL_NONE;
}

Guppy.prototype.sel_delete = function(){
    var sel = this.sel_get();
    if(!sel) return;
    sel_parent = sel.involved[0].parentNode;
    sel_prev = sel.involved[0].previousSibling;
    Guppy.log(3,"SD", sel, "\nABC", sel.involved[0], sel_parent, sel_prev);
    for(var i = 0; i < sel.involved.length; i++){
	var n = sel.involved[i];
	sel_parent.removeChild(n);
    }
    if(sel_prev == null){
	Guppy.log(3,"PREVN",sel);
	if(sel_parent.firstChild == null)
	    sel_parent.appendChild(sel.remnant);
	else
	    sel_parent.insertBefore(sel.remnant, sel_parent.firstChild);
    }
    else if(sel_prev.nodeName == 'f'){
	Guppy.log(3,"PREVF",sel_prev.nextSibling);
	if(sel_prev.nextSibling == null)
	    sel_parent.appendChild(sel.remnant);
	else
	    sel_parent.insertBefore(sel.remnant, sel_prev.nextSibling);
    }
    this.current = sel.remnant
    this.caret = this.sel_start.caret;
    return sel.node_list;
}

//Functions for handling navigation and editing commands: 

Guppy.prototype.sel_right = function(){
    if(this.sel_status == Guppy.SEL_NONE){
	this.set_sel_start();
	this.sel_status = Guppy.SEL_CURSOR_AT_END;
    }
    //Guppy.log(3,"EEEE",this.caret,this.get_length(this.current));
    if(this.caret >= this.get_length(this.current)){
	var nn = this.current.nextSibling;
	if(nn != null){
	    this.current = nn.nextSibling;
	    this.caret = 0;
	    this.set_sel_boundary(Guppy.SEL_CURSOR_AT_END);
	    //Guppy.log(3,"asda");
	}
	else{
	    this.set_sel_boundary(Guppy.SEL_CURSOR_AT_END);
	    //Guppy.log(3,"at end while selecting");
	}
    }
    else{
	this.caret += 1;
	this.set_sel_boundary(Guppy.SEL_CURSOR_AT_END);
	//Guppy.log(3,"asdb");
    }
    //Guppy.log(3,"SS",this.sel_status, this.sel_start, this.sel_end);
    if(this.sel_start.node == this.sel_end.node && this.sel_start.caret == this.sel_end.caret){
	this.sel_status = Guppy.SEL_NONE;
    }
}

Guppy.prototype.set_sel_boundary = function(sstatus, mouse){
    if(this.sel_status == Guppy.SEL_NONE || mouse) this.sel_status = sstatus;
    if(this.sel_status == Guppy.SEL_CURSOR_AT_START)
	this.set_sel_start();
    else if(this.sel_status == Guppy.SEL_CURSOR_AT_END)
	this.set_sel_end();
}

Guppy.prototype.sel_left = function(){
    if(this.sel_status == Guppy.SEL_NONE){
	this.set_sel_end();
	this.sel_status = Guppy.SEL_CURSOR_AT_START;
    }
    Guppy.log(3,"EEEE");
    if(this.caret <= 0){
	var nn = this.current.previousSibling;
	if(nn != null){
	    this.current = nn.previousSibling;
	    this.caret = this.current.firstChild.nodeValue.length;
	    this.set_sel_boundary(Guppy.SEL_CURSOR_AT_START);
	    Guppy.log(3,"asdeee");
	}
	else{
	    this.set_sel_boundary(Guppy.SEL_CURSOR_AT_START);
	    Guppy.log(3,"at start while selecting");
	}
    }
    else{
	this.caret -= 1;
	this.set_sel_boundary(Guppy.SEL_CURSOR_AT_START);
	Guppy.log(3,"asdb");
    }
    Guppy.log(3,"SS",this.sel_status, this.sel_start, this.sel_end);
    if(this.sel_start.node == this.sel_end.node && this.sel_start.caret == this.sel_end.caret){
	this.sel_status = Guppy.SEL_NONE;
    }
}

Guppy.prototype.right = function(){
    this.sel_clear();
    Guppy.log(3,"R",this.current,this.caret);
    if(this.caret >= this.get_length(this.current)){
	var nn = this.next_node_from_e(this.current);
	if(nn != null){
	    this.current = nn;
	    this.caret = 0;
	}
	else{
	    if(this.right_callback) this.right_callback();
	    Guppy.log(3,"at end or problem");
	}
    }
    else{
	this.caret += 1;
    }
    Guppy.log(3,"R",this.current,this.current.parentNode,this.caret);
}

Guppy.prototype.get_length = function(n){
    if(Guppy.is_blank(n) || n.nodeName == 'f') return 0
    return n.firstChild.nodeValue.length;
    
}

Guppy.prototype.left = function(){
    this.sel_clear();
    Guppy.log(3,"L",this.current,this.current.firstChild.nodeValue,this.caret);
    if(this.caret <= 0){
	var pn = this.prev_node_from_e(this.current);
	if(pn != null){
	    this.current = pn;
	    this.caret = this.current.firstChild.nodeValue.length;
	}
	else{
	    if(this.left_callback) this.left_callback();
	    Guppy.log(3,"at beginnning or problem");
	}
    }
    else{
	this.caret -= 1;
    }
    Guppy.log(3,this.current,this.caret);
}

Guppy.prototype.delete_from_c = function(){
    var pos = 0;
    var c = this.current.parentNode;
    while(c && c.nodeName == "c"){
	pos++;
	c = c.previousSibling;
    }
    var idx = this.current.parentNode.getAttribute("delete");
    var survivor_node = this.base.evaluate("./c[position()="+idx+"]", this.current.parentNode.parentNode, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;
    var survivor_nodes = [];
    for(var n = survivor_node.firstChild; n != null; n = n.nextSibling){
	survivor_nodes.push(n);
    }
    this.current = this.current.parentNode.parentNode;
    this.delete_from_f();
    this.insert_nodes(survivor_nodes, pos > idx);
}

Guppy.prototype.delete_from_e = function(){
    // return false if we deleted something, and true otherwise.
    if(this.caret > 0){
	this.current.firstChild.nodeValue = this.current.firstChild.nodeValue.splicen(this.caret-1,"",1);
	this.caret--;
	Guppy.log(3,"bk","|"+this.current.firstChild.nodeValue+"|",this.current.firstChild.nodeValue.length);
    }
    else{
	// The order of these is important
	if(this.current.previousSibling != null && this.current.previousSibling.getAttribute("c") == "yes"){
	    // The previous node is an f node but is really just a character.  Delete it.
	    this.current = this.current.previousSibling;
	    this.delete_from_f();
	}
	else if(this.current.previousSibling != null && this.current.previousSibling.nodeName == 'f'){
	    // We're in an e node just after an f node.  Move back into the f node (delete it?)
	    this.left();
	    return false;
	}
	else if(this.current.parentNode.previousSibling != null && this.current.parentNode.previousSibling.nodeName == 'c'){
	    // We're in a c child of an f node, but not the first one.  Go to the previous c
	    if(this.current.parentNode.hasAttribute("delete")){
		this.delete_from_c();
	    }
	    else{
		this.left();
		return false;
	    }
	}
	else if(this.current.previousSibling == null && this.current.parentNode.nodeName == 'c' && (this.current.parentNode.previousSibling == null || this.current.parentNode.previousSibling.nodeName != 'c')){
	    // We're in the first c child of an f node and at the beginning--delete the f node
	    if(this.current.parentNode.hasAttribute("delete")){
		this.delete_from_c();
	    }
	    else{
		this.current = this.current.parentNode.parentNode;
		this.delete_from_f();
	    }
	}
	else{
	    // We're at the beginning (hopefully!) 
	    Guppy.log(3,"AT BEGINNING!");
	    return false;
	}
    }
    return true;
}

Guppy.prototype.delete_forward_from_e = function(){
    // return false if we deleted something, and true otherwise.
    if(this.caret < this.current.firstChild.nodeValue.length){
	this.current.firstChild.nodeValue = this.current.firstChild.nodeValue.splicen(this.caret,"",1);
	Guppy.log(3,"del","|"+this.current.firstChild.nodeValue+"|",this.current.firstChild.nodeValue.length);
    }
    else{
	//We're at the end
	if(this.current.nextSibling != null){
	    // The next node is an f node.  Delete it.
	    this.current = this.current.nextSibling;
	    this.delete_from_f();
	}
	else if(this.current.parentNode.nodeName == 'c'){
	    // We're in a c child of an f node.  Do nothing
	    return false;
	}
    }
    return true;
}

Guppy.prototype.backspace = function(){
    if(this.sel_status != Guppy.SEL_NONE){
	this.sel_delete();
	this.sel_status = Guppy.SEL_NONE;
	this.checkpoint();
    }
    else if(this.delete_from_e()){
	this.checkpoint();
    }
}

Guppy.prototype.delete_key = function(){
    if(this.sel_status != Guppy.SEL_NONE){
	this.sel_delete();
	this.sel_status = Guppy.SEL_NONE;
	this.checkpoint();
    }
    else if(this.delete_forward_from_e()){
	this.checkpoint();
    }
}

Guppy.prototype.right_paren = function(){
    if(this.current.nodeName == 'e' && this.caret < this.current.firstChild.nodeValue.length - 1) return;
    else this.right();
}

Guppy.prototype.up = function(){
    this.sel_clear();
    if(this.current.parentNode.hasAttribute("up")){
	var t = parseInt(this.current.parentNode.getAttribute("up"));
	Guppy.log(3,"TTT",t);
	var f = this.current.parentNode.parentNode;
	Guppy.log(3,f);
	var n = f.firstChild;
	while(n != null && t > 0){
	    if(n.nodeName == 'c') t--;
	    if(t > 0) n = n.nextSibling;
	}
	Guppy.log(3,n);
	this.current = n.lastChild;
	this.caret = this.current.firstChild.nodeValue.length;
    }
    // else{
    // 	if(current.parentNode.parentNode.nodeName == 'f'){
    // 	    current = current.parentNode.parentNode.previousSibling;
    // 	    caret = current.firstChild.nodeValue.length;
    // 	}
    // }
}

Guppy.prototype.down = function(){
    this.sel_clear();
    if(this.current.parentNode.hasAttribute("down")){
	var t = parseInt(this.current.parentNode.getAttribute("down"));
	Guppy.log(3,"TTT",t);
	var f = this.current.parentNode.parentNode;
	Guppy.log(3,f);
	var n = f.firstChild;
	while(n != null && t > 0){
	    if(n.nodeName == 'c') t--;
	    if(t > 0) n = n.nextSibling;
	}
	Guppy.log(3,n);
	this.current = n.lastChild;
	this.caret = this.current.firstChild.nodeValue.length;
    }
}

Guppy.prototype.home = function(){
    while(this.current.previousSibling != null)
	this.current = this.current.previousSibling;
    this.caret = 0;
}

Guppy.prototype.end = function(){
    while(this.current.nextSibling != null)
	this.current = this.current.nextSibling;
    this.caret = this.current.firstChild.nodeValue.length;
}

Guppy.prototype.checkpoint = function(){
    this.current.setAttribute("current","yes");
    this.current.setAttribute("caret",this.caret.toString());
    //if(!overwrite) this.undo_now++;
    this.undo_now++;
    this.undo_data[this.undo_now] = this.base.cloneNode(true);
    this.undo_data.splice(this.undo_now+1, this.undo_data.length);
    this.current.removeAttribute("current");
    this.current.removeAttribute("caret");
}

Guppy.prototype.restore = function(t){
    Guppy.log(3,"TTT",t);
    this.base = this.undo_data[t].cloneNode(true);
    Guppy.log(3,(new XMLSerializer()).serializeToString(this.base));
    this.find_current();
    this.current.removeAttribute("current");
    this.current.removeAttribute("caret");
}

Guppy.prototype.find_current = function(){
    this.current = this.base.evaluate("//*[@current='yes']", this.base.documentElement, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;
    this.caret = parseInt(this.current.getAttribute("caret"));
}

Guppy.prototype.undo = function(){
    Guppy.log(3,"UNDO");
    this.print_undo_data();
    if(this.undo_now <= 0) return;
    Guppy.log(3,"UNDOING");
    this.undo_now--;
    this.restore(this.undo_now);
}

Guppy.prototype.redo = function(){
    Guppy.log(3,"REDO");
    this.print_undo_data();
    if(this.undo_now >= this.undo_data.length-1) return;
    Guppy.log(3,"REDOING");
    this.undo_now++;
    this.restore(this.undo_now);
}

Guppy.prototype.print_undo_data = function(){
    Guppy.log(3,"UNDO DATA");
    Guppy.log(3,this.undo_now, this.undo_data.length);
    for(var i = 0; i < this.undo_data.length; i++){
	Guppy.log(3,i, (new XMLSerializer()).serializeToString(this.undo_data[i]));
    }
}

Guppy.prototype.done = function(s){
    this.done_callback();
}

Guppy.prototype.problem = function(s){
    Guppy.log(3,s);
    Guppy.log(3,'b',(new XMLSerializer()).serializeToString(this.base));
    Guppy.log(3,'c',(new XMLSerializer()).serializeToString(this.current));
}


Guppy.logging = {};
Guppy.logging.NONE = 0;
Guppy.logging.ERROR = 1;
Guppy.logging.WARN = 2;
Guppy.logging.INFO = 3;
Guppy.logging.DEBUG = 4;

// Keyboard stuff

Guppy.kb = {};

Guppy.kb.is_mouse_down = false;

Guppy.kb.CARET = "\\cursor[-0.2ex]{0.7em}"
Guppy.kb.TEMP_SMALL_CARET = "\\cursor[0em]{0.6em}"
Guppy.kb.TEMP_CARET = "\\cursor[-0.2ex]{0.7em}"
Guppy.kb.SMALL_CARET = "\\cursor[-0.05em]{0.5em}"
Guppy.kb.SEL_CARET = "\\cursor[-0.2ex]{0.7em}"
Guppy.kb.SMALL_SEL_CARET = "\\cursor[-0.05em]{0.5em}"
Guppy.kb.SEL_COLOR = "red"

Guppy.kb.symbols = {};

Guppy.prototype.is_blacklisted = function(symb_type){
    for(var i = 0; i < this.type_blacklist.length; i++)
	if(symb_type == this.type_blacklist[i]) return true;
    return false;
}

Guppy.symb_raw = function(symb_name,latex_symb,text_symb){
    Guppy.kb.symbols[symb_name] = {"output":{"latex":[latex_symb],
					     "text":[text_symb]},
				   "char":true,
				   "type":symb_name};
}

Guppy.symb_func = function(func_name){
    Guppy.kb.symbols[func_name] = {"output":{"latex":"\\"+func_name+"\\left({$1}\\right)",
					     "text":func_name+"({$1})"},
				   "type":func_name,
				   "attrs":{
				       "delete":[1]
				   }
				  };
}

Guppy.prototype.check_for_symbol = function(){
    var instance = this;
    for(var s in Guppy.kb.symbols){
	// Guppy.log(3,current);
	if(instance.current.nodeName == 'e' && !(Guppy.is_blank(instance.current)) && instance.current.firstChild.nodeValue.search_at(instance.caret,s)){
	    //Guppy.log(3,"INSERTION OF ",s);
	    //Guppy.log(3,current.nodeValue);
	    var temp = instance.current.firstChild.nodeValue;
	    var temp_caret = instance.caret;
	    instance.current.firstChild.nodeValue = instance.current.firstChild.nodeValue.slice(0,instance.caret-s.length)+instance.current.firstChild.nodeValue.slice(instance.caret);
	    //Guppy.log(3,current.nodeValue);
	    instance.caret -= s.length;
	    var success = instance.insert_symbol(s);
	    if(!success){
		instance.current.firstChild.nodeValue = temp;
		instance.caret = temp_caret;
	    }
	    break;
	}
    }
}

/* keyboard behaviour definitions */

// keys aside from 0-9,a-z,A-Z
Guppy.kb.k_chars = {
    "=":"=",
    "+":"+",
    "-":"-",
    "*":"*",
    ".":".",
    ",":",",
    "shift+/":"/",
    "shift+=":"+",
    "shift+1":"!"
};
Guppy.kb.k_syms = {
    "/":"slash",
    "shift+6":"exp",
    "shift+8":"*",
    "shift+9":"paren",
    "shift+,":"angle",
    "shift+-":"sub",
    "shift+\\":"abs",
    "shift+up":"exp",
    "shift+down":"sub"
};
Guppy.kb.k_controls = {
    "up":"up",
    "down":"down",
    "right":"right",
    "space":"right",
    "left":"left",
    "home":"home",
    "end":"end",
    "backspace":"backspace",
    "del":"delete_key",
    "mod+c":"sel_copy",
    "mod+x":"sel_cut",
    "mod+v":"sel_paste",
    "mod+z":"undo",
    "mod+y":"redo",
    "enter":"done",
    "shift+left":"sel_left",
    "shift+right":"sel_right",
    "shift+0":"right_paren"
};

// letters

for(var i = 65; i <= 90; i++){
    Guppy.kb.k_chars[String.fromCharCode(i).toLowerCase()] = String.fromCharCode(i).toLowerCase();
    Guppy.kb.k_chars['shift+'+String.fromCharCode(i).toLowerCase()] = String.fromCharCode(i).toUpperCase();
}

// numbers

for(var i = 48; i <= 57; i++)
    Guppy.kb.k_chars[String.fromCharCode(i)] = String.fromCharCode(i);

Guppy.register_keyboard_handlers = function(){
    Mousetrap.addKeycodes({173: '-'}); // Firefox's special minus (needed for _ = sub binding)
    for(var i in Guppy.kb.k_chars)
    	Mousetrap.bind(i,function(i){ return function(){
	    if(!Guppy.active_guppy) return true;
	    Guppy.active_guppy.temp_cursor.node = null;
	    Guppy.active_guppy.insert_string(Guppy.kb.k_chars[i]);
	    //Guppy.active_guppy.render(true);
	    return false;
	}}(i));  
    for(var i in Guppy.kb.k_syms)
    	Mousetrap.bind(i,function(i){ return function(){
	    if(!Guppy.active_guppy) return true;
	    Guppy.active_guppy.temp_cursor.node = null;
	    Guppy.active_guppy.insert_symbol(Guppy.kb.k_syms[i]);
	    //Guppy.active_guppy.render(true);
	    return false;
	}}(i));
    for(var i in Guppy.kb.k_controls)
    	Mousetrap.bind(i,function(i){ return function(){
	    if(!Guppy.active_guppy) return true;
	    Guppy.active_guppy[Guppy.kb.k_controls[i]]();
	    Guppy.active_guppy.temp_cursor.node = null;
	    Guppy.active_guppy.render(["up","down","right","left","home","end","sel_left","sel_right"].indexOf(i) < 0);
	    return false;
	}}(i));
    
}

Guppy.log = function(){
    if(!(Guppy.active_guppy) || Guppy.active_guppy.debug == Guppy.logging.NONE || Guppy.active_guppy.debug < arguments[0]) return;
    var s = "";
    for(var i = 1; i < arguments.length; i++){
	console.log(arguments[i]);
    }
}

module.exports = Guppy;

},{"../lib/katex/katex-modified.min.js":1,"mousetrap":2}]},{},[3])(3)
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Vzci9saWIvbm9kZV9tb2R1bGVzL2Jyb3dzZXJpZnkvbm9kZV9tb2R1bGVzL2Jyb3dzZXItcGFjay9fcHJlbHVkZS5qcyIsImxpYi9rYXRleC9rYXRleC1tb2RpZmllZC5taW4uanMiLCJub2RlX21vZHVsZXMvbW91c2V0cmFwL21vdXNldHJhcC5qcyIsInNyYy9ndXBweS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUNBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FDSkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDOWdDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIGUodCxuLHIpe2Z1bmN0aW9uIHMobyx1KXtpZighbltvXSl7aWYoIXRbb10pe3ZhciBhPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7aWYoIXUmJmEpcmV0dXJuIGEobywhMCk7aWYoaSlyZXR1cm4gaShvLCEwKTt2YXIgZj1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK28rXCInXCIpO3Rocm93IGYuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixmfXZhciBsPW5bb109e2V4cG9ydHM6e319O3Rbb11bMF0uY2FsbChsLmV4cG9ydHMsZnVuY3Rpb24oZSl7dmFyIG49dFtvXVsxXVtlXTtyZXR1cm4gcyhuP246ZSl9LGwsbC5leHBvcnRzLGUsdCxuLHIpfXJldHVybiBuW29dLmV4cG9ydHN9dmFyIGk9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtmb3IodmFyIG89MDtvPHIubGVuZ3RoO28rKylzKHJbb10pO3JldHVybiBzfSkiLCIoZnVuY3Rpb24oZSl7aWYodHlwZW9mIGV4cG9ydHM9PT1cIm9iamVjdFwiJiZ0eXBlb2YgbW9kdWxlIT09XCJ1bmRlZmluZWRcIil7bW9kdWxlLmV4cG9ydHM9ZSgpfWVsc2UgaWYodHlwZW9mIGRlZmluZT09PVwiZnVuY3Rpb25cIiYmZGVmaW5lLmFtZCl7ZGVmaW5lKFtdLGUpfWVsc2V7dmFyIHQ7aWYodHlwZW9mIHdpbmRvdyE9PVwidW5kZWZpbmVkXCIpe3Q9d2luZG93fWVsc2UgaWYodHlwZW9mIGdsb2JhbCE9PVwidW5kZWZpbmVkXCIpe3Q9Z2xvYmFsfWVsc2UgaWYodHlwZW9mIHNlbGYhPT1cInVuZGVmaW5lZFwiKXt0PXNlbGZ9ZWxzZXt0PXRoaXN9dC5rYXRleD1lKCl9fSkoZnVuY3Rpb24oKXt2YXIgZSx0LHI7cmV0dXJuIGZ1bmN0aW9uIGEoZSx0LHIpe2Z1bmN0aW9uIGkocyxsKXtpZighdFtzXSl7aWYoIWVbc10pe3ZhciBvPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7aWYoIWwmJm8pcmV0dXJuIG8ocywhMCk7aWYobilyZXR1cm4gbihzLCEwKTt2YXIgdT1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK3MrXCInXCIpO3Rocm93IHUuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIix1fXZhciBwPXRbc109e2V4cG9ydHM6e319O2Vbc11bMF0uY2FsbChwLmV4cG9ydHMsZnVuY3Rpb24odCl7dmFyIHI9ZVtzXVsxXVt0XTtyZXR1cm4gaShyP3I6dCl9LHAscC5leHBvcnRzLGEsZSx0LHIpfXJldHVybiB0W3NdLmV4cG9ydHN9dmFyIG49dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtmb3IodmFyIHM9MDtzPHIubGVuZ3RoO3MrKylpKHJbc10pO3JldHVybiBpfSh7MTpbZnVuY3Rpb24oZSx0LHIpe3ZhciBhPWUoXCIuL3NyYy9QYXJzZUVycm9yXCIpO3ZhciBpPWUoXCIuL3NyYy9TZXR0aW5nc1wiKTt2YXIgbj1lKFwiLi9zcmMvYnVpbGRUcmVlXCIpO3ZhciBzPWUoXCIuL3NyYy9wYXJzZVRyZWVcIik7dmFyIGw9ZShcIi4vc3JjL3V0aWxzXCIpO3ZhciBvPWZ1bmN0aW9uKGUsdCxyKXtsLmNsZWFyTm9kZSh0KTt2YXIgYT1uZXcgaShyKTt2YXIgbz1zKGUsYSk7dmFyIHU9bihvLGUsYSkudG9Ob2RlKCk7dC5hcHBlbmRDaGlsZCh1KX07aWYodHlwZW9mIGRvY3VtZW50IT09XCJ1bmRlZmluZWRcIil7aWYoZG9jdW1lbnQuY29tcGF0TW9kZSE9PVwiQ1NTMUNvbXBhdFwiKXt0eXBlb2YgY29uc29sZSE9PVwidW5kZWZpbmVkXCImJmNvbnNvbGUud2FybihcIldhcm5pbmc6IEthVGVYIGRvZXNuJ3Qgd29yayBpbiBxdWlya3MgbW9kZS4gTWFrZSBzdXJlIHlvdXIgXCIrXCJ3ZWJzaXRlIGhhcyBhIHN1aXRhYmxlIGRvY3R5cGUuXCIpO289ZnVuY3Rpb24oKXt0aHJvdyBuZXcgYShcIkthVGVYIGRvZXNuJ3Qgd29yayBpbiBxdWlya3MgbW9kZS5cIil9fX12YXIgdT1mdW5jdGlvbihlLHQpe3ZhciByPW5ldyBpKHQpO3ZhciBhPXMoZSxyKTtyZXR1cm4gbihhLGUscikudG9NYXJrdXAoKX07dmFyIHA9ZnVuY3Rpb24oZSx0KXt2YXIgcj1uZXcgaSh0KTtyZXR1cm4gcyhlLHIpfTt0LmV4cG9ydHM9e3JlbmRlcjpvLHJlbmRlclRvU3RyaW5nOnUsX19wYXJzZTpwLFBhcnNlRXJyb3I6YX19LHtcIi4vc3JjL1BhcnNlRXJyb3JcIjo2LFwiLi9zcmMvU2V0dGluZ3NcIjo4LFwiLi9zcmMvYnVpbGRUcmVlXCI6MTMsXCIuL3NyYy9wYXJzZVRyZWVcIjoyMixcIi4vc3JjL3V0aWxzXCI6MjV9XSwyOltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gYShlKXtpZighZS5fX21hdGNoQXRSZWxvY2F0YWJsZSl7dmFyIHQ9ZS5zb3VyY2UrXCJ8KClcIjt2YXIgcj1cImdcIisoZS5pZ25vcmVDYXNlP1wiaVwiOlwiXCIpKyhlLm11bHRpbGluZT9cIm1cIjpcIlwiKSsoZS51bmljb2RlP1widVwiOlwiXCIpO2UuX19tYXRjaEF0UmVsb2NhdGFibGU9bmV3IFJlZ0V4cCh0LHIpfXJldHVybiBlLl9fbWF0Y2hBdFJlbG9jYXRhYmxlfWZ1bmN0aW9uIGkoZSx0LHIpe2lmKGUuZ2xvYmFsfHxlLnN0aWNreSl7dGhyb3cgbmV3IEVycm9yKFwibWF0Y2hBdCguLi4pOiBPbmx5IG5vbi1nbG9iYWwgcmVnZXhlcyBhcmUgc3VwcG9ydGVkXCIpfXZhciBpPWEoZSk7aS5sYXN0SW5kZXg9cjt2YXIgbj1pLmV4ZWModCk7aWYobltuLmxlbmd0aC0xXT09bnVsbCl7bi5sZW5ndGg9bi5sZW5ndGgtMTtyZXR1cm4gbn1lbHNle3JldHVybiBudWxsfX10LmV4cG9ydHM9aX0se31dLDM6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgYT1lKFwibWF0Y2gtYXRcIik7dmFyIGk9ZShcIi4vUGFyc2VFcnJvclwiKTtmdW5jdGlvbiBuKGUpe3RoaXMuaW5wdXQ9ZTt0aGlzLnBvcz0wfWZ1bmN0aW9uIHMoZSx0LHIsYSl7dGhpcy50ZXh0PWU7dGhpcy5zdGFydD10O3RoaXMuZW5kPXI7dGhpcy5sZXhlcj1hfXMucHJvdG90eXBlLnJhbmdlPWZ1bmN0aW9uKGUsdCl7aWYoZS5sZXhlciE9PXRoaXMubGV4ZXIpe3JldHVybiBuZXcgcyh0KX1yZXR1cm4gbmV3IHModCx0aGlzLnN0YXJ0LGUuZW5kLHRoaXMubGV4ZXIpfTt2YXIgbD1uZXcgUmVnRXhwKFwiKFsgXFxyXFxuXHRdKyl8XCIrXCIoWyEtXFxcXFtcXFxcXS1cXHUyMDI3XFx1MjAyYS1cXHVkN2ZmXFx1ZjkwMC1cXHVmZmZmXVwiK1wifFtcXHVkODAwLVxcdWRiZmZdW1xcdWRjMDAtXFx1ZGZmZl1cIitcInxcXFxcXFxcXCg/OlthLXpBLVpdK3xbXlxcdWQ4MDAtXFx1ZGZmZl0pXCIrXCIpXCIpO24ucHJvdG90eXBlLmxleD1mdW5jdGlvbigpe3ZhciBlPXRoaXMuaW5wdXQ7dmFyIHQ9dGhpcy5wb3M7aWYodD09PWUubGVuZ3RoKXtyZXR1cm4gbmV3IHMoXCJFT0ZcIix0LHQsdGhpcyl9dmFyIHI9YShsLGUsdCk7aWYocj09PW51bGwpe3Rocm93IG5ldyBpKFwiVW5leHBlY3RlZCBjaGFyYWN0ZXI6ICdcIitlW3RdK1wiJ1wiLG5ldyBzKGVbdF0sdCx0KzEsdGhpcykpfXZhciBuPXJbMl18fFwiIFwiO3ZhciBvPXRoaXMucG9zO3RoaXMucG9zKz1yWzBdLmxlbmd0aDt2YXIgdT10aGlzLnBvcztyZXR1cm4gbmV3IHMobixvLHUsdGhpcyl9O3QuZXhwb3J0cz1ufSx7XCIuL1BhcnNlRXJyb3JcIjo2LFwibWF0Y2gtYXRcIjoyfV0sNDpbZnVuY3Rpb24oZSx0LHIpe3ZhciBhPWUoXCIuL0xleGVyXCIpO2Z1bmN0aW9uIGkoZSx0KXt0aGlzLmxleGVyPW5ldyBhKGUpO3RoaXMubWFjcm9zPXQ7dGhpcy5zdGFjaz1bXTt0aGlzLmRpc2NhcmRlZFdoaXRlU3BhY2U9W119aS5wcm90b3R5cGUubmV4dFRva2VuPWZ1bmN0aW9uKCl7Zm9yKDs7KXtpZih0aGlzLnN0YWNrLmxlbmd0aD09PTApe3RoaXMuc3RhY2sucHVzaCh0aGlzLmxleGVyLmxleCgpKX12YXIgZT10aGlzLnN0YWNrLnBvcCgpO3ZhciB0PWUudGV4dDtpZighKHQuY2hhckF0KDApPT09XCJcXFxcXCImJnRoaXMubWFjcm9zLmhhc093blByb3BlcnR5KHQpKSl7cmV0dXJuIGV9dmFyIHI9dGhpcy5tYWNyb3NbdF07aWYodHlwZW9mIHI9PT1cInN0cmluZ1wiKXt2YXIgaT1uZXcgYShyKTtyPVtdO3ZhciBuPWkubGV4KCk7d2hpbGUobi50ZXh0IT09XCJFT0ZcIil7ci5wdXNoKG4pO249aS5sZXgoKX1yLnJldmVyc2UoKTt0aGlzLm1hY3Jvc1t0XT1yfXRoaXMuc3RhY2s9dGhpcy5zdGFjay5jb25jYXQocil9fTtpLnByb3RvdHlwZS5nZXQ9ZnVuY3Rpb24oZSl7dGhpcy5kaXNjYXJkZWRXaGl0ZVNwYWNlPVtdO3ZhciB0PXRoaXMubmV4dFRva2VuKCk7aWYoZSl7d2hpbGUodC50ZXh0PT09XCIgXCIpe3RoaXMuZGlzY2FyZGVkV2hpdGVTcGFjZS5wdXNoKHQpO3Q9dGhpcy5uZXh0VG9rZW4oKX19cmV0dXJuIHR9O2kucHJvdG90eXBlLnVuZ2V0PWZ1bmN0aW9uKGUpe3RoaXMuc3RhY2sucHVzaChlKTt3aGlsZSh0aGlzLmRpc2NhcmRlZFdoaXRlU3BhY2UubGVuZ3RoIT09MCl7dGhpcy5zdGFjay5wdXNoKHRoaXMuZGlzY2FyZGVkV2hpdGVTcGFjZS5wb3AoKSl9fTt0LmV4cG9ydHM9aX0se1wiLi9MZXhlclwiOjN9XSw1OltmdW5jdGlvbihlLHQscil7ZnVuY3Rpb24gYShlKXt0aGlzLnN0eWxlPWUuc3R5bGU7dGhpcy5jb2xvcj1lLmNvbG9yO3RoaXMuc2l6ZT1lLnNpemU7dGhpcy5waGFudG9tPWUucGhhbnRvbTt0aGlzLmZvbnQ9ZS5mb250O2lmKGUucGFyZW50U3R5bGU9PT11bmRlZmluZWQpe3RoaXMucGFyZW50U3R5bGU9ZS5zdHlsZX1lbHNle3RoaXMucGFyZW50U3R5bGU9ZS5wYXJlbnRTdHlsZX1pZihlLnBhcmVudFNpemU9PT11bmRlZmluZWQpe3RoaXMucGFyZW50U2l6ZT1lLnNpemV9ZWxzZXt0aGlzLnBhcmVudFNpemU9ZS5wYXJlbnRTaXplfX1hLnByb3RvdHlwZS5leHRlbmQ9ZnVuY3Rpb24oZSl7dmFyIHQ9e3N0eWxlOnRoaXMuc3R5bGUsc2l6ZTp0aGlzLnNpemUsY29sb3I6dGhpcy5jb2xvcixwYXJlbnRTdHlsZTp0aGlzLnN0eWxlLHBhcmVudFNpemU6dGhpcy5zaXplLHBoYW50b206dGhpcy5waGFudG9tLGZvbnQ6dGhpcy5mb250fTtmb3IodmFyIHIgaW4gZSl7aWYoZS5oYXNPd25Qcm9wZXJ0eShyKSl7dFtyXT1lW3JdfX1yZXR1cm4gbmV3IGEodCl9O2EucHJvdG90eXBlLndpdGhTdHlsZT1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5leHRlbmQoe3N0eWxlOmV9KX07YS5wcm90b3R5cGUud2l0aFNpemU9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuZXh0ZW5kKHtzaXplOmV9KX07YS5wcm90b3R5cGUud2l0aENvbG9yPWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLmV4dGVuZCh7Y29sb3I6ZX0pfTthLnByb3RvdHlwZS53aXRoUGhhbnRvbT1mdW5jdGlvbigpe3JldHVybiB0aGlzLmV4dGVuZCh7cGhhbnRvbTp0cnVlfSl9O2EucHJvdG90eXBlLndpdGhGb250PWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLmV4dGVuZCh7Zm9udDplfSl9O2EucHJvdG90eXBlLnJlc2V0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZXh0ZW5kKHt9KX07dmFyIGk9e1wia2F0ZXgtYmx1ZVwiOlwiIzY0OTVlZFwiLFwia2F0ZXgtb3JhbmdlXCI6XCIjZmZhNTAwXCIsXCJrYXRleC1waW5rXCI6XCIjZmYwMGFmXCIsXCJrYXRleC1yZWRcIjpcIiNkZjAwMzBcIixcImthdGV4LWdyZWVuXCI6XCIjMjhhZTdiXCIsXCJrYXRleC1ncmF5XCI6XCJncmF5XCIsXCJrYXRleC1wdXJwbGVcIjpcIiM5ZDM4YmRcIixcImthdGV4LWJsdWVBXCI6XCIjY2NmYWZmXCIsXCJrYXRleC1ibHVlQlwiOlwiIzgwZjZmZlwiLFwia2F0ZXgtYmx1ZUNcIjpcIiM2M2Q5ZWFcIixcImthdGV4LWJsdWVEXCI6XCIjMTFhY2NkXCIsXCJrYXRleC1ibHVlRVwiOlwiIzBjN2Y5OVwiLFwia2F0ZXgtdGVhbEFcIjpcIiM5NGZmZjVcIixcImthdGV4LXRlYWxCXCI6XCIjMjZlZGQ1XCIsXCJrYXRleC10ZWFsQ1wiOlwiIzAxZDFjMVwiLFwia2F0ZXgtdGVhbERcIjpcIiMwMWE5OTVcIixcImthdGV4LXRlYWxFXCI6XCIjMjA4MTcwXCIsXCJrYXRleC1ncmVlbkFcIjpcIiNiNmZmYjBcIixcImthdGV4LWdyZWVuQlwiOlwiIzhhZjI4MVwiLFwia2F0ZXgtZ3JlZW5DXCI6XCIjNzRjZjcwXCIsXCJrYXRleC1ncmVlbkRcIjpcIiMxZmFiNTRcIixcImthdGV4LWdyZWVuRVwiOlwiIzBkOTIzZlwiLFwia2F0ZXgtZ29sZEFcIjpcIiNmZmQwYTlcIixcImthdGV4LWdvbGRCXCI6XCIjZmZiYjcxXCIsXCJrYXRleC1nb2xkQ1wiOlwiI2ZmOWMzOVwiLFwia2F0ZXgtZ29sZERcIjpcIiNlMDdkMTBcIixcImthdGV4LWdvbGRFXCI6XCIjYTc1YTA1XCIsXCJrYXRleC1yZWRBXCI6XCIjZmNhOWE5XCIsXCJrYXRleC1yZWRCXCI6XCIjZmY4NDgyXCIsXCJrYXRleC1yZWRDXCI6XCIjZjk2ODVkXCIsXCJrYXRleC1yZWREXCI6XCIjZTg0ZDM5XCIsXCJrYXRleC1yZWRFXCI6XCIjYmMyNjEyXCIsXCJrYXRleC1tYXJvb25BXCI6XCIjZmZiZGUwXCIsXCJrYXRleC1tYXJvb25CXCI6XCIjZmY5MmM2XCIsXCJrYXRleC1tYXJvb25DXCI6XCIjZWQ1ZmE2XCIsXCJrYXRleC1tYXJvb25EXCI6XCIjY2EzMzdjXCIsXCJrYXRleC1tYXJvb25FXCI6XCIjOWUwMzRlXCIsXCJrYXRleC1wdXJwbGVBXCI6XCIjZGRkN2ZmXCIsXCJrYXRleC1wdXJwbGVCXCI6XCIjYzZiOWZjXCIsXCJrYXRleC1wdXJwbGVDXCI6XCIjYWE4N2ZmXCIsXCJrYXRleC1wdXJwbGVEXCI6XCIjNzg1NGFiXCIsXCJrYXRleC1wdXJwbGVFXCI6XCIjNTQzYjc4XCIsXCJrYXRleC1taW50QVwiOlwiI2Y1ZjllOFwiLFwia2F0ZXgtbWludEJcIjpcIiNlZGYyZGZcIixcImthdGV4LW1pbnRDXCI6XCIjZTBlNWNjXCIsXCJrYXRleC1ncmF5QVwiOlwiI2Y2ZjdmN1wiLFwia2F0ZXgtZ3JheUJcIjpcIiNmMGYxZjJcIixcImthdGV4LWdyYXlDXCI6XCIjZTNlNWU2XCIsXCJrYXRleC1ncmF5RFwiOlwiI2Q2ZDhkYVwiLFwia2F0ZXgtZ3JheUVcIjpcIiNiYWJlYzJcIixcImthdGV4LWdyYXlGXCI6XCIjODg4ZDkzXCIsXCJrYXRleC1ncmF5R1wiOlwiIzYyNjU2OVwiLFwia2F0ZXgtZ3JheUhcIjpcIiMzYjNlNDBcIixcImthdGV4LWdyYXlJXCI6XCIjMjEyNDJjXCIsXCJrYXRleC1rYUJsdWVcIjpcIiMzMTQ0NTNcIixcImthdGV4LWthR3JlZW5cIjpcIiM3MUIzMDdcIn07YS5wcm90b3R5cGUuZ2V0Q29sb3I9ZnVuY3Rpb24oKXtpZih0aGlzLnBoYW50b20pe3JldHVyblwidHJhbnNwYXJlbnRcIn1lbHNle3JldHVybiBpW3RoaXMuY29sb3JdfHx0aGlzLmNvbG9yfX07dC5leHBvcnRzPWF9LHt9XSw2OltmdW5jdGlvbihlLHQscil7ZnVuY3Rpb24gYShlLHQpe3ZhciByPVwiS2FUZVggcGFyc2UgZXJyb3I6IFwiK2U7dmFyIGk7dmFyIG47aWYodCYmdC5sZXhlciYmdC5zdGFydDw9dC5lbmQpe3ZhciBzPXQubGV4ZXIuaW5wdXQ7aT10LnN0YXJ0O249dC5lbmQ7aWYoaT09PXMubGVuZ3RoKXtyKz1cIiBhdCBlbmQgb2YgaW5wdXQ6IFwifWVsc2V7cis9XCIgYXQgcG9zaXRpb24gXCIrKGkrMSkrXCI6IFwifXZhciBsPXMuc2xpY2UoaSxuKS5yZXBsYWNlKC9bXl0vZyxcIiQmXFx1MDMzMlwiKTt2YXIgbztpZihpPjE1KXtvPVwiXFx1MjAyNlwiK3Muc2xpY2UoaS0xNSxpKX1lbHNle289cy5zbGljZSgwLGkpfXZhciB1O2lmKG4rMTU8cy5sZW5ndGgpe3U9cy5zbGljZShuLG4rMTUpK1wiXFx1MjAyNlwifWVsc2V7dT1zLnNsaWNlKG4pfXIrPW8rbCt1fXZhciBwPW5ldyBFcnJvcihyKTtwLm5hbWU9XCJQYXJzZUVycm9yXCI7cC5fX3Byb3RvX189YS5wcm90b3R5cGU7cC5wb3NpdGlvbj1pO3JldHVybiBwfWEucHJvdG90eXBlLl9fcHJvdG9fXz1FcnJvci5wcm90b3R5cGU7dC5leHBvcnRzPWF9LHt9XSw3OltmdW5jdGlvbihlLHQscil7dmFyIGE9ZShcIi4vZnVuY3Rpb25zXCIpO3ZhciBpPWUoXCIuL2Vudmlyb25tZW50c1wiKTt2YXIgbj1lKFwiLi9NYWNyb0V4cGFuZGVyXCIpO3ZhciBzPWUoXCIuL3N5bWJvbHNcIik7dmFyIGw9ZShcIi4vdXRpbHNcIik7dmFyIG89ZShcIi4vdW5pY29kZVJlZ2V4ZXNcIikuY2prUmVnZXg7dmFyIHU9ZShcIi4vcGFyc2VEYXRhXCIpO3ZhciBwPWUoXCIuL1BhcnNlRXJyb3JcIik7ZnVuY3Rpb24gaChlLHQpe3RoaXMuZ3VsbGV0PW5ldyBuKGUsdC5tYWNyb3MpO3RoaXMuc2V0dGluZ3M9dH12YXIgYz11LlBhcnNlTm9kZTtmdW5jdGlvbiB2KGUsdCxyKXt0aGlzLnJlc3VsdD1lO3RoaXMuaXNGdW5jdGlvbj10O3RoaXMudG9rZW49cn1oLnByb3RvdHlwZS5leHBlY3Q9ZnVuY3Rpb24oZSx0KXtpZih0aGlzLm5leHRUb2tlbi50ZXh0IT09ZSl7dGhyb3cgbmV3IHAoXCJFeHBlY3RlZCAnXCIrZStcIicsIGdvdCAnXCIrdGhpcy5uZXh0VG9rZW4udGV4dCtcIidcIix0aGlzLm5leHRUb2tlbil9aWYodCE9PWZhbHNlKXt0aGlzLmNvbnN1bWUoKX19O2gucHJvdG90eXBlLmNvbnN1bWU9ZnVuY3Rpb24oKXt0aGlzLm5leHRUb2tlbj10aGlzLmd1bGxldC5nZXQodGhpcy5tb2RlPT09XCJtYXRoXCIpfTtoLnByb3RvdHlwZS5zd2l0Y2hNb2RlPWZ1bmN0aW9uKGUpe3RoaXMuZ3VsbGV0LnVuZ2V0KHRoaXMubmV4dFRva2VuKTt0aGlzLm1vZGU9ZTt0aGlzLmNvbnN1bWUoKX07aC5wcm90b3R5cGUucGFyc2U9ZnVuY3Rpb24oKXt0aGlzLm1vZGU9XCJtYXRoXCI7dGhpcy5jb25zdW1lKCk7dmFyIGU9dGhpcy5wYXJzZUlucHV0KCk7cmV0dXJuIGV9O2gucHJvdG90eXBlLnBhcnNlSW5wdXQ9ZnVuY3Rpb24oKXt2YXIgZT10aGlzLnBhcnNlRXhwcmVzc2lvbihmYWxzZSk7dGhpcy5leHBlY3QoXCJFT0ZcIixmYWxzZSk7cmV0dXJuIGV9O3ZhciBmPVtcIn1cIixcIlxcXFxlbmRcIixcIlxcXFxyaWdodFwiLFwiJlwiLFwiXFxcXFxcXFxcIixcIlxcXFxjclwiXTtoLnByb3RvdHlwZS5wYXJzZUV4cHJlc3Npb249ZnVuY3Rpb24oZSx0KXt2YXIgcj1bXTt3aGlsZSh0cnVlKXt2YXIgaT10aGlzLm5leHRUb2tlbjtpZihmLmluZGV4T2YoaS50ZXh0KSE9PS0xKXticmVha31pZih0JiZpLnRleHQ9PT10KXticmVha31pZihlJiZhW2kudGV4dF0mJmFbaS50ZXh0XS5pbmZpeCl7YnJlYWt9dmFyIG49dGhpcy5wYXJzZUF0b20oKTtpZighbil7aWYoIXRoaXMuc2V0dGluZ3MudGhyb3dPbkVycm9yJiZpLnRleHRbMF09PT1cIlxcXFxcIil7dmFyIHM9dGhpcy5oYW5kbGVVbnN1cHBvcnRlZENtZCgpO3IucHVzaChzKTtjb250aW51ZX1icmVha31yLnB1c2gobil9cmV0dXJuIHRoaXMuaGFuZGxlSW5maXhOb2RlcyhyKX07aC5wcm90b3R5cGUuaGFuZGxlSW5maXhOb2Rlcz1mdW5jdGlvbihlKXt2YXIgdD0tMTt2YXIgcjtmb3IodmFyIGE9MDthPGUubGVuZ3RoO2ErKyl7dmFyIGk9ZVthXTtpZihpLnR5cGU9PT1cImluZml4XCIpe2lmKHQhPT0tMSl7dGhyb3cgbmV3IHAoXCJvbmx5IG9uZSBpbmZpeCBvcGVyYXRvciBwZXIgZ3JvdXBcIixpLnZhbHVlLnRva2VuKX10PWE7cj1pLnZhbHVlLnJlcGxhY2VXaXRofX1pZih0IT09LTEpe3ZhciBuO3ZhciBzO3ZhciBsPWUuc2xpY2UoMCx0KTt2YXIgbz1lLnNsaWNlKHQrMSk7aWYobC5sZW5ndGg9PT0xJiZsWzBdLnR5cGU9PT1cIm9yZGdyb3VwXCIpe249bFswXX1lbHNle249bmV3IGMoXCJvcmRncm91cFwiLGwsdGhpcy5tb2RlKX1pZihvLmxlbmd0aD09PTEmJm9bMF0udHlwZT09PVwib3JkZ3JvdXBcIil7cz1vWzBdfWVsc2V7cz1uZXcgYyhcIm9yZGdyb3VwXCIsbyx0aGlzLm1vZGUpfXZhciB1PXRoaXMuY2FsbEZ1bmN0aW9uKHIsW24sc10sbnVsbCk7cmV0dXJuW25ldyBjKHUudHlwZSx1LHRoaXMubW9kZSldfWVsc2V7cmV0dXJuIGV9fTt2YXIgbT0xO2gucHJvdG90eXBlLmhhbmRsZVN1cFN1YnNjcmlwdD1mdW5jdGlvbihlKXt2YXIgdD10aGlzLm5leHRUb2tlbjt2YXIgcj10LnRleHQ7dGhpcy5jb25zdW1lKCk7dmFyIGk9dGhpcy5wYXJzZUdyb3VwKCk7aWYoIWkpe2lmKCF0aGlzLnNldHRpbmdzLnRocm93T25FcnJvciYmdGhpcy5uZXh0VG9rZW4udGV4dFswXT09PVwiXFxcXFwiKXtyZXR1cm4gdGhpcy5oYW5kbGVVbnN1cHBvcnRlZENtZCgpfWVsc2V7dGhyb3cgbmV3IHAoXCJFeHBlY3RlZCBncm91cCBhZnRlciAnXCIrcitcIidcIix0KX19ZWxzZSBpZihpLmlzRnVuY3Rpb24pe3ZhciBuPWFbaS5yZXN1bHRdLmdyZWVkaW5lc3M7aWYobj5tKXtyZXR1cm4gdGhpcy5wYXJzZUZ1bmN0aW9uKGkpfWVsc2V7dGhyb3cgbmV3IHAoXCJHb3QgZnVuY3Rpb24gJ1wiK2kucmVzdWx0K1wiJyB3aXRoIG5vIGFyZ3VtZW50cyBcIitcImFzIFwiK2UsdCl9fWVsc2V7cmV0dXJuIGkucmVzdWx0fX07aC5wcm90b3R5cGUuaGFuZGxlVW5zdXBwb3J0ZWRDbWQ9ZnVuY3Rpb24oKXt2YXIgZT10aGlzLm5leHRUb2tlbi50ZXh0O3ZhciB0PVtdO2Zvcih2YXIgcj0wO3I8ZS5sZW5ndGg7cisrKXt0LnB1c2gobmV3IGMoXCJ0ZXh0b3JkXCIsZVtyXSxcInRleHRcIikpfXZhciBhPW5ldyBjKFwidGV4dFwiLHtib2R5OnQsdHlwZTpcInRleHRcIn0sdGhpcy5tb2RlKTt2YXIgaT1uZXcgYyhcImNvbG9yXCIse2NvbG9yOnRoaXMuc2V0dGluZ3MuZXJyb3JDb2xvcix2YWx1ZTpbYV0sdHlwZTpcImNvbG9yXCJ9LHRoaXMubW9kZSk7dGhpcy5jb25zdW1lKCk7cmV0dXJuIGl9O2gucHJvdG90eXBlLnBhcnNlQXRvbT1mdW5jdGlvbigpe3ZhciBlPXRoaXMucGFyc2VJbXBsaWNpdEdyb3VwKCk7aWYodGhpcy5tb2RlPT09XCJ0ZXh0XCIpe3JldHVybiBlfXZhciB0O3ZhciByO3doaWxlKHRydWUpe3ZhciBhPXRoaXMubmV4dFRva2VuO2lmKGEudGV4dD09PVwiXFxcXGxpbWl0c1wifHxhLnRleHQ9PT1cIlxcXFxub2xpbWl0c1wiKXtpZighZXx8ZS50eXBlIT09XCJvcFwiKXt0aHJvdyBuZXcgcChcIkxpbWl0IGNvbnRyb2xzIG11c3QgZm9sbG93IGEgbWF0aCBvcGVyYXRvclwiLGEpfWVsc2V7dmFyIGk9YS50ZXh0PT09XCJcXFxcbGltaXRzXCI7ZS52YWx1ZS5saW1pdHM9aTtlLnZhbHVlLmFsd2F5c0hhbmRsZVN1cFN1Yj10cnVlfXRoaXMuY29uc3VtZSgpfWVsc2UgaWYoYS50ZXh0PT09XCJeXCIpe2lmKHQpe3Rocm93IG5ldyBwKFwiRG91YmxlIHN1cGVyc2NyaXB0XCIsYSl9dD10aGlzLmhhbmRsZVN1cFN1YnNjcmlwdChcInN1cGVyc2NyaXB0XCIpfWVsc2UgaWYoYS50ZXh0PT09XCJfXCIpe2lmKHIpe3Rocm93IG5ldyBwKFwiRG91YmxlIHN1YnNjcmlwdFwiLGEpfXI9dGhpcy5oYW5kbGVTdXBTdWJzY3JpcHQoXCJzdWJzY3JpcHRcIil9ZWxzZSBpZihhLnRleHQ9PT1cIidcIil7dmFyIG49bmV3IGMoXCJ0ZXh0b3JkXCIsXCJcXFxccHJpbWVcIix0aGlzLm1vZGUpO3ZhciBzPVtuXTt0aGlzLmNvbnN1bWUoKTt3aGlsZSh0aGlzLm5leHRUb2tlbi50ZXh0PT09XCInXCIpe3MucHVzaChuKTt0aGlzLmNvbnN1bWUoKX10PW5ldyBjKFwib3JkZ3JvdXBcIixzLHRoaXMubW9kZSl9ZWxzZXticmVha319aWYodHx8cil7cmV0dXJuIG5ldyBjKFwic3Vwc3ViXCIse2Jhc2U6ZSxzdXA6dCxzdWI6cn0sdGhpcy5tb2RlKX1lbHNle3JldHVybiBlfX07dmFyIGQ9W1wiXFxcXHRpbnlcIixcIlxcXFxzY3JpcHRzaXplXCIsXCJcXFxcZm9vdG5vdGVzaXplXCIsXCJcXFxcc21hbGxcIixcIlxcXFxub3JtYWxzaXplXCIsXCJcXFxcbGFyZ2VcIixcIlxcXFxMYXJnZVwiLFwiXFxcXExBUkdFXCIsXCJcXFxcaHVnZVwiLFwiXFxcXEh1Z2VcIl07dmFyIGc9W1wiXFxcXGRpc3BsYXlzdHlsZVwiLFwiXFxcXHRleHRzdHlsZVwiLFwiXFxcXHNjcmlwdHN0eWxlXCIsXCJcXFxcc2NyaXB0c2NyaXB0c3R5bGVcIl07aC5wcm90b3R5cGUucGFyc2VJbXBsaWNpdEdyb3VwPWZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5wYXJzZVN5bWJvbCgpO2lmKGU9PW51bGwpe3JldHVybiB0aGlzLnBhcnNlRnVuY3Rpb24oKX12YXIgdD1lLnJlc3VsdDt2YXIgcjtpZih0PT09XCJcXFxcbGVmdFwiKXt2YXIgYT10aGlzLnBhcnNlRnVuY3Rpb24oZSk7cj10aGlzLnBhcnNlRXhwcmVzc2lvbihmYWxzZSk7dGhpcy5leHBlY3QoXCJcXFxccmlnaHRcIixmYWxzZSk7dmFyIG49dGhpcy5wYXJzZUZ1bmN0aW9uKCk7cmV0dXJuIG5ldyBjKFwibGVmdHJpZ2h0XCIse2JvZHk6cixsZWZ0OmEudmFsdWUudmFsdWUscmlnaHQ6bi52YWx1ZS52YWx1ZX0sdGhpcy5tb2RlKX1lbHNlIGlmKHQ9PT1cIlxcXFxiZWdpblwiKXt2YXIgcz10aGlzLnBhcnNlRnVuY3Rpb24oZSk7dmFyIG89cy52YWx1ZS5uYW1lO2lmKCFpLmhhc093blByb3BlcnR5KG8pKXt0aHJvdyBuZXcgcChcIk5vIHN1Y2ggZW52aXJvbm1lbnQ6IFwiK28scy52YWx1ZS5uYW1lR3JvdXApfXZhciB1PWlbb107dmFyIGg9dGhpcy5wYXJzZUFyZ3VtZW50cyhcIlxcXFxiZWdpbntcIitvK1wifVwiLHUpO3ZhciB2PXttb2RlOnRoaXMubW9kZSxlbnZOYW1lOm8scGFyc2VyOnRoaXMscG9zaXRpb25zOmgucG9wKCl9O3ZhciBmPXUuaGFuZGxlcih2LGgpO3RoaXMuZXhwZWN0KFwiXFxcXGVuZFwiLGZhbHNlKTt2YXIgbT10aGlzLm5leHRUb2tlbjt2YXIgeT10aGlzLnBhcnNlRnVuY3Rpb24oKTtpZih5LnZhbHVlLm5hbWUhPT1vKXt0aHJvdyBuZXcgcChcIk1pc21hdGNoOiBcXFxcYmVnaW57XCIrbytcIn0gbWF0Y2hlZCBcIitcImJ5IFxcXFxlbmR7XCIreS52YWx1ZS5uYW1lK1wifVwiLG0pfWYucG9zaXRpb249eS5wb3NpdGlvbjtyZXR1cm4gZn1lbHNlIGlmKGwuY29udGFpbnMoZCx0KSl7cj10aGlzLnBhcnNlRXhwcmVzc2lvbihmYWxzZSk7cmV0dXJuIG5ldyBjKFwic2l6aW5nXCIse3NpemU6XCJzaXplXCIrKGwuaW5kZXhPZihkLHQpKzEpLHZhbHVlOnJ9LHRoaXMubW9kZSl9ZWxzZSBpZihsLmNvbnRhaW5zKGcsdCkpe3I9dGhpcy5wYXJzZUV4cHJlc3Npb24odHJ1ZSk7cmV0dXJuIG5ldyBjKFwic3R5bGluZ1wiLHtzdHlsZTp0LnNsaWNlKDEsdC5sZW5ndGgtNSksdmFsdWU6cn0sdGhpcy5tb2RlKX1lbHNle3JldHVybiB0aGlzLnBhcnNlRnVuY3Rpb24oZSl9fTtoLnByb3RvdHlwZS5wYXJzZUZ1bmN0aW9uPWZ1bmN0aW9uKGUpe2lmKCFlKXtlPXRoaXMucGFyc2VHcm91cCgpfWlmKGUpe2lmKGUuaXNGdW5jdGlvbil7dmFyIHQ9ZS5yZXN1bHQ7dmFyIHI9YVt0XTtpZih0aGlzLm1vZGU9PT1cInRleHRcIiYmIXIuYWxsb3dlZEluVGV4dCl7dGhyb3cgbmV3IHAoXCJDYW4ndCB1c2UgZnVuY3Rpb24gJ1wiK3QrXCInIGluIHRleHQgbW9kZVwiLGUudG9rZW4pfXZhciBpPXRoaXMucGFyc2VBcmd1bWVudHModCxyKTt2YXIgbj1lLnRva2VuO3ZhciBzPXRoaXMuY2FsbEZ1bmN0aW9uKHQsaSxpLnBvcCgpLG4pO3JldHVybiBuZXcgYyhzLnR5cGUscyx0aGlzLm1vZGUpfWVsc2V7cmV0dXJuIGUucmVzdWx0fX1lbHNle3JldHVybiBudWxsfX07aC5wcm90b3R5cGUuY2FsbEZ1bmN0aW9uPWZ1bmN0aW9uKGUsdCxyLGkpe3ZhciBuPXtmdW5jTmFtZTplLHBhcnNlcjp0aGlzLHBvc2l0aW9uczpyLHRva2VuOml9O3JldHVybiBhW2VdLmhhbmRsZXIobix0KX07aC5wcm90b3R5cGUucGFyc2VBcmd1bWVudHM9ZnVuY3Rpb24oZSx0KXt2YXIgcj10Lm51bUFyZ3MrdC5udW1PcHRpb25hbEFyZ3M7aWYocj09PTApe3JldHVybltbdGhpcy5wb3NdXX12YXIgaT10LmdyZWVkaW5lc3M7dmFyIG49W3RoaXMucG9zXTt2YXIgcz1bXTtmb3IodmFyIGw9MDtsPHI7bCsrKXt2YXIgbz10aGlzLm5leHRUb2tlbjt2YXIgdT10LmFyZ1R5cGVzJiZ0LmFyZ1R5cGVzW2xdO3ZhciBoO2lmKGw8dC5udW1PcHRpb25hbEFyZ3Mpe2lmKHUpe2g9dGhpcy5wYXJzZUdyb3VwT2ZUeXBlKHUsdHJ1ZSl9ZWxzZXtoPXRoaXMucGFyc2VHcm91cCh0cnVlKX1pZighaCl7cy5wdXNoKG51bGwpO24ucHVzaCh0aGlzLnBvcyk7Y29udGludWV9fWVsc2V7aWYodSl7aD10aGlzLnBhcnNlR3JvdXBPZlR5cGUodSl9ZWxzZXtoPXRoaXMucGFyc2VHcm91cCgpfWlmKCFoKXtpZighdGhpcy5zZXR0aW5ncy50aHJvd09uRXJyb3ImJnRoaXMubmV4dFRva2VuLnRleHRbMF09PT1cIlxcXFxcIil7aD1uZXcgdih0aGlzLmhhbmRsZVVuc3VwcG9ydGVkQ21kKHRoaXMubmV4dFRva2VuLnRleHQpLGZhbHNlKX1lbHNle3Rocm93IG5ldyBwKFwiRXhwZWN0ZWQgZ3JvdXAgYWZ0ZXIgJ1wiK2UrXCInXCIsbyl9fX12YXIgYztpZihoLmlzRnVuY3Rpb24pe3ZhciBmPWFbaC5yZXN1bHRdLmdyZWVkaW5lc3M7aWYoZj5pKXtjPXRoaXMucGFyc2VGdW5jdGlvbihoKX1lbHNle3Rocm93IG5ldyBwKFwiR290IGZ1bmN0aW9uICdcIitoLnJlc3VsdCtcIicgYXMgXCIrXCJhcmd1bWVudCB0byAnXCIrZStcIidcIixvKX19ZWxzZXtjPWgucmVzdWx0fXMucHVzaChjKTtuLnB1c2godGhpcy5wb3MpfXMucHVzaChuKTtyZXR1cm4gc307aC5wcm90b3R5cGUucGFyc2VHcm91cE9mVHlwZT1mdW5jdGlvbihlLHQpe3ZhciByPXRoaXMubW9kZTtpZihlPT09XCJvcmlnaW5hbFwiKXtlPXJ9aWYoZT09PVwiY29sb3JcIil7cmV0dXJuIHRoaXMucGFyc2VDb2xvckdyb3VwKHQpfWlmKGU9PT1cInNpemVcIil7cmV0dXJuIHRoaXMucGFyc2VTaXplR3JvdXAodCl9aWYoZT09PVwic3RyaW5nXCIpe3ZhciBhPXRoaXMucGFyc2VTdHJpbmdHcm91cChcInN0cmluZ1wiLHQpO3JldHVybiBuZXcgdihhLnRleHQsZmFsc2UpfXRoaXMuc3dpdGNoTW9kZShlKTtpZihlPT09XCJ0ZXh0XCIpe3doaWxlKHRoaXMubmV4dFRva2VuLnRleHQ9PT1cIiBcIil7dGhpcy5jb25zdW1lKCl9fXZhciBpPXRoaXMucGFyc2VHcm91cCh0KTt0aGlzLnN3aXRjaE1vZGUocik7cmV0dXJuIGl9O2gucHJvdG90eXBlLnBhcnNlU3RyaW5nR3JvdXA9ZnVuY3Rpb24oZSx0KXtpZih0JiZ0aGlzLm5leHRUb2tlbi50ZXh0IT09XCJbXCIpe3JldHVybiBudWxsfXZhciByPXRoaXMubW9kZTt0aGlzLm1vZGU9XCJ0ZXh0XCI7dGhpcy5leHBlY3QodD9cIltcIjpcIntcIik7dmFyIGE9XCJcIjt2YXIgaT10aGlzLm5leHRUb2tlbjt2YXIgbj1pO3doaWxlKHRoaXMubmV4dFRva2VuLnRleHQhPT0odD9cIl1cIjpcIn1cIikpe2lmKHRoaXMubmV4dFRva2VuLnRleHQ9PT1cIkVPRlwiKXt0aHJvdyBuZXcgcChcIlVuZXhwZWN0ZWQgZW5kIG9mIGlucHV0IGluIFwiK2UsaS5yYW5nZSh0aGlzLm5leHRUb2tlbixhKSl9bj10aGlzLm5leHRUb2tlbjthKz1uLnRleHQ7dGhpcy5jb25zdW1lKCl9dGhpcy5tb2RlPXI7dGhpcy5leHBlY3QodD9cIl1cIjpcIn1cIik7cmV0dXJuIGkucmFuZ2UobixhKX07aC5wcm90b3R5cGUucGFyc2VDb2xvckdyb3VwPWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMucGFyc2VTdHJpbmdHcm91cChcImNvbG9yXCIsZSk7aWYoIXQpe3JldHVybiBudWxsfXZhciByPS9eKCNbYS16MC05XSt8W2Etel0rKSQvaS5leGVjKHQudGV4dCk7aWYoIXIpe3Rocm93IG5ldyBwKFwiSW52YWxpZCBjb2xvcjogJ1wiK3QudGV4dCtcIidcIix0KX1yZXR1cm4gbmV3IHYobmV3IGMoXCJjb2xvclwiLHJbMF0sdGhpcy5tb2RlKSxmYWxzZSl9O2gucHJvdG90eXBlLnBhcnNlU2l6ZUdyb3VwPWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMucGFyc2VTdHJpbmdHcm91cChcInNpemVcIixlKTtpZighdCl7cmV0dXJuIG51bGx9dmFyIHI9LygtPykgKihcXGQrKD86XFwuXFxkKik/fFxcLlxcZCspICooW2Etel17Mn0pLy5leGVjKHQudGV4dCk7aWYoIXIpe3Rocm93IG5ldyBwKFwiSW52YWxpZCBzaXplOiAnXCIrdC50ZXh0K1wiJ1wiLHQpfXZhciBhPXtudW1iZXI6KyhyWzFdK3JbMl0pLHVuaXQ6clszXX07aWYoYS51bml0IT09XCJlbVwiJiZhLnVuaXQhPT1cImV4XCIpe3Rocm93IG5ldyBwKFwiSW52YWxpZCB1bml0OiAnXCIrYS51bml0K1wiJ1wiLHQpfXJldHVybiBuZXcgdihuZXcgYyhcImNvbG9yXCIsYSx0aGlzLm1vZGUpLGZhbHNlKX07aC5wcm90b3R5cGUucGFyc2VHcm91cD1mdW5jdGlvbihlKXt2YXIgdD10aGlzLm5leHRUb2tlbjtpZih0aGlzLm5leHRUb2tlbi50ZXh0PT09KGU/XCJbXCI6XCJ7XCIpKXt0aGlzLmNvbnN1bWUoKTt2YXIgcj10aGlzLnBhcnNlRXhwcmVzc2lvbihmYWxzZSxlP1wiXVwiOm51bGwpO3ZhciBhPXRoaXMubmV4dFRva2VuO3RoaXMuZXhwZWN0KGU/XCJdXCI6XCJ9XCIpO2lmKHRoaXMubW9kZT09PVwidGV4dFwiKXt0aGlzLmZvcm1MaWdhdHVyZXMocil9cmV0dXJuIG5ldyB2KG5ldyBjKFwib3JkZ3JvdXBcIixyLHRoaXMubW9kZSx0LGEpLGZhbHNlKX1lbHNle3JldHVybiBlP251bGw6dGhpcy5wYXJzZVN5bWJvbCgpfX07aC5wcm90b3R5cGUuZm9ybUxpZ2F0dXJlcz1mdW5jdGlvbihlKXt2YXIgdDt2YXIgcj1lLmxlbmd0aC0xO2Zvcih0PTA7dDxyOysrdCl7dmFyIGE9ZVt0XTt2YXIgaT1hLnZhbHVlO2lmKGk9PT1cIi1cIiYmZVt0KzFdLnZhbHVlPT09XCItXCIpe2lmKHQrMTxyJiZlW3QrMl0udmFsdWU9PT1cIi1cIil7ZS5zcGxpY2UodCwzLG5ldyBjKFwidGV4dG9yZFwiLFwiLS0tXCIsXCJ0ZXh0XCIsYSxlW3QrMl0pKTtyLT0yfWVsc2V7ZS5zcGxpY2UodCwyLG5ldyBjKFwidGV4dG9yZFwiLFwiLS1cIixcInRleHRcIixhLGVbdCsxXSkpO3ItPTF9fWlmKChpPT09XCInXCJ8fGk9PT1cImBcIikmJmVbdCsxXS52YWx1ZT09PWkpe2Uuc3BsaWNlKHQsMixuZXcgYyhcInRleHRvcmRcIixpK2ksXCJ0ZXh0XCIsYSxlW3QrMV0pKTtyLT0xfX19O2gucHJvdG90eXBlLnBhcnNlU3ltYm9sPWZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5uZXh0VG9rZW47aWYoYVtlLnRleHRdKXt0aGlzLmNvbnN1bWUoKTtyZXR1cm4gbmV3IHYoZS50ZXh0LHRydWUsZSl9ZWxzZSBpZihzW3RoaXMubW9kZV1bZS50ZXh0XSl7dGhpcy5jb25zdW1lKCk7cmV0dXJuIG5ldyB2KG5ldyBjKHNbdGhpcy5tb2RlXVtlLnRleHRdLmdyb3VwLGUudGV4dCx0aGlzLm1vZGUsZSksZmFsc2UsZSl9ZWxzZSBpZih0aGlzLm1vZGU9PT1cInRleHRcIiYmby50ZXN0KGUudGV4dCkpe3RoaXMuY29uc3VtZSgpO3JldHVybiBuZXcgdihuZXcgYyhcInRleHRvcmRcIixlLnRleHQsdGhpcy5tb2RlLGUpLGZhbHNlLGUpfWVsc2V7cmV0dXJuIG51bGx9fTtoLnByb3RvdHlwZS5QYXJzZU5vZGU9Yzt0LmV4cG9ydHM9aH0se1wiLi9NYWNyb0V4cGFuZGVyXCI6NCxcIi4vUGFyc2VFcnJvclwiOjYsXCIuL2Vudmlyb25tZW50c1wiOjE2LFwiLi9mdW5jdGlvbnNcIjoxOSxcIi4vcGFyc2VEYXRhXCI6MjEsXCIuL3N5bWJvbHNcIjoyMyxcIi4vdW5pY29kZVJlZ2V4ZXNcIjoyNCxcIi4vdXRpbHNcIjoyNX1dLDg6W2Z1bmN0aW9uKGUsdCxyKXtmdW5jdGlvbiBhKGUsdCl7cmV0dXJuIGU9PT11bmRlZmluZWQ/dDplfWZ1bmN0aW9uIGkoZSl7ZT1lfHx7fTt0aGlzLmRpc3BsYXlNb2RlPWEoZS5kaXNwbGF5TW9kZSxmYWxzZSk7dGhpcy50aHJvd09uRXJyb3I9YShlLnRocm93T25FcnJvcix0cnVlKTt0aGlzLmVycm9yQ29sb3I9YShlLmVycm9yQ29sb3IsXCIjY2MwMDAwXCIpO3RoaXMubWFjcm9zPWUubWFjcm9zfHx7fX10LmV4cG9ydHM9aX0se31dLDk6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgYT1lKFwiLi9mb250TWV0cmljcy5qc1wiKS5zaWdtYXM7dmFyIGk9W3t9LHt9LHt9XTt2YXIgbjtmb3IodmFyIHMgaW4gYSl7aWYoYS5oYXNPd25Qcm9wZXJ0eShzKSl7Zm9yKG49MDtuPDM7bisrKXtpW25dW3NdPWFbc11bbl19fX1mb3Iobj0wO248MztuKyspe2lbbl0uZW1QZXJFeD1hLnhIZWlnaHRbbl0vYS5xdWFkW25dfWZ1bmN0aW9uIGwoZSx0LHIsYSl7dGhpcy5pZD1lO3RoaXMuc2l6ZT10O3RoaXMuY3JhbXBlZD1hO3RoaXMuc2l6ZU11bHRpcGxpZXI9cjt0aGlzLm1ldHJpY3M9aVt0PjA/dC0xOjBdfWwucHJvdG90eXBlLnN1cD1mdW5jdGlvbigpe3JldHVybiB5W3hbdGhpcy5pZF1dfTtsLnByb3RvdHlwZS5zdWI9ZnVuY3Rpb24oKXtyZXR1cm4geVtiW3RoaXMuaWRdXX07bC5wcm90b3R5cGUuZnJhY051bT1mdW5jdGlvbigpe3JldHVybiB5W3dbdGhpcy5pZF1dfTtsLnByb3RvdHlwZS5mcmFjRGVuPWZ1bmN0aW9uKCl7cmV0dXJuIHlba1t0aGlzLmlkXV19O2wucHJvdG90eXBlLmNyYW1wPWZ1bmN0aW9uKCl7cmV0dXJuIHlbelt0aGlzLmlkXV19O2wucHJvdG90eXBlLmNscz1mdW5jdGlvbigpe3JldHVybiBkW3RoaXMuc2l6ZV0rKHRoaXMuY3JhbXBlZD9cIiBjcmFtcGVkXCI6XCIgdW5jcmFtcGVkXCIpfTtsLnByb3RvdHlwZS5yZXNldD1mdW5jdGlvbigpe3JldHVybiBnW3RoaXMuc2l6ZV19O2wucHJvdG90eXBlLmlzVGlnaHQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5zaXplPj0yfTt2YXIgbz0wO3ZhciB1PTE7dmFyIHA9Mjt2YXIgaD0zO3ZhciBjPTQ7dmFyIHY9NTt2YXIgZj02O3ZhciBtPTc7dmFyIGQ9W1wiZGlzcGxheXN0eWxlIHRleHRzdHlsZVwiLFwidGV4dHN0eWxlXCIsXCJzY3JpcHRzdHlsZVwiLFwic2NyaXB0c2NyaXB0c3R5bGVcIl07dmFyIGc9W1wicmVzZXQtdGV4dHN0eWxlXCIsXCJyZXNldC10ZXh0c3R5bGVcIixcInJlc2V0LXNjcmlwdHN0eWxlXCIsXCJyZXNldC1zY3JpcHRzY3JpcHRzdHlsZVwiXTt2YXIgeT1bbmV3IGwobywwLDEsZmFsc2UpLG5ldyBsKHUsMCwxLHRydWUpLG5ldyBsKHAsMSwxLGZhbHNlKSxuZXcgbChoLDEsMSx0cnVlKSxuZXcgbChjLDIsLjcsZmFsc2UpLG5ldyBsKHYsMiwuNyx0cnVlKSxuZXcgbChmLDMsLjUsZmFsc2UpLG5ldyBsKG0sMywuNSx0cnVlKV07dmFyIHg9W2MsdixjLHYsZixtLGYsbV07dmFyIGI9W3Ysdix2LHYsbSxtLG0sbV07dmFyIHc9W3AsaCxjLHYsZixtLGYsbV07dmFyIGs9W2gsaCx2LHYsbSxtLG0sbV07dmFyIHo9W3UsdSxoLGgsdix2LG0sbV07dC5leHBvcnRzPXtESVNQTEFZOnlbb10sVEVYVDp5W3BdLFNDUklQVDp5W2NdLFNDUklQVFNDUklQVDp5W2ZdfX0se1wiLi9mb250TWV0cmljcy5qc1wiOjE3fV0sMTA6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgYT1lKFwiLi9kb21UcmVlXCIpO3ZhciBpPWUoXCIuL2ZvbnRNZXRyaWNzXCIpO3ZhciBuPWUoXCIuL3N5bWJvbHNcIik7dmFyIHM9ZShcIi4vdXRpbHNcIik7dmFyIGw9W1wiXFxcXEdhbW1hXCIsXCJcXFxcRGVsdGFcIixcIlxcXFxUaGV0YVwiLFwiXFxcXExhbWJkYVwiLFwiXFxcXFhpXCIsXCJcXFxcUGlcIixcIlxcXFxTaWdtYVwiLFwiXFxcXFVwc2lsb25cIixcIlxcXFxQaGlcIixcIlxcXFxQc2lcIixcIlxcXFxPbWVnYVwiXTt2YXIgbz1bXCJcXHUwMTMxXCIsXCJcXHUwMjM3XCIsXCJcXHhhM1wiXTt2YXIgdT1mdW5jdGlvbihlLHQscixzLGwpe2lmKG5bcl1bZV0mJm5bcl1bZV0ucmVwbGFjZSl7ZT1uW3JdW2VdLnJlcGxhY2V9dmFyIG89aS5nZXRDaGFyYWN0ZXJNZXRyaWNzKGUsdCk7dmFyIHU7aWYobyl7dT1uZXcgYS5zeW1ib2xOb2RlKGUsby5oZWlnaHQsby5kZXB0aCxvLml0YWxpYyxvLnNrZXcsbCl9ZWxzZXt0eXBlb2YgY29uc29sZSE9PVwidW5kZWZpbmVkXCImJmNvbnNvbGUud2FybihcIk5vIGNoYXJhY3RlciBtZXRyaWNzIGZvciAnXCIrZStcIicgaW4gc3R5bGUgJ1wiK3QrXCInXCIpO3U9bmV3IGEuc3ltYm9sTm9kZShlLDAsMCwwLDAsbCl9aWYocyl7aWYocy5zdHlsZS5pc1RpZ2h0KCkpe3UuY2xhc3Nlcy5wdXNoKFwibXRpZ2h0XCIpfWlmKHMuZ2V0Q29sb3IoKSl7dS5zdHlsZS5jb2xvcj1zLmdldENvbG9yKCl9fXJldHVybiB1fTt2YXIgcD1mdW5jdGlvbihlLHQscixhKXtpZihlPT09XCJcXFxcXCJ8fG5bdF1bZV0uZm9udD09PVwibWFpblwiKXtyZXR1cm4gdShlLFwiTWFpbi1SZWd1bGFyXCIsdCxyLGEpfWVsc2V7cmV0dXJuIHUoZSxcIkFNUy1SZWd1bGFyXCIsdCxyLGEuY29uY2F0KFtcImFtc3JtXCJdKSl9fTt2YXIgaD1mdW5jdGlvbihlLHQscixhLGkpe2lmKGk9PT1cIm1hdGhvcmRcIil7cmV0dXJuIGMoZSx0LHIsYSl9ZWxzZSBpZihpPT09XCJ0ZXh0b3JkXCIpe3JldHVybiB1KGUsXCJNYWluLVJlZ3VsYXJcIix0LHIsYS5jb25jYXQoW1wibWF0aHJtXCJdKSl9ZWxzZXt0aHJvdyBuZXcgRXJyb3IoXCJ1bmV4cGVjdGVkIHR5cGU6IFwiK2krXCIgaW4gbWF0aERlZmF1bHRcIil9fTt2YXIgYz1mdW5jdGlvbihlLHQscixhKXtpZigvWzAtOV0vLnRlc3QoZS5jaGFyQXQoMCkpfHxzLmNvbnRhaW5zKG8sZSl8fHMuY29udGFpbnMobCxlKSl7cmV0dXJuIHUoZSxcIk1haW4tSXRhbGljXCIsdCxyLGEuY29uY2F0KFtcIm1haW5pdFwiXSkpfWVsc2V7cmV0dXJuIHUoZSxcIk1hdGgtSXRhbGljXCIsdCxyLGEuY29uY2F0KFtcIm1hdGhpdFwiXSkpfX07dmFyIHY9ZnVuY3Rpb24oZSx0LHIpe3ZhciBhPWUubW9kZTt2YXIgbD1lLnZhbHVlO2lmKG5bYV1bbF0mJm5bYV1bbF0ucmVwbGFjZSl7bD1uW2FdW2xdLnJlcGxhY2V9dmFyIHA9W1wibW9yZFwiXTt2YXIgdj10LmZvbnQ7aWYodil7aWYodj09PVwibWF0aGl0XCJ8fHMuY29udGFpbnMobyxsKSl7cmV0dXJuIGMobCxhLHQscCl9ZWxzZXt2YXIgZj1rW3ZdLmZvbnROYW1lO2lmKGkuZ2V0Q2hhcmFjdGVyTWV0cmljcyhsLGYpKXtyZXR1cm4gdShsLGYsYSx0LHAuY29uY2F0KFt2XSkpfWVsc2V7cmV0dXJuIGgobCxhLHQscCxyKX19fWVsc2V7cmV0dXJuIGgobCxhLHQscCxyKX19O3ZhciBmPWZ1bmN0aW9uKGUpe3ZhciB0PTA7dmFyIHI9MDt2YXIgYT0wO2lmKGUuY2hpbGRyZW4pe2Zvcih2YXIgaT0wO2k8ZS5jaGlsZHJlbi5sZW5ndGg7aSsrKXtpZihlLmNoaWxkcmVuW2ldLmhlaWdodD50KXt0PWUuY2hpbGRyZW5baV0uaGVpZ2h0fWlmKGUuY2hpbGRyZW5baV0uZGVwdGg+cil7cj1lLmNoaWxkcmVuW2ldLmRlcHRofWlmKGUuY2hpbGRyZW5baV0ubWF4Rm9udFNpemU+YSl7YT1lLmNoaWxkcmVuW2ldLm1heEZvbnRTaXplfX19ZS5oZWlnaHQ9dDtlLmRlcHRoPXI7ZS5tYXhGb250U2l6ZT1hfTt2YXIgbT1mdW5jdGlvbihlLHQscil7dmFyIGk9bmV3IGEuc3BhbihlLHQscik7ZihpKTtyZXR1cm4gaX07dmFyIGQ9ZnVuY3Rpb24oZSx0KXtlLmNoaWxkcmVuPXQuY29uY2F0KGUuY2hpbGRyZW4pO2YoZSl9O3ZhciBnPWZ1bmN0aW9uKGUsdCl7dmFyIHI9bmV3IGEuZG9jdW1lbnRGcmFnbWVudChlLHQpO2Yocik7cmV0dXJuIHJ9O3ZhciB5PWZ1bmN0aW9uKGUsdCl7dmFyIHI9bShbXSxbbmV3IGEuc3ltYm9sTm9kZShcIlxcdTIwMGJcIildKTtyLnN0eWxlLmZvbnRTaXplPXQvZS5zdHlsZS5zaXplTXVsdGlwbGllcitcImVtXCI7dmFyIGk9bShbXCJmb250c2l6ZS1lbnN1cmVyXCIsXCJyZXNldC1cIitlLnNpemUsXCJzaXplNVwiXSxbcl0pO3JldHVybiBpfTt2YXIgeD1mdW5jdGlvbihlLHQscixpKXt2YXIgbjt2YXIgczt2YXIgbDtpZih0PT09XCJpbmRpdmlkdWFsU2hpZnRcIil7dmFyIG89ZTtlPVtvWzBdXTtuPS1vWzBdLnNoaWZ0LW9bMF0uZWxlbS5kZXB0aDtzPW47Zm9yKGw9MTtsPG8ubGVuZ3RoO2wrKyl7dmFyIHU9LW9bbF0uc2hpZnQtcy1vW2xdLmVsZW0uZGVwdGg7dmFyIHA9dS0ob1tsLTFdLmVsZW0uaGVpZ2h0K29bbC0xXS5lbGVtLmRlcHRoKTtzPXMrdTtlLnB1c2goe3R5cGU6XCJrZXJuXCIsc2l6ZTpwfSk7ZS5wdXNoKG9bbF0pfX1lbHNlIGlmKHQ9PT1cInRvcFwiKXt2YXIgaD1yO2ZvcihsPTA7bDxlLmxlbmd0aDtsKyspe2lmKGVbbF0udHlwZT09PVwia2VyblwiKXtoLT1lW2xdLnNpemV9ZWxzZXtoLT1lW2xdLmVsZW0uaGVpZ2h0K2VbbF0uZWxlbS5kZXB0aH19bj1ofWVsc2UgaWYodD09PVwiYm90dG9tXCIpe249LXJ9ZWxzZSBpZih0PT09XCJzaGlmdFwiKXtuPS1lWzBdLmVsZW0uZGVwdGgtcn1lbHNlIGlmKHQ9PT1cImZpcnN0QmFzZWxpbmVcIil7bj0tZVswXS5lbGVtLmRlcHRofWVsc2V7bj0wfXZhciBjPTA7Zm9yKGw9MDtsPGUubGVuZ3RoO2wrKyl7aWYoZVtsXS50eXBlPT09XCJlbGVtXCIpe2M9TWF0aC5tYXgoYyxlW2xdLmVsZW0ubWF4Rm9udFNpemUpfX12YXIgdj15KGksYyk7dmFyIGY9W107cz1uO2ZvcihsPTA7bDxlLmxlbmd0aDtsKyspe2lmKGVbbF0udHlwZT09PVwia2VyblwiKXtzKz1lW2xdLnNpemV9ZWxzZXt2YXIgZD1lW2xdLmVsZW07dmFyIGc9LWQuZGVwdGgtcztzKz1kLmhlaWdodCtkLmRlcHRoO3ZhciB4PW0oW10sW3YsZF0pO3guaGVpZ2h0LT1nO3guZGVwdGgrPWc7eC5zdHlsZS50b3A9ZytcImVtXCI7Zi5wdXNoKHgpfX12YXIgYj1tKFtcImJhc2VsaW5lLWZpeFwiXSxbdixuZXcgYS5zeW1ib2xOb2RlKFwiXFx1MjAwYlwiKV0pO2YucHVzaChiKTt2YXIgdz1tKFtcInZsaXN0XCJdLGYpO3cuaGVpZ2h0PU1hdGgubWF4KHMsdy5oZWlnaHQpO3cuZGVwdGg9TWF0aC5tYXgoLW4sdy5kZXB0aCk7cmV0dXJuIHd9O3ZhciBiPXtzaXplMTouNSxzaXplMjouNyxzaXplMzouOCxzaXplNDouOSxzaXplNToxLHNpemU2OjEuMixzaXplNzoxLjQ0LHNpemU4OjEuNzMsc2l6ZTk6Mi4wNyxzaXplMTA6Mi40OX07dmFyIHc9e1wiXFxcXHFxdWFkXCI6e3NpemU6XCIyZW1cIixjbGFzc05hbWU6XCJxcXVhZFwifSxcIlxcXFxxdWFkXCI6e3NpemU6XCIxZW1cIixjbGFzc05hbWU6XCJxdWFkXCJ9LFwiXFxcXGVuc3BhY2VcIjp7c2l6ZTpcIjAuNWVtXCIsY2xhc3NOYW1lOlwiZW5zcGFjZVwifSxcIlxcXFw7XCI6e3NpemU6XCIwLjI3Nzc3OGVtXCIsY2xhc3NOYW1lOlwidGhpY2tzcGFjZVwifSxcIlxcXFw6XCI6e3NpemU6XCIwLjIyMjIyZW1cIixjbGFzc05hbWU6XCJtZWRpdW1zcGFjZVwifSxcIlxcXFwsXCI6e3NpemU6XCIwLjE2NjY3ZW1cIixjbGFzc05hbWU6XCJ0aGluc3BhY2VcIn0sXCJcXFxcIVwiOntzaXplOlwiLTAuMTY2NjdlbVwiLGNsYXNzTmFtZTpcIm5lZ2F0aXZldGhpbnNwYWNlXCJ9fTt2YXIgaz17bWF0aGJmOnt2YXJpYW50OlwiYm9sZFwiLGZvbnROYW1lOlwiTWFpbi1Cb2xkXCJ9LG1hdGhybTp7dmFyaWFudDpcIm5vcm1hbFwiLGZvbnROYW1lOlwiTWFpbi1SZWd1bGFyXCJ9LG1hdGhiYjp7dmFyaWFudDpcImRvdWJsZS1zdHJ1Y2tcIixmb250TmFtZTpcIkFNUy1SZWd1bGFyXCJ9LG1hdGhjYWw6e3ZhcmlhbnQ6XCJzY3JpcHRcIixmb250TmFtZTpcIkNhbGlncmFwaGljLVJlZ3VsYXJcIn0sbWF0aGZyYWs6e3ZhcmlhbnQ6XCJmcmFrdHVyXCIsZm9udE5hbWU6XCJGcmFrdHVyLVJlZ3VsYXJcIn0sbWF0aHNjcjp7dmFyaWFudDpcInNjcmlwdFwiLGZvbnROYW1lOlwiU2NyaXB0LVJlZ3VsYXJcIn0sbWF0aHNmOnt2YXJpYW50Olwic2Fucy1zZXJpZlwiLGZvbnROYW1lOlwiU2Fuc1NlcmlmLVJlZ3VsYXJcIn0sbWF0aHR0Ont2YXJpYW50OlwibW9ub3NwYWNlXCIsZm9udE5hbWU6XCJUeXBld3JpdGVyLVJlZ3VsYXJcIn19O3QuZXhwb3J0cz17Zm9udE1hcDprLG1ha2VTeW1ib2w6dSxtYXRoc3ltOnAsbWFrZVNwYW46bSxtYWtlRnJhZ21lbnQ6ZyxtYWtlVkxpc3Q6eCxtYWtlT3JkOnYscHJlcGVuZENoaWxkcmVuOmQsc2l6aW5nTXVsdGlwbGllcjpiLHNwYWNpbmdGdW5jdGlvbnM6d319LHtcIi4vZG9tVHJlZVwiOjE1LFwiLi9mb250TWV0cmljc1wiOjE3LFwiLi9zeW1ib2xzXCI6MjMsXCIuL3V0aWxzXCI6MjV9XSwxMTpbZnVuY3Rpb24oZSx0LHIpe3ZhciBhPWUoXCIuL1BhcnNlRXJyb3JcIik7dmFyIGk9ZShcIi4vU3R5bGVcIik7dmFyIG49ZShcIi4vYnVpbGRDb21tb25cIik7dmFyIHM9ZShcIi4vZGVsaW1pdGVyXCIpO3ZhciBsPWUoXCIuL2RvbVRyZWVcIik7dmFyIG89ZShcIi4vZm9udE1ldHJpY3NcIik7dmFyIHU9ZShcIi4vdXRpbHNcIik7dmFyIHA9bi5tYWtlU3Bhbjt2YXIgaD1mdW5jdGlvbihlKXtyZXR1cm4gZSBpbnN0YW5jZW9mIGwuc3BhbiYmZS5jbGFzc2VzWzBdPT09XCJtc3BhY2VcIn07dmFyIGM9ZnVuY3Rpb24oZSx0LHIpe3ZhciBhPVtdO2Zvcih2YXIgaT0wO2k8ZS5sZW5ndGg7aSsrKXt2YXIgcz1lW2ldO3ZhciBvPWIocyx0LHIpO2lmKG8gaW5zdGFuY2VvZiBsLmRvY3VtZW50RnJhZ21lbnQpe0FycmF5LnByb3RvdHlwZS5wdXNoLmFwcGx5KGEsby5jaGlsZHJlbil9ZWxzZXthLnB1c2gobyl9aWYoIWgobykpe3I9c319dmFyIHU9bnVsbDtmb3IoaT0wO2k8YS5sZW5ndGg7aSsrKXtpZihoKGFbaV0pKXt1PXV8fFtdO3UucHVzaChhW2ldKTthLnNwbGljZShpLDEpO2ktLX1lbHNlIGlmKHUpe2lmKGFbaV1pbnN0YW5jZW9mIGwuc3ltYm9sTm9kZSl7YVtpXT1wKGFbaV0uY2xhc3NlcyxbYVtpXV0pfW4ucHJlcGVuZENoaWxkcmVuKGFbaV0sdSk7dT1udWxsfX1pZih1KXtBcnJheS5wcm90b3R5cGUucHVzaC5hcHBseShhLHUpfXJldHVybiBhfTt2YXIgdj17bWF0aG9yZDpcIm1vcmRcIix0ZXh0b3JkOlwibW9yZFwiLGJpbjpcIm1iaW5cIixyZWw6XCJtcmVsXCIsdGV4dDpcIm1vcmRcIixvcGVuOlwibW9wZW5cIixjbG9zZTpcIm1jbG9zZVwiLGlubmVyOlwibWlubmVyXCIsZ2VuZnJhYzpcIm1vcmRcIixhcnJheTpcIm1vcmRcIixzcGFjaW5nOlwibW9yZFwiLHB1bmN0OlwibXB1bmN0XCIsb3JkZ3JvdXA6XCJtb3JkXCIsb3A6XCJtb3BcIixrYXRleDpcIm1vcmRcIixvdmVybGluZTpcIm1vcmRcIix1bmRlcmxpbmU6XCJtb3JkXCIscnVsZTpcIm1vcmRcIixjdXJzb3I6XCJjdXJzb3JcIixsZWZ0cmlnaHQ6XCJtaW5uZXJcIixzcXJ0OlwibW9yZFwiLGFjY2VudDpcIm1vcmRcIn07dmFyIGY9ZnVuY3Rpb24oZSl7aWYoZT09bnVsbCl7cmV0dXJuIHYubWF0aG9yZH1lbHNlIGlmKGUudHlwZT09PVwic3Vwc3ViXCIpe3JldHVybiBmKGUudmFsdWUuYmFzZSl9ZWxzZSBpZihlLnR5cGU9PT1cImxsYXBcInx8ZS50eXBlPT09XCJybGFwXCIpe3JldHVybiBmKGUudmFsdWUpfWVsc2UgaWYoZS50eXBlPT09XCJjb2xvclwifHxlLnR5cGU9PT1cInNpemluZ1wifHxlLnR5cGU9PT1cInN0eWxpbmdcIil7dmFyIHQ9ZS52YWx1ZS52YWx1ZTtyZXR1cm4gZih0W3QubGVuZ3RoLTFdKX1lbHNlIGlmKGUudHlwZT09PVwiZm9udFwiKXtyZXR1cm4gZihlLnZhbHVlLmJvZHkpfWVsc2UgaWYoZS50eXBlPT09XCJkZWxpbXNpemluZ1wiKXtyZXR1cm4gdltlLnZhbHVlLmRlbGltVHlwZV19ZWxzZXtyZXR1cm4gdltlLnR5cGVdfX07dmFyIG09ZnVuY3Rpb24oZSx0KXtpZighZSl7cmV0dXJuIGZhbHNlfWVsc2UgaWYoZS50eXBlPT09XCJvcFwiKXtyZXR1cm4gZS52YWx1ZS5saW1pdHMmJih0LnN0eWxlLnNpemU9PT1pLkRJU1BMQVkuc2l6ZXx8ZS52YWx1ZS5hbHdheXNIYW5kbGVTdXBTdWIpfWVsc2UgaWYoZS50eXBlPT09XCJhY2NlbnRcIil7cmV0dXJuIGcoZS52YWx1ZS5iYXNlKX1lbHNle3JldHVybiBudWxsfX07dmFyIGQ9ZnVuY3Rpb24oZSl7aWYoIWUpe3JldHVybiBmYWxzZX1lbHNlIGlmKGUudHlwZT09PVwib3JkZ3JvdXBcIil7aWYoZS52YWx1ZS5sZW5ndGg9PT0xKXtyZXR1cm4gZChlLnZhbHVlWzBdKX1lbHNle3JldHVybiBlfX1lbHNlIGlmKGUudHlwZT09PVwiY29sb3JcIil7aWYoZS52YWx1ZS52YWx1ZS5sZW5ndGg9PT0xKXtyZXR1cm4gZChlLnZhbHVlLnZhbHVlWzBdKX1lbHNle3JldHVybiBlfX1lbHNlIGlmKGUudHlwZT09PVwiZm9udFwiKXtyZXR1cm4gZChlLnZhbHVlLmJvZHkpfWVsc2V7cmV0dXJuIGV9fTt2YXIgZz1mdW5jdGlvbihlKXt2YXIgdD1kKGUpO3JldHVybiB0LnR5cGU9PT1cIm1hdGhvcmRcInx8dC50eXBlPT09XCJ0ZXh0b3JkXCJ8fHQudHlwZT09PVwiYmluXCJ8fHQudHlwZT09PVwicmVsXCJ8fHQudHlwZT09PVwiaW5uZXJcInx8dC50eXBlPT09XCJvcGVuXCJ8fHQudHlwZT09PVwiY2xvc2VcInx8dC50eXBlPT09XCJwdW5jdFwifTt2YXIgeT1mdW5jdGlvbihlKXtyZXR1cm4gcChbXCJzaXppbmdcIixcInJlc2V0LVwiK2Uuc2l6ZSxcInNpemU1XCIsZS5zdHlsZS5yZXNldCgpLGkuVEVYVC5jbHMoKSxcIm51bGxkZWxpbWl0ZXJcIl0pfTt2YXIgeD17fTt4Lm1hdGhvcmQ9ZnVuY3Rpb24oZSx0LHIpe3JldHVybiBuLm1ha2VPcmQoZSx0LFwibWF0aG9yZFwiKX07eC50ZXh0b3JkPWZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gbi5tYWtlT3JkKGUsdCxcInRleHRvcmRcIil9O3guYmluPWZ1bmN0aW9uKGUsdCxyKXt2YXIgYT1cIm1iaW5cIjt2YXIgaT1yO3doaWxlKGkmJmkudHlwZT09PVwiY29sb3JcIil7dmFyIHM9aS52YWx1ZS52YWx1ZTtpPXNbcy5sZW5ndGgtMV19aWYoaSYmaS50eXBlPT09XCJjdXJzb3JcIil7aT1pLnZhbHVlLnByZXZpb3VzfWlmKCFpfHx1LmNvbnRhaW5zKFtcIm1iaW5cIixcIm1vcGVuXCIsXCJtcmVsXCIsXCJtb3BcIixcIm1wdW5jdFwiXSxmKGkpKSl7ZS50eXBlPVwidGV4dG9yZFwiO2E9XCJtb3JkXCJ9cmV0dXJuIG4ubWF0aHN5bShlLnZhbHVlLGUubW9kZSx0LFthXSl9O3gucmVsPWZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gbi5tYXRoc3ltKGUudmFsdWUsZS5tb2RlLHQsW1wibXJlbFwiXSl9O3gub3Blbj1mdW5jdGlvbihlLHQscil7cmV0dXJuIG4ubWF0aHN5bShlLnZhbHVlLGUubW9kZSx0LFtcIm1vcGVuXCJdKX07eC5jbG9zZT1mdW5jdGlvbihlLHQscil7cmV0dXJuIG4ubWF0aHN5bShlLnZhbHVlLGUubW9kZSx0LFtcIm1jbG9zZVwiXSl9O3guaW5uZXI9ZnVuY3Rpb24oZSx0LHIpe3JldHVybiBuLm1hdGhzeW0oZS52YWx1ZSxlLm1vZGUsdCxbXCJtaW5uZXJcIl0pfTt4LnB1bmN0PWZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gbi5tYXRoc3ltKGUudmFsdWUsZS5tb2RlLHQsW1wibXB1bmN0XCJdKX07eC5vcmRncm91cD1mdW5jdGlvbihlLHQscil7cmV0dXJuIHAoW1wibW9yZFwiLHQuc3R5bGUuY2xzKCldLGMoZS52YWx1ZSx0LnJlc2V0KCkpLHQpfTt4LnRleHQ9ZnVuY3Rpb24oZSx0LHIpe3JldHVybiBwKFtcIm1vcmRcIixcInRleHRcIix0LnN0eWxlLmNscygpXSxjKGUudmFsdWUuYm9keSx0LnJlc2V0KCkpLHQpfTt4LnhtbENsYXNzPWZ1bmN0aW9uKGUsdCxyKXt2YXIgYT1jKGUudmFsdWUudmFsdWUsdC5yZXNldCgpLHIpO3JldHVybiBuZXcgbi5tYWtlRnJhZ21lbnQoYSxbZS52YWx1ZS5jbF0pfTt4LmNvbG9yPWZ1bmN0aW9uKGUsdCxyKXt2YXIgYT1jKGUudmFsdWUudmFsdWUsdC53aXRoQ29sb3IoZS52YWx1ZS5jb2xvcikscik7cmV0dXJuIG5ldyBuLm1ha2VGcmFnbWVudChhKX07eC5zdXBzdWI9ZnVuY3Rpb24oZSx0LHIpe2lmKG0oZS52YWx1ZS5iYXNlLHQpKXtyZXR1cm4geFtlLnZhbHVlLmJhc2UudHlwZV0oZSx0LHIpfXZhciBhPWIoZS52YWx1ZS5iYXNlLHQucmVzZXQoKSk7dmFyIHM7dmFyIHU7dmFyIGg7dmFyIGM7dmFyIHY9dC5zdHlsZTt2YXIgZDtpZihlLnZhbHVlLnN1cCl7ZD10LndpdGhTdHlsZSh2LnN1cCgpKTtoPWIoZS52YWx1ZS5zdXAsZCk7cz1wKFt2LnJlc2V0KCksdi5zdXAoKS5jbHMoKV0sW2hdLGQpfWlmKGUudmFsdWUuc3ViKXtkPXQud2l0aFN0eWxlKHYuc3ViKCkpO2M9YihlLnZhbHVlLnN1YixkKTt1PXAoW3YucmVzZXQoKSx2LnN1YigpLmNscygpXSxbY10sZCl9dmFyIHk7dmFyIHc7aWYoZyhlLnZhbHVlLmJhc2UpKXt5PTA7dz0wfWVsc2V7eT1hLmhlaWdodC12Lm1ldHJpY3Muc3VwRHJvcDt3PWEuZGVwdGgrdi5tZXRyaWNzLnN1YkRyb3B9dmFyIGs7aWYodj09PWkuRElTUExBWSl7az12Lm1ldHJpY3Muc3VwMX1lbHNlIGlmKHYuY3JhbXBlZCl7az12Lm1ldHJpY3Muc3VwM31lbHNle2s9di5tZXRyaWNzLnN1cDJ9dmFyIHo9aS5URVhULnNpemVNdWx0aXBsaWVyKnYuc2l6ZU11bHRpcGxpZXI7dmFyIFM9LjUvby5tZXRyaWNzLnB0UGVyRW0veitcImVtXCI7dmFyIE07aWYoIWUudmFsdWUuc3VwKXt3PU1hdGgubWF4KHcsdi5tZXRyaWNzLnN1YjEsYy5oZWlnaHQtLjgqdi5tZXRyaWNzLnhIZWlnaHQpO009bi5tYWtlVkxpc3QoW3t0eXBlOlwiZWxlbVwiLGVsZW06dX1dLFwic2hpZnRcIix3LHQpO00uY2hpbGRyZW5bMF0uc3R5bGUubWFyZ2luUmlnaHQ9UztpZihhIGluc3RhbmNlb2YgbC5zeW1ib2xOb2RlKXtNLmNoaWxkcmVuWzBdLnN0eWxlLm1hcmdpbkxlZnQ9LWEuaXRhbGljK1wiZW1cIn19ZWxzZSBpZighZS52YWx1ZS5zdWIpe3k9TWF0aC5tYXgoeSxrLGguZGVwdGgrLjI1KnYubWV0cmljcy54SGVpZ2h0KTtNPW4ubWFrZVZMaXN0KFt7dHlwZTpcImVsZW1cIixlbGVtOnN9XSxcInNoaWZ0XCIsLXksdCk7TS5jaGlsZHJlblswXS5zdHlsZS5tYXJnaW5SaWdodD1TfWVsc2V7eT1NYXRoLm1heCh5LGssaC5kZXB0aCsuMjUqdi5tZXRyaWNzLnhIZWlnaHQpO3c9TWF0aC5tYXgodyx2Lm1ldHJpY3Muc3ViMik7dmFyIFQ9by5tZXRyaWNzLmRlZmF1bHRSdWxlVGhpY2tuZXNzO2lmKHktaC5kZXB0aC0oYy5oZWlnaHQtdyk8NCpUKXt3PTQqVC0oeS1oLmRlcHRoKStjLmhlaWdodDt2YXIgQT0uOCp2Lm1ldHJpY3MueEhlaWdodC0oeS1oLmRlcHRoKTtpZihBPjApe3krPUE7dy09QX19TT1uLm1ha2VWTGlzdChbe3R5cGU6XCJlbGVtXCIsZWxlbTp1LHNoaWZ0Ond9LHt0eXBlOlwiZWxlbVwiLGVsZW06cyxzaGlmdDoteX1dLFwiaW5kaXZpZHVhbFNoaWZ0XCIsbnVsbCx0KTtpZihhIGluc3RhbmNlb2YgbC5zeW1ib2xOb2RlKXtNLmNoaWxkcmVuWzBdLnN0eWxlLm1hcmdpbkxlZnQ9LWEuaXRhbGljK1wiZW1cIn1NLmNoaWxkcmVuWzBdLnN0eWxlLm1hcmdpblJpZ2h0PVM7TS5jaGlsZHJlblsxXS5zdHlsZS5tYXJnaW5SaWdodD1TfXJldHVybiBwKFtmKGUudmFsdWUuYmFzZSldLFthLHAoW1wibXN1cHN1YlwiXSxbTV0pXSx0KX07eC5nZW5mcmFjPWZ1bmN0aW9uKGUsdCxyKXt2YXIgYT10LnN0eWxlO2lmKGUudmFsdWUuc2l6ZT09PVwiZGlzcGxheVwiKXthPWkuRElTUExBWX1lbHNlIGlmKGUudmFsdWUuc2l6ZT09PVwidGV4dFwiKXthPWkuVEVYVH12YXIgbD1hLmZyYWNOdW0oKTt2YXIgdT1hLmZyYWNEZW4oKTt2YXIgaDtoPXQud2l0aFN0eWxlKGwpO3ZhciBjPWIoZS52YWx1ZS5udW1lcixoKTt2YXIgdj1wKFthLnJlc2V0KCksbC5jbHMoKV0sW2NdLGgpO2g9dC53aXRoU3R5bGUodSk7dmFyIGY9YihlLnZhbHVlLmRlbm9tLGgpO3ZhciBtPXAoW2EucmVzZXQoKSx1LmNscygpXSxbZl0saCk7dmFyIGQ7aWYoZS52YWx1ZS5oYXNCYXJMaW5lKXtkPW8ubWV0cmljcy5kZWZhdWx0UnVsZVRoaWNrbmVzcy90LnN0eWxlLnNpemVNdWx0aXBsaWVyfWVsc2V7ZD0wfXZhciBnO3ZhciB4O3ZhciB3O2lmKGEuc2l6ZT09PWkuRElTUExBWS5zaXplKXtnPWEubWV0cmljcy5udW0xO2lmKGQ+MCl7eD0zKmR9ZWxzZXt4PTcqby5tZXRyaWNzLmRlZmF1bHRSdWxlVGhpY2tuZXNzfXc9YS5tZXRyaWNzLmRlbm9tMX1lbHNle2lmKGQ+MCl7Zz1hLm1ldHJpY3MubnVtMjt4PWR9ZWxzZXtnPWEubWV0cmljcy5udW0zO3g9MypvLm1ldHJpY3MuZGVmYXVsdFJ1bGVUaGlja25lc3N9dz1hLm1ldHJpY3MuZGVub20yfXZhciBrO2lmKGQ9PT0wKXt2YXIgej1nLWMuZGVwdGgtKGYuaGVpZ2h0LXcpO2lmKHo8eCl7Zys9LjUqKHgteik7dys9LjUqKHgteil9az1uLm1ha2VWTGlzdChbe3R5cGU6XCJlbGVtXCIsZWxlbTptLHNoaWZ0Ond9LHt0eXBlOlwiZWxlbVwiLGVsZW06dixzaGlmdDotZ31dLFwiaW5kaXZpZHVhbFNoaWZ0XCIsbnVsbCx0KX1lbHNle3ZhciBTPWEubWV0cmljcy5heGlzSGVpZ2h0O2lmKGctYy5kZXB0aC0oUysuNSpkKTx4KXtnKz14LShnLWMuZGVwdGgtKFMrLjUqZCkpfWlmKFMtLjUqZC0oZi5oZWlnaHQtdyk8eCl7dys9eC0oUy0uNSpkLShmLmhlaWdodC13KSl9dmFyIE09cChbdC5zdHlsZS5yZXNldCgpLGkuVEVYVC5jbHMoKSxcImZyYWMtbGluZVwiXSk7TS5oZWlnaHQ9ZDt2YXIgVD0tKFMtLjUqZCk7az1uLm1ha2VWTGlzdChbe3R5cGU6XCJlbGVtXCIsZWxlbTptLHNoaWZ0Ond9LHt0eXBlOlwiZWxlbVwiLGVsZW06TSxzaGlmdDpUfSx7dHlwZTpcImVsZW1cIixlbGVtOnYsc2hpZnQ6LWd9XSxcImluZGl2aWR1YWxTaGlmdFwiLG51bGwsdCl9ay5oZWlnaHQqPWEuc2l6ZU11bHRpcGxpZXIvdC5zdHlsZS5zaXplTXVsdGlwbGllcjtrLmRlcHRoKj1hLnNpemVNdWx0aXBsaWVyL3Quc3R5bGUuc2l6ZU11bHRpcGxpZXI7dmFyIEE7aWYoYS5zaXplPT09aS5ESVNQTEFZLnNpemUpe0E9YS5tZXRyaWNzLmRlbGltMX1lbHNle0E9YS5tZXRyaWNzLmRlbGltMn12YXIgTjt2YXIgcTtpZihlLnZhbHVlLmxlZnREZWxpbT09bnVsbCl7Tj15KHQpfWVsc2V7Tj1zLmN1c3RvbVNpemVkRGVsaW0oZS52YWx1ZS5sZWZ0RGVsaW0sQSx0cnVlLHQud2l0aFN0eWxlKGEpLGUubW9kZSl9aWYoZS52YWx1ZS5yaWdodERlbGltPT1udWxsKXtxPXkodCl9ZWxzZXtxPXMuY3VzdG9tU2l6ZWREZWxpbShlLnZhbHVlLnJpZ2h0RGVsaW0sQSx0cnVlLHQud2l0aFN0eWxlKGEpLGUubW9kZSl9cmV0dXJuIHAoW1wibW9yZFwiLHQuc3R5bGUucmVzZXQoKSxhLmNscygpXSxbTixwKFtcIm1mcmFjXCJdLFtrXSkscV0sdCl9O3guYXJyYXk9ZnVuY3Rpb24oZSx0LHIpe3ZhciBpO3ZhciBzO3ZhciBsPWUudmFsdWUuYm9keS5sZW5ndGg7dmFyIGg9MDt2YXIgYz1uZXcgQXJyYXkobCk7dmFyIHY9dC5zdHlsZTt2YXIgZj0xL28ubWV0cmljcy5wdFBlckVtO3ZhciBtPTUqZjt2YXIgZD0xMipmO3ZhciBnPXUuZGVmbHQoZS52YWx1ZS5hcnJheXN0cmV0Y2gsMSk7dmFyIHk9ZypkO3ZhciB4PS43Knk7dmFyIHc9LjMqeTt2YXIgaz0wO2ZvcihpPTA7aTxlLnZhbHVlLmJvZHkubGVuZ3RoOysraSl7dmFyIHo9ZS52YWx1ZS5ib2R5W2ldO3ZhciBTPXg7dmFyIE09dztpZihoPHoubGVuZ3RoKXtoPXoubGVuZ3RofXZhciBUPW5ldyBBcnJheSh6Lmxlbmd0aCk7Zm9yKHM9MDtzPHoubGVuZ3RoOysrcyl7dmFyIEE9Yih6W3NdLHQpO2lmKE08QS5kZXB0aCl7TT1BLmRlcHRofWlmKFM8QS5oZWlnaHQpe1M9QS5oZWlnaHR9VFtzXT1BfXZhciBOPTA7aWYoZS52YWx1ZS5yb3dHYXBzW2ldKXtOPWUudmFsdWUucm93R2Fwc1tpXS52YWx1ZTtzd2l0Y2goTi51bml0KXtjYXNlXCJlbVwiOk49Ti5udW1iZXI7YnJlYWs7Y2FzZVwiZXhcIjpOPU4ubnVtYmVyKnYubWV0cmljcy5lbVBlckV4O2JyZWFrO2RlZmF1bHQ6Y29uc29sZS5lcnJvcihcIkNhbid0IGhhbmRsZSB1bml0IFwiK04udW5pdCk7Tj0wfWlmKE4+MCl7Tis9dztpZihNPE4pe009Tn1OPTB9fVQuaGVpZ2h0PVM7VC5kZXB0aD1NO2srPVM7VC5wb3M9aztrKz1NK047Y1tpXT1UfXZhciBxPWsvMit2Lm1ldHJpY3MuYXhpc0hlaWdodDt2YXIgUj1lLnZhbHVlLmNvbHN8fFtdO3ZhciBDPVtdO3ZhciBFO3ZhciBPO2ZvcihzPTAsTz0wO3M8aHx8TzxSLmxlbmd0aDsrK3MsKytPKXt2YXIgUD1SW09dfHx7fTt2YXIgRD10cnVlO3doaWxlKFAudHlwZT09PVwic2VwYXJhdG9yXCIpe2lmKCFEKXtFPXAoW1wiYXJyYXljb2xzZXBcIl0sW10pO0Uuc3R5bGUud2lkdGg9by5tZXRyaWNzLmRvdWJsZVJ1bGVTZXArXCJlbVwiO0MucHVzaChFKX1pZihQLnNlcGFyYXRvcj09PVwifFwiKXt2YXIgTD1wKFtcInZlcnRpY2FsLXNlcGFyYXRvclwiXSxbXSk7TC5zdHlsZS5oZWlnaHQ9aytcImVtXCI7TC5zdHlsZS52ZXJ0aWNhbEFsaWduPS0oay1xKStcImVtXCI7Qy5wdXNoKEwpfWVsc2V7dGhyb3cgbmV3IGEoXCJJbnZhbGlkIHNlcGFyYXRvciB0eXBlOiBcIitQLnNlcGFyYXRvcil9TysrO1A9UltPXXx8e307RD1mYWxzZX1pZihzPj1oKXtjb250aW51ZX12YXIgQjtpZihzPjB8fGUudmFsdWUuaHNraXBCZWZvcmVBbmRBZnRlcil7Qj11LmRlZmx0KFAucHJlZ2FwLG0pO2lmKEIhPT0wKXtFPXAoW1wiYXJyYXljb2xzZXBcIl0sW10pO0Uuc3R5bGUud2lkdGg9QitcImVtXCI7Qy5wdXNoKEUpfX12YXIgRj1bXTtmb3IoaT0wO2k8bDsrK2kpe3ZhciBJPWNbaV07dmFyIEc9SVtzXTtpZighRyl7Y29udGludWV9dmFyIFY9SS5wb3MtcTtHLmRlcHRoPUkuZGVwdGg7Ry5oZWlnaHQ9SS5oZWlnaHQ7Ri5wdXNoKHt0eXBlOlwiZWxlbVwiLGVsZW06RyxzaGlmdDpWfSl9Rj1uLm1ha2VWTGlzdChGLFwiaW5kaXZpZHVhbFNoaWZ0XCIsbnVsbCx0KTtGPXAoW1wiY29sLWFsaWduLVwiKyhQLmFsaWdufHxcImNcIildLFtGXSk7Qy5wdXNoKEYpO2lmKHM8aC0xfHxlLnZhbHVlLmhza2lwQmVmb3JlQW5kQWZ0ZXIpe0I9dS5kZWZsdChQLnBvc3RnYXAsbSk7aWYoQiE9PTApe0U9cChbXCJhcnJheWNvbHNlcFwiXSxbXSk7RS5zdHlsZS53aWR0aD1CK1wiZW1cIjtDLnB1c2goRSl9fX1jPXAoW1wibXRhYmxlXCJdLEMpO3JldHVybiBwKFtcIm1vcmRcIl0sW2NdLHQpfTt4LnNwYWNpbmc9ZnVuY3Rpb24oZSx0LHIpe2lmKGUudmFsdWU9PT1cIlxcXFwgXCJ8fGUudmFsdWU9PT1cIlxcXFxzcGFjZVwifHxlLnZhbHVlPT09XCIgXCJ8fGUudmFsdWU9PT1cIn5cIil7cmV0dXJuIHAoW1wibXNwYWNlXCJdLFtuLm1hdGhzeW0oZS52YWx1ZSxlLm1vZGUpXSl9ZWxzZXtyZXR1cm4gcChbXCJtc3BhY2VcIixuLnNwYWNpbmdGdW5jdGlvbnNbZS52YWx1ZV0uY2xhc3NOYW1lXSl9fTt4LmxsYXA9ZnVuY3Rpb24oZSx0LHIpe3ZhciBhPXAoW1wiaW5uZXJcIl0sW2IoZS52YWx1ZS5ib2R5LHQucmVzZXQoKSldKTt2YXIgaT1wKFtcImZpeFwiXSxbXSk7cmV0dXJuIHAoW1wibGxhcFwiLHQuc3R5bGUuY2xzKCldLFthLGldLHQpfTt4LnJsYXA9ZnVuY3Rpb24oZSx0LHIpe3ZhciBhPXAoW1wiaW5uZXJcIl0sW2IoZS52YWx1ZS5ib2R5LHQucmVzZXQoKSldKTt2YXIgaT1wKFtcImZpeFwiXSxbXSk7cmV0dXJuIHAoW1wicmxhcFwiLHQuc3R5bGUuY2xzKCldLFthLGldLHQpfTt4Lm9wPWZ1bmN0aW9uKGUsdCxyKXt2YXIgYTt2YXIgczt2YXIgbD1mYWxzZTtpZihlLnR5cGU9PT1cInN1cHN1YlwiKXthPWUudmFsdWUuc3VwO3M9ZS52YWx1ZS5zdWI7ZT1lLnZhbHVlLmJhc2U7bD10cnVlfXZhciBoPXQuc3R5bGU7dmFyIGM9W1wiXFxcXHNtYWxsaW50XCJdO3ZhciB2PWZhbHNlO2lmKGguc2l6ZT09PWkuRElTUExBWS5zaXplJiZlLnZhbHVlLnN5bWJvbCYmIXUuY29udGFpbnMoYyxlLnZhbHVlLmJvZHkpKXt2PXRydWV9dmFyIGY7dmFyIG09MDt2YXIgZD0wO2lmKGUudmFsdWUuc3ltYm9sKXt2YXIgZz12P1wiU2l6ZTItUmVndWxhclwiOlwiU2l6ZTEtUmVndWxhclwiO2Y9bi5tYWtlU3ltYm9sKGUudmFsdWUuYm9keSxnLFwibWF0aFwiLHQsW1wibW9wXCIsXCJvcC1zeW1ib2xcIix2P1wibGFyZ2Utb3BcIjpcInNtYWxsLW9wXCJdKTttPShmLmhlaWdodC1mLmRlcHRoKS8yLWgubWV0cmljcy5heGlzSGVpZ2h0Kmguc2l6ZU11bHRpcGxpZXI7ZD1mLml0YWxpY31lbHNle3ZhciB5PVtdO2Zvcih2YXIgeD0xO3g8ZS52YWx1ZS5ib2R5Lmxlbmd0aDt4Kyspe3kucHVzaChuLm1hdGhzeW0oZS52YWx1ZS5ib2R5W3hdLGUubW9kZSkpfWY9cChbXCJtb3BcIl0seSx0KX1pZihsKXtmPXAoW10sW2ZdKTt2YXIgdzt2YXIgazt2YXIgejt2YXIgUzt2YXIgTTtpZihhKXtNPXQud2l0aFN0eWxlKGguc3VwKCkpO3ZhciBUPWIoYSxNKTt3PXAoW2gucmVzZXQoKSxoLnN1cCgpLmNscygpXSxbVF0sTSk7az1NYXRoLm1heChvLm1ldHJpY3MuYmlnT3BTcGFjaW5nMSxvLm1ldHJpY3MuYmlnT3BTcGFjaW5nMy1ULmRlcHRoKX1pZihzKXtNPXQud2l0aFN0eWxlKGguc3ViKCkpO3ZhciBBPWIocyxNKTt6PXAoW2gucmVzZXQoKSxoLnN1YigpLmNscygpXSxbQV0sTSk7Uz1NYXRoLm1heChvLm1ldHJpY3MuYmlnT3BTcGFjaW5nMixvLm1ldHJpY3MuYmlnT3BTcGFjaW5nNC1BLmhlaWdodCl9dmFyIE47dmFyIHE7dmFyIFI7aWYoIWEpe3E9Zi5oZWlnaHQtbTtOPW4ubWFrZVZMaXN0KFt7dHlwZTpcImtlcm5cIixzaXplOm8ubWV0cmljcy5iaWdPcFNwYWNpbmc1fSx7dHlwZTpcImVsZW1cIixlbGVtOnp9LHt0eXBlOlwia2VyblwiLHNpemU6U30se3R5cGU6XCJlbGVtXCIsZWxlbTpmfV0sXCJ0b3BcIixxLHQpO04uY2hpbGRyZW5bMF0uc3R5bGUubWFyZ2luTGVmdD0tZCtcImVtXCJ9ZWxzZSBpZighcyl7Uj1mLmRlcHRoK207Tj1uLm1ha2VWTGlzdChbe3R5cGU6XCJlbGVtXCIsZWxlbTpmfSx7dHlwZTpcImtlcm5cIixzaXplOmt9LHt0eXBlOlwiZWxlbVwiLGVsZW06d30se3R5cGU6XCJrZXJuXCIsc2l6ZTpvLm1ldHJpY3MuYmlnT3BTcGFjaW5nNX1dLFwiYm90dG9tXCIsUix0KTtOLmNoaWxkcmVuWzFdLnN0eWxlLm1hcmdpbkxlZnQ9ZCtcImVtXCJ9ZWxzZSBpZighYSYmIXMpe3JldHVybiBmfWVsc2V7Uj1vLm1ldHJpY3MuYmlnT3BTcGFjaW5nNSt6LmhlaWdodCt6LmRlcHRoK1MrZi5kZXB0aCttO049bi5tYWtlVkxpc3QoW3t0eXBlOlwia2VyblwiLHNpemU6by5tZXRyaWNzLmJpZ09wU3BhY2luZzV9LHt0eXBlOlwiZWxlbVwiLGVsZW06en0se3R5cGU6XCJrZXJuXCIsc2l6ZTpTfSx7dHlwZTpcImVsZW1cIixlbGVtOmZ9LHt0eXBlOlwia2VyblwiLHNpemU6a30se3R5cGU6XCJlbGVtXCIsZWxlbTp3fSx7dHlwZTpcImtlcm5cIixzaXplOm8ubWV0cmljcy5iaWdPcFNwYWNpbmc1fV0sXCJib3R0b21cIixSLHQpO04uY2hpbGRyZW5bMF0uc3R5bGUubWFyZ2luTGVmdD0tZCtcImVtXCI7Ti5jaGlsZHJlblsyXS5zdHlsZS5tYXJnaW5MZWZ0PWQrXCJlbVwifXJldHVybiBwKFtcIm1vcFwiLFwib3AtbGltaXRzXCJdLFtOXSx0KX1lbHNle2lmKGUudmFsdWUuc3ltYm9sKXtcbmYuc3R5bGUudG9wPW0rXCJlbVwifXJldHVybiBmfX07eC5rYXRleD1mdW5jdGlvbihlLHQscil7dmFyIGE9cChbXCJrXCJdLFtuLm1hdGhzeW0oXCJLXCIsZS5tb2RlKV0sdCk7dmFyIGk9cChbXCJhXCJdLFtuLm1hdGhzeW0oXCJBXCIsZS5tb2RlKV0sdCk7aS5oZWlnaHQ9KGkuaGVpZ2h0Ky4yKSouNzU7aS5kZXB0aD0oaS5oZWlnaHQtLjIpKi43NTt2YXIgcz1wKFtcInRcIl0sW24ubWF0aHN5bShcIlRcIixlLm1vZGUpXSx0KTt2YXIgbD1wKFtcImVcIl0sW24ubWF0aHN5bShcIkVcIixlLm1vZGUpXSx0KTtsLmhlaWdodD1sLmhlaWdodC0uMjE1NTtsLmRlcHRoPWwuZGVwdGgrLjIxNTU7dmFyIG89cChbXCJ4XCJdLFtuLm1hdGhzeW0oXCJYXCIsZS5tb2RlKV0sdCk7cmV0dXJuIHAoW1wibW9yZFwiLFwia2F0ZXgtbG9nb1wiXSxbYSxpLHMsbCxvXSx0KX07eC5vdmVybGluZT1mdW5jdGlvbihlLHQscil7dmFyIGE9dC5zdHlsZTt2YXIgcz1iKGUudmFsdWUuYm9keSx0LndpdGhTdHlsZShhLmNyYW1wKCkpKTt2YXIgbD1vLm1ldHJpY3MuZGVmYXVsdFJ1bGVUaGlja25lc3MvYS5zaXplTXVsdGlwbGllcjt2YXIgdT1wKFthLnJlc2V0KCksaS5URVhULmNscygpLFwib3ZlcmxpbmUtbGluZVwiXSk7dS5oZWlnaHQ9bDt1Lm1heEZvbnRTaXplPTE7dmFyIGg9bi5tYWtlVkxpc3QoW3t0eXBlOlwiZWxlbVwiLGVsZW06c30se3R5cGU6XCJrZXJuXCIsc2l6ZTozKmx9LHt0eXBlOlwiZWxlbVwiLGVsZW06dX0se3R5cGU6XCJrZXJuXCIsc2l6ZTpsfV0sXCJmaXJzdEJhc2VsaW5lXCIsbnVsbCx0KTtyZXR1cm4gcChbXCJtb3JkXCIsXCJvdmVybGluZVwiXSxbaF0sdCl9O3gudW5kZXJsaW5lPWZ1bmN0aW9uKGUsdCxyKXt2YXIgYT10LnN0eWxlO3ZhciBzPWIoZS52YWx1ZS5ib2R5LHQpO3ZhciBsPW8ubWV0cmljcy5kZWZhdWx0UnVsZVRoaWNrbmVzcy9hLnNpemVNdWx0aXBsaWVyO3ZhciB1PXAoW2EucmVzZXQoKSxpLlRFWFQuY2xzKCksXCJ1bmRlcmxpbmUtbGluZVwiXSk7dS5oZWlnaHQ9bDt1Lm1heEZvbnRTaXplPTE7dmFyIGg9bi5tYWtlVkxpc3QoW3t0eXBlOlwia2VyblwiLHNpemU6bH0se3R5cGU6XCJlbGVtXCIsZWxlbTp1fSx7dHlwZTpcImtlcm5cIixzaXplOjMqbH0se3R5cGU6XCJlbGVtXCIsZWxlbTpzfV0sXCJ0b3BcIixzLmhlaWdodCx0KTtyZXR1cm4gcChbXCJtb3JkXCIsXCJ1bmRlcmxpbmVcIl0sW2hdLHQpfTt4LnNxcnQ9ZnVuY3Rpb24oZSx0LHIpe3ZhciBhPXQuc3R5bGU7dmFyIGw9YihlLnZhbHVlLmJvZHksdC53aXRoU3R5bGUoYS5jcmFtcCgpKSk7dmFyIHU9by5tZXRyaWNzLmRlZmF1bHRSdWxlVGhpY2tuZXNzL2Euc2l6ZU11bHRpcGxpZXI7dmFyIGg9cChbYS5yZXNldCgpLGkuVEVYVC5jbHMoKSxcInNxcnQtbGluZVwiXSxbXSx0KTtoLmhlaWdodD11O2gubWF4Rm9udFNpemU9MTt2YXIgYz11O2lmKGEuaWQ8aS5URVhULmlkKXtjPWEubWV0cmljcy54SGVpZ2h0fXZhciB2PXUrYy80O3ZhciBmPShsLmhlaWdodCtsLmRlcHRoKSphLnNpemVNdWx0aXBsaWVyO3ZhciBtPWYrdit1O3ZhciBkPXAoW1wic3FydC1zaWduXCJdLFtzLmN1c3RvbVNpemVkRGVsaW0oXCJcXFxcc3VyZFwiLG0sZmFsc2UsdCxlLm1vZGUpXSx0KTt2YXIgZz1kLmhlaWdodCtkLmRlcHRoLXU7aWYoZz5sLmhlaWdodCtsLmRlcHRoK3Ype3Y9KHYrZy1sLmhlaWdodC1sLmRlcHRoKS8yfXZhciB5PS0obC5oZWlnaHQrdit1KStkLmhlaWdodDtkLnN0eWxlLnRvcD15K1wiZW1cIjtkLmhlaWdodC09eTtkLmRlcHRoKz15O3ZhciB4O2lmKGwuaGVpZ2h0PT09MCYmbC5kZXB0aD09PTApe3g9cCgpfWVsc2V7eD1uLm1ha2VWTGlzdChbe3R5cGU6XCJlbGVtXCIsZWxlbTpsfSx7dHlwZTpcImtlcm5cIixzaXplOnZ9LHt0eXBlOlwiZWxlbVwiLGVsZW06aH0se3R5cGU6XCJrZXJuXCIsc2l6ZTp1fV0sXCJmaXJzdEJhc2VsaW5lXCIsbnVsbCx0KX1pZighZS52YWx1ZS5pbmRleCl7cmV0dXJuIHAoW1wibW9yZFwiLFwic3FydFwiXSxbZCx4XSx0KX1lbHNle3ZhciB3PXQud2l0aFN0eWxlKGkuU0NSSVBUU0NSSVBUKTt2YXIgaz1iKGUudmFsdWUuaW5kZXgsdyk7dmFyIHo9cChbYS5yZXNldCgpLGkuU0NSSVBUU0NSSVBULmNscygpXSxba10sdyk7dmFyIFM9TWF0aC5tYXgoZC5oZWlnaHQseC5oZWlnaHQpO3ZhciBNPU1hdGgubWF4KGQuZGVwdGgseC5kZXB0aCk7dmFyIFQ9LjYqKFMtTSk7dmFyIEE9bi5tYWtlVkxpc3QoW3t0eXBlOlwiZWxlbVwiLGVsZW06en1dLFwic2hpZnRcIiwtVCx0KTt2YXIgTj1wKFtcInJvb3RcIl0sW0FdKTtyZXR1cm4gcChbXCJtb3JkXCIsXCJzcXJ0XCJdLFtOLGQseF0sdCl9fTt4LnNpemluZz1mdW5jdGlvbihlLHQscil7dmFyIGE9YyhlLnZhbHVlLnZhbHVlLHQud2l0aFNpemUoZS52YWx1ZS5zaXplKSxyKTt2YXIgaT10LnN0eWxlO3ZhciBzPW4uc2l6aW5nTXVsdGlwbGllcltlLnZhbHVlLnNpemVdO3M9cyppLnNpemVNdWx0aXBsaWVyO2Zvcih2YXIgbD0wO2w8YS5sZW5ndGg7bCsrKXt2YXIgbz11LmluZGV4T2YoYVtsXS5jbGFzc2VzLFwic2l6aW5nXCIpO2lmKG88MCl7YVtsXS5jbGFzc2VzLnB1c2goXCJzaXppbmdcIixcInJlc2V0LVwiK3Quc2l6ZSxlLnZhbHVlLnNpemUsaS5jbHMoKSk7YVtsXS5tYXhGb250U2l6ZT1zfWVsc2UgaWYoYVtsXS5jbGFzc2VzW28rMV09PT1cInJlc2V0LVwiK2UudmFsdWUuc2l6ZSl7YVtsXS5jbGFzc2VzW28rMV09XCJyZXNldC1cIit0LnNpemV9fXJldHVybiBuLm1ha2VGcmFnbWVudChhKX07eC5zdHlsaW5nPWZ1bmN0aW9uKGUsdCxyKXt2YXIgYT17ZGlzcGxheTppLkRJU1BMQVksdGV4dDppLlRFWFQsc2NyaXB0OmkuU0NSSVBULHNjcmlwdHNjcmlwdDppLlNDUklQVFNDUklQVH07dmFyIHM9YVtlLnZhbHVlLnN0eWxlXTt2YXIgbD10LndpdGhTdHlsZShzKTt2YXIgbz1jKGUudmFsdWUudmFsdWUsbCxyKTtmb3IodmFyIHA9MDtwPG8ubGVuZ3RoO3ArKyl7dmFyIGg9dS5pbmRleE9mKG9bcF0uY2xhc3NlcyxzLnJlc2V0KCkpO2lmKGg8MCl7b1twXS5jbGFzc2VzLnB1c2godC5zdHlsZS5yZXNldCgpLHMuY2xzKCkpfWVsc2V7b1twXS5jbGFzc2VzW2hdPXQuc3R5bGUucmVzZXQoKX19cmV0dXJuIG5ldyBuLm1ha2VGcmFnbWVudChvKX07eC5mb250PWZ1bmN0aW9uKGUsdCxyKXt2YXIgYT1lLnZhbHVlLmZvbnQ7cmV0dXJuIGIoZS52YWx1ZS5ib2R5LHQud2l0aEZvbnQoYSkscil9O3guZGVsaW1zaXppbmc9ZnVuY3Rpb24oZSx0LHIpe3ZhciBhPWUudmFsdWUudmFsdWU7aWYoYT09PVwiLlwiKXtyZXR1cm4gcChbdltlLnZhbHVlLmRlbGltVHlwZV1dKX1yZXR1cm4gcChbdltlLnZhbHVlLmRlbGltVHlwZV1dLFtzLnNpemVkRGVsaW0oYSxlLnZhbHVlLnNpemUsdCxlLm1vZGUpXSx0KX07eC5sZWZ0cmlnaHQ9ZnVuY3Rpb24oZSx0LHIpe3ZhciBhPWMoZS52YWx1ZS5ib2R5LHQucmVzZXQoKSk7dmFyIGk9MDt2YXIgbj0wO2Zvcih2YXIgbD0wO2w8YS5sZW5ndGg7bCsrKXtpPU1hdGgubWF4KGFbbF0uaGVpZ2h0LGkpO249TWF0aC5tYXgoYVtsXS5kZXB0aCxuKX12YXIgbz10LnN0eWxlO2kqPW8uc2l6ZU11bHRpcGxpZXI7bio9by5zaXplTXVsdGlwbGllcjt2YXIgdTtpZihlLnZhbHVlLmxlZnQ9PT1cIi5cIil7dT15KHQpfWVsc2V7dT1zLmxlZnRSaWdodERlbGltKGUudmFsdWUubGVmdCxpLG4sdCxlLm1vZGUpfWEudW5zaGlmdCh1KTt2YXIgaDtpZihlLnZhbHVlLnJpZ2h0PT09XCIuXCIpe2g9eSh0KX1lbHNle2g9cy5sZWZ0UmlnaHREZWxpbShlLnZhbHVlLnJpZ2h0LGksbix0LGUubW9kZSl9YS5wdXNoKGgpO3JldHVybiBwKFtcIm1pbm5lclwiLG8uY2xzKCldLGEsdCl9O3guY3Vyc29yPWZ1bmN0aW9uKGUsdCxyKXt2YXIgYT1wKFtcImN1cnNvclwiXSxbXSx0KTt2YXIgaT10LnN0eWxlO3ZhciBuPTA7aWYoZS52YWx1ZS5zaGlmdCl7bj1lLnZhbHVlLnNoaWZ0Lm51bWJlcjtpZihlLnZhbHVlLnNoaWZ0LnVuaXQ9PT1cImV4XCIpe24qPWkubWV0cmljcy54SGVpZ2h0fX12YXIgcz1lLnZhbHVlLmhlaWdodC5udW1iZXI7aWYoZS52YWx1ZS5oZWlnaHQudW5pdD09PVwiZXhcIil7cyo9aS5tZXRyaWNzLnhIZWlnaHR9bi89dC5zdHlsZS5zaXplTXVsdGlwbGllcjtzLz10LnN0eWxlLnNpemVNdWx0aXBsaWVyO2Euc3R5bGUubWFyZ2luUmlnaHQ9XCItMXB4XCI7YS5zdHlsZS5ib3JkZXJSaWdodD1cIjFweCBzb2xpZFwiO2Euc3R5bGUubWFyZ2luQm90dG9tPW4rXCJlbVwiO2Euc3R5bGUuaGVpZ2h0PXMrXCJlbVwiO2Eud2lkdGg9MTthLmhlaWdodD1zK247YS5kZXB0aD0tbjtlLnZhbHVlLnByZXZpb3VzPXI7cmV0dXJuIGF9O3gucnVsZT1mdW5jdGlvbihlLHQscil7dmFyIGE9cChbXCJtb3JkXCIsXCJydWxlXCJdLFtdLHQpO3ZhciBpPXQuc3R5bGU7dmFyIG49MDtpZihlLnZhbHVlLnNoaWZ0KXtuPWUudmFsdWUuc2hpZnQubnVtYmVyO2lmKGUudmFsdWUuc2hpZnQudW5pdD09PVwiZXhcIil7bio9aS5tZXRyaWNzLnhIZWlnaHR9fXZhciBzPWUudmFsdWUud2lkdGgubnVtYmVyO2lmKGUudmFsdWUud2lkdGgudW5pdD09PVwiZXhcIil7cyo9aS5tZXRyaWNzLnhIZWlnaHR9dmFyIGw9ZS52YWx1ZS5oZWlnaHQubnVtYmVyO2lmKGUudmFsdWUuaGVpZ2h0LnVuaXQ9PT1cImV4XCIpe2wqPWkubWV0cmljcy54SGVpZ2h0fW4vPWkuc2l6ZU11bHRpcGxpZXI7cy89aS5zaXplTXVsdGlwbGllcjtsLz1pLnNpemVNdWx0aXBsaWVyO2Euc3R5bGUuYm9yZGVyUmlnaHRXaWR0aD1zK1wiZW1cIjthLnN0eWxlLmJvcmRlclRvcFdpZHRoPWwrXCJlbVwiO2Euc3R5bGUuYm90dG9tPW4rXCJlbVwiO2Eud2lkdGg9czthLmhlaWdodD1sK247YS5kZXB0aD0tbjtyZXR1cm4gYX07eC5rZXJuPWZ1bmN0aW9uKGUsdCxyKXt2YXIgYT1wKFtcIm1vcmRcIixcInJ1bGVcIl0sW10sdCk7dmFyIGk9dC5zdHlsZTt2YXIgbj0wO2lmKGUudmFsdWUuZGltZW5zaW9uKXtuPWUudmFsdWUuZGltZW5zaW9uLm51bWJlcjtpZihlLnZhbHVlLmRpbWVuc2lvbi51bml0PT09XCJleFwiKXtuKj1pLm1ldHJpY3MueEhlaWdodH19bi89aS5zaXplTXVsdGlwbGllcjthLnN0eWxlLm1hcmdpbkxlZnQ9bitcImVtXCI7cmV0dXJuIGF9O3guYWNjZW50PWZ1bmN0aW9uKGUsdCxyKXt2YXIgYT1lLnZhbHVlLmJhc2U7dmFyIGk9dC5zdHlsZTt2YXIgcztpZihlLnR5cGU9PT1cInN1cHN1YlwiKXt2YXIgbD1lO2U9bC52YWx1ZS5iYXNlO2E9ZS52YWx1ZS5iYXNlO2wudmFsdWUuYmFzZT1hO3M9YihsLHQucmVzZXQoKSxyKX12YXIgbz1iKGEsdC53aXRoU3R5bGUoaS5jcmFtcCgpKSk7dmFyIHU7aWYoZyhhKSl7dmFyIGg9ZChhKTt2YXIgYz1iKGgsdC53aXRoU3R5bGUoaS5jcmFtcCgpKSk7dT1jLnNrZXd9ZWxzZXt1PTB9dmFyIHY9TWF0aC5taW4oby5oZWlnaHQsaS5tZXRyaWNzLnhIZWlnaHQpO3ZhciBmPW4ubWFrZVN5bWJvbChlLnZhbHVlLmFjY2VudCxcIk1haW4tUmVndWxhclwiLFwibWF0aFwiLHQpO2YuaXRhbGljPTA7dmFyIG09ZS52YWx1ZS5hY2NlbnQ9PT1cIlxcXFx2ZWNcIj9cImFjY2VudC12ZWNcIjpudWxsO3ZhciB5PXAoW1wiYWNjZW50LWJvZHlcIixtXSxbcChbXSxbZl0pXSk7eT1uLm1ha2VWTGlzdChbe3R5cGU6XCJlbGVtXCIsZWxlbTpvfSx7dHlwZTpcImtlcm5cIixzaXplOi12fSx7dHlwZTpcImVsZW1cIixlbGVtOnl9XSxcImZpcnN0QmFzZWxpbmVcIixudWxsLHQpO3kuY2hpbGRyZW5bMV0uc3R5bGUubWFyZ2luTGVmdD0yKnUrXCJlbVwiO3ZhciB4PXAoW1wibW9yZFwiLFwiYWNjZW50XCJdLFt5XSx0KTtpZihzKXtzLmNoaWxkcmVuWzBdPXg7cy5oZWlnaHQ9TWF0aC5tYXgoeC5oZWlnaHQscy5oZWlnaHQpO3MuY2xhc3Nlc1swXT1cIm1vcmRcIjtyZXR1cm4gc31lbHNle3JldHVybiB4fX07eC5waGFudG9tPWZ1bmN0aW9uKGUsdCxyKXt2YXIgYT1jKGUudmFsdWUudmFsdWUsdC53aXRoUGhhbnRvbSgpLHIpO3JldHVybiBuZXcgbi5tYWtlRnJhZ21lbnQoYSl9O3ZhciBiPWZ1bmN0aW9uKGUsdCxyKXtpZighZSl7cmV0dXJuIHAoKX1pZih4W2UudHlwZV0pe3ZhciBpPXhbZS50eXBlXShlLHQscik7dmFyIHM7aWYodC5zdHlsZSE9PXQucGFyZW50U3R5bGUpe3M9dC5zdHlsZS5zaXplTXVsdGlwbGllci90LnBhcmVudFN0eWxlLnNpemVNdWx0aXBsaWVyO2kuaGVpZ2h0Kj1zO2kuZGVwdGgqPXN9aWYodC5zaXplIT09dC5wYXJlbnRTaXplKXtzPW4uc2l6aW5nTXVsdGlwbGllclt0LnNpemVdL24uc2l6aW5nTXVsdGlwbGllclt0LnBhcmVudFNpemVdO2kuaGVpZ2h0Kj1zO2kuZGVwdGgqPXN9cmV0dXJuIGl9ZWxzZXt0aHJvdyBuZXcgYShcIkdvdCBncm91cCBvZiB1bmtub3duIHR5cGU6ICdcIitlLnR5cGUrXCInXCIpfX07dmFyIHc9ZnVuY3Rpb24oZSx0KXtlPUpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkoZSkpO3ZhciByPWMoZSx0KTt2YXIgYT1wKFtcImJhc2VcIix0LnN0eWxlLmNscygpXSxyLHQpO3ZhciBpPXAoW1wic3RydXRcIl0pO3ZhciBuPXAoW1wic3RydXRcIixcImJvdHRvbVwiXSk7aS5zdHlsZS5oZWlnaHQ9YS5oZWlnaHQrXCJlbVwiO24uc3R5bGUuaGVpZ2h0PWEuaGVpZ2h0K2EuZGVwdGgrXCJlbVwiO24uc3R5bGUudmVydGljYWxBbGlnbj0tYS5kZXB0aCtcImVtXCI7dmFyIHM9cChbXCJrYXRleC1odG1sXCJdLFtpLG4sYV0pO3Muc2V0QXR0cmlidXRlKFwiYXJpYS1oaWRkZW5cIixcInRydWVcIik7cmV0dXJuIHN9O3QuZXhwb3J0cz13fSx7XCIuL1BhcnNlRXJyb3JcIjo2LFwiLi9TdHlsZVwiOjksXCIuL2J1aWxkQ29tbW9uXCI6MTAsXCIuL2RlbGltaXRlclwiOjE0LFwiLi9kb21UcmVlXCI6MTUsXCIuL2ZvbnRNZXRyaWNzXCI6MTcsXCIuL3V0aWxzXCI6MjV9XSwxMjpbZnVuY3Rpb24oZSx0LHIpe3ZhciBhPWUoXCIuL2J1aWxkQ29tbW9uXCIpO3ZhciBpPWUoXCIuL2ZvbnRNZXRyaWNzXCIpO3ZhciBuPWUoXCIuL21hdGhNTFRyZWVcIik7dmFyIHM9ZShcIi4vUGFyc2VFcnJvclwiKTt2YXIgbD1lKFwiLi9zeW1ib2xzXCIpO3ZhciBvPWUoXCIuL3V0aWxzXCIpO3ZhciB1PWEubWFrZVNwYW47dmFyIHA9YS5mb250TWFwO3ZhciBoPWZ1bmN0aW9uKGUsdCl7aWYobFt0XVtlXSYmbFt0XVtlXS5yZXBsYWNlKXtlPWxbdF1bZV0ucmVwbGFjZX1yZXR1cm4gbmV3IG4uVGV4dE5vZGUoZSl9O3ZhciBjPWZ1bmN0aW9uKGUsdCl7dmFyIHI9dC5mb250O2lmKCFyKXtyZXR1cm4gbnVsbH12YXIgYT1lLm1vZGU7aWYocj09PVwibWF0aGl0XCIpe3JldHVyblwiaXRhbGljXCJ9dmFyIG49ZS52YWx1ZTtpZihvLmNvbnRhaW5zKFtcIlxcXFxpbWF0aFwiLFwiXFxcXGptYXRoXCJdLG4pKXtyZXR1cm4gbnVsbH1pZihsW2FdW25dJiZsW2FdW25dLnJlcGxhY2Upe249bFthXVtuXS5yZXBsYWNlfXZhciBzPXBbcl0uZm9udE5hbWU7aWYoaS5nZXRDaGFyYWN0ZXJNZXRyaWNzKG4scykpe3JldHVybiBwW3QuZm9udF0udmFyaWFudH1yZXR1cm4gbnVsbH07dmFyIHY9e307di5tYXRob3JkPWZ1bmN0aW9uKGUsdCl7dmFyIHI9bmV3IG4uTWF0aE5vZGUoXCJtaVwiLFtoKGUudmFsdWUsZS5tb2RlKV0pO3ZhciBhPWMoZSx0KTtpZihhKXtyLnNldEF0dHJpYnV0ZShcIm1hdGh2YXJpYW50XCIsYSl9cmV0dXJuIHJ9O3YudGV4dG9yZD1mdW5jdGlvbihlLHQpe3ZhciByPWgoZS52YWx1ZSxlLm1vZGUpO3ZhciBhPWMoZSx0KXx8XCJub3JtYWxcIjt2YXIgaTtpZigvWzAtOV0vLnRlc3QoZS52YWx1ZSkpe2k9bmV3IG4uTWF0aE5vZGUoXCJtblwiLFtyXSk7aWYodC5mb250KXtpLnNldEF0dHJpYnV0ZShcIm1hdGh2YXJpYW50XCIsYSl9fWVsc2V7aT1uZXcgbi5NYXRoTm9kZShcIm1pXCIsW3JdKTtpLnNldEF0dHJpYnV0ZShcIm1hdGh2YXJpYW50XCIsYSl9cmV0dXJuIGl9O3YuYmluPWZ1bmN0aW9uKGUpe3ZhciB0PW5ldyBuLk1hdGhOb2RlKFwibW9cIixbaChlLnZhbHVlLGUubW9kZSldKTtyZXR1cm4gdH07di5yZWw9ZnVuY3Rpb24oZSl7dmFyIHQ9bmV3IG4uTWF0aE5vZGUoXCJtb1wiLFtoKGUudmFsdWUsZS5tb2RlKV0pO3JldHVybiB0fTt2Lm9wZW49ZnVuY3Rpb24oZSl7dmFyIHQ9bmV3IG4uTWF0aE5vZGUoXCJtb1wiLFtoKGUudmFsdWUsZS5tb2RlKV0pO3JldHVybiB0fTt2LmNsb3NlPWZ1bmN0aW9uKGUpe3ZhciB0PW5ldyBuLk1hdGhOb2RlKFwibW9cIixbaChlLnZhbHVlLGUubW9kZSldKTtyZXR1cm4gdH07di5pbm5lcj1mdW5jdGlvbihlKXt2YXIgdD1uZXcgbi5NYXRoTm9kZShcIm1vXCIsW2goZS52YWx1ZSxlLm1vZGUpXSk7cmV0dXJuIHR9O3YucHVuY3Q9ZnVuY3Rpb24oZSl7dmFyIHQ9bmV3IG4uTWF0aE5vZGUoXCJtb1wiLFtoKGUudmFsdWUsZS5tb2RlKV0pO3Quc2V0QXR0cmlidXRlKFwic2VwYXJhdG9yXCIsXCJ0cnVlXCIpO3JldHVybiB0fTt2Lm9yZGdyb3VwPWZ1bmN0aW9uKGUsdCl7dmFyIHI9ZihlLnZhbHVlLHQpO3ZhciBhPW5ldyBuLk1hdGhOb2RlKFwibXJvd1wiLHIpO3JldHVybiBhfTt2LnRleHQ9ZnVuY3Rpb24oZSx0KXt2YXIgcj1mKGUudmFsdWUuYm9keSx0KTt2YXIgYT1uZXcgbi5NYXRoTm9kZShcIm10ZXh0XCIscik7cmV0dXJuIGF9O3YuY29sb3I9ZnVuY3Rpb24oZSx0KXt2YXIgcj1mKGUudmFsdWUudmFsdWUsdCk7dmFyIGE9bmV3IG4uTWF0aE5vZGUoXCJtc3R5bGVcIixyKTthLnNldEF0dHJpYnV0ZShcIm1hdGhjb2xvclwiLGUudmFsdWUuY29sb3IpO3JldHVybiBhfTt2LnhtbENsYXNzPWZ1bmN0aW9uKGUsdCl7dmFyIHI9ZihlLnZhbHVlLnZhbHVlLHQpO3ZhciBhPW5ldyBuLk1hdGhOb2RlKFwibXN0eWxlXCIscik7YS5zZXRBdHRyaWJ1dGUoXCJjbGFzc1wiLGUudmFsdWUuY2wpO3JldHVybiBhfTt2LnN1cHN1Yj1mdW5jdGlvbihlLHQpe3ZhciByPVttKGUudmFsdWUuYmFzZSx0KV07aWYoZS52YWx1ZS5zdWIpe3IucHVzaChtKGUudmFsdWUuc3ViLHQpKX1pZihlLnZhbHVlLnN1cCl7ci5wdXNoKG0oZS52YWx1ZS5zdXAsdCkpfXZhciBhO2lmKCFlLnZhbHVlLnN1Yil7YT1cIm1zdXBcIn1lbHNlIGlmKCFlLnZhbHVlLnN1cCl7YT1cIm1zdWJcIn1lbHNle2E9XCJtc3Vic3VwXCJ9dmFyIGk9bmV3IG4uTWF0aE5vZGUoYSxyKTtyZXR1cm4gaX07di5nZW5mcmFjPWZ1bmN0aW9uKGUsdCl7dmFyIHI9bmV3IG4uTWF0aE5vZGUoXCJtZnJhY1wiLFttKGUudmFsdWUubnVtZXIsdCksbShlLnZhbHVlLmRlbm9tLHQpXSk7aWYoIWUudmFsdWUuaGFzQmFyTGluZSl7ci5zZXRBdHRyaWJ1dGUoXCJsaW5ldGhpY2tuZXNzXCIsXCIwcHhcIil9aWYoZS52YWx1ZS5sZWZ0RGVsaW0hPW51bGx8fGUudmFsdWUucmlnaHREZWxpbSE9bnVsbCl7dmFyIGE9W107aWYoZS52YWx1ZS5sZWZ0RGVsaW0hPW51bGwpe3ZhciBpPW5ldyBuLk1hdGhOb2RlKFwibW9cIixbbmV3IG4uVGV4dE5vZGUoZS52YWx1ZS5sZWZ0RGVsaW0pXSk7aS5zZXRBdHRyaWJ1dGUoXCJmZW5jZVwiLFwidHJ1ZVwiKTthLnB1c2goaSl9YS5wdXNoKHIpO2lmKGUudmFsdWUucmlnaHREZWxpbSE9bnVsbCl7dmFyIHM9bmV3IG4uTWF0aE5vZGUoXCJtb1wiLFtuZXcgbi5UZXh0Tm9kZShlLnZhbHVlLnJpZ2h0RGVsaW0pXSk7cy5zZXRBdHRyaWJ1dGUoXCJmZW5jZVwiLFwidHJ1ZVwiKTthLnB1c2gocyl9dmFyIGw9bmV3IG4uTWF0aE5vZGUoXCJtcm93XCIsYSk7cmV0dXJuIGx9cmV0dXJuIHJ9O3YuYXJyYXk9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gbmV3IG4uTWF0aE5vZGUoXCJtdGFibGVcIixlLnZhbHVlLmJvZHkubWFwKGZ1bmN0aW9uKGUpe3JldHVybiBuZXcgbi5NYXRoTm9kZShcIm10clwiLGUubWFwKGZ1bmN0aW9uKGUpe3JldHVybiBuZXcgbi5NYXRoTm9kZShcIm10ZFwiLFttKGUsdCldKX0pKX0pKX07di5zcXJ0PWZ1bmN0aW9uKGUsdCl7dmFyIHI7aWYoZS52YWx1ZS5pbmRleCl7cj1uZXcgbi5NYXRoTm9kZShcIm1yb290XCIsW20oZS52YWx1ZS5ib2R5LHQpLG0oZS52YWx1ZS5pbmRleCx0KV0pfWVsc2V7cj1uZXcgbi5NYXRoTm9kZShcIm1zcXJ0XCIsW20oZS52YWx1ZS5ib2R5LHQpXSl9cmV0dXJuIHJ9O3YubGVmdHJpZ2h0PWZ1bmN0aW9uKGUsdCl7dmFyIHI9ZihlLnZhbHVlLmJvZHksdCk7aWYoZS52YWx1ZS5sZWZ0IT09XCIuXCIpe3ZhciBhPW5ldyBuLk1hdGhOb2RlKFwibW9cIixbaChlLnZhbHVlLmxlZnQsZS5tb2RlKV0pO2Euc2V0QXR0cmlidXRlKFwiZmVuY2VcIixcInRydWVcIik7ci51bnNoaWZ0KGEpfWlmKGUudmFsdWUucmlnaHQhPT1cIi5cIil7dmFyIGk9bmV3IG4uTWF0aE5vZGUoXCJtb1wiLFtoKGUudmFsdWUucmlnaHQsZS5tb2RlKV0pO2kuc2V0QXR0cmlidXRlKFwiZmVuY2VcIixcInRydWVcIik7ci5wdXNoKGkpfXZhciBzPW5ldyBuLk1hdGhOb2RlKFwibXJvd1wiLHIpO3JldHVybiBzfTt2LmFjY2VudD1mdW5jdGlvbihlLHQpe3ZhciByPW5ldyBuLk1hdGhOb2RlKFwibW9cIixbaChlLnZhbHVlLmFjY2VudCxlLm1vZGUpXSk7dmFyIGE9bmV3IG4uTWF0aE5vZGUoXCJtb3ZlclwiLFttKGUudmFsdWUuYmFzZSx0KSxyXSk7YS5zZXRBdHRyaWJ1dGUoXCJhY2NlbnRcIixcInRydWVcIik7cmV0dXJuIGF9O3Yuc3BhY2luZz1mdW5jdGlvbihlKXt2YXIgdDtpZihlLnZhbHVlPT09XCJcXFxcIFwifHxlLnZhbHVlPT09XCJcXFxcc3BhY2VcInx8ZS52YWx1ZT09PVwiIFwifHxlLnZhbHVlPT09XCJ+XCIpe3Q9bmV3IG4uTWF0aE5vZGUoXCJtdGV4dFwiLFtuZXcgbi5UZXh0Tm9kZShcIlxceGEwXCIpXSl9ZWxzZXt0PW5ldyBuLk1hdGhOb2RlKFwibXNwYWNlXCIpO3Quc2V0QXR0cmlidXRlKFwid2lkdGhcIixhLnNwYWNpbmdGdW5jdGlvbnNbZS52YWx1ZV0uc2l6ZSl9cmV0dXJuIHR9O3Yub3A9ZnVuY3Rpb24oZSl7dmFyIHQ7aWYoZS52YWx1ZS5zeW1ib2wpe3Q9bmV3IG4uTWF0aE5vZGUoXCJtb1wiLFtoKGUudmFsdWUuYm9keSxlLm1vZGUpXSl9ZWxzZXt0PW5ldyBuLk1hdGhOb2RlKFwibWlcIixbbmV3IG4uVGV4dE5vZGUoZS52YWx1ZS5ib2R5LnNsaWNlKDEpKV0pfXJldHVybiB0fTt2LmN1cnNvcj1mdW5jdGlvbihlKXt2YXIgdD1uZXcgbi5NYXRoTm9kZShcIm10ZXh0XCIsW25ldyBuLlRleHROb2RlKFwifFwiKV0pO3JldHVybiB0fTt2LmthdGV4PWZ1bmN0aW9uKGUpe3ZhciB0PW5ldyBuLk1hdGhOb2RlKFwibXRleHRcIixbbmV3IG4uVGV4dE5vZGUoXCJLYVRlWFwiKV0pO3JldHVybiB0fTt2LmZvbnQ9ZnVuY3Rpb24oZSx0KXt2YXIgcj1lLnZhbHVlLmZvbnQ7cmV0dXJuIG0oZS52YWx1ZS5ib2R5LHQud2l0aEZvbnQocikpfTt2LmRlbGltc2l6aW5nPWZ1bmN0aW9uKGUpe3ZhciB0PVtdO2lmKGUudmFsdWUudmFsdWUhPT1cIi5cIil7dC5wdXNoKGgoZS52YWx1ZS52YWx1ZSxlLm1vZGUpKX12YXIgcj1uZXcgbi5NYXRoTm9kZShcIm1vXCIsdCk7aWYoZS52YWx1ZS5kZWxpbVR5cGU9PT1cIm9wZW5cInx8ZS52YWx1ZS5kZWxpbVR5cGU9PT1cImNsb3NlXCIpe3Iuc2V0QXR0cmlidXRlKFwiZmVuY2VcIixcInRydWVcIil9ZWxzZXtyLnNldEF0dHJpYnV0ZShcImZlbmNlXCIsXCJmYWxzZVwiKX1yZXR1cm4gcn07di5zdHlsaW5nPWZ1bmN0aW9uKGUsdCl7dmFyIHI9ZihlLnZhbHVlLnZhbHVlLHQpO3ZhciBhPW5ldyBuLk1hdGhOb2RlKFwibXN0eWxlXCIscik7dmFyIGk9e2Rpc3BsYXk6W1wiMFwiLFwidHJ1ZVwiXSx0ZXh0OltcIjBcIixcImZhbHNlXCJdLHNjcmlwdDpbXCIxXCIsXCJmYWxzZVwiXSxzY3JpcHRzY3JpcHQ6W1wiMlwiLFwiZmFsc2VcIl19O3ZhciBzPWlbZS52YWx1ZS5zdHlsZV07YS5zZXRBdHRyaWJ1dGUoXCJzY3JpcHRsZXZlbFwiLHNbMF0pO2Euc2V0QXR0cmlidXRlKFwiZGlzcGxheXN0eWxlXCIsc1sxXSk7cmV0dXJuIGF9O3Yuc2l6aW5nPWZ1bmN0aW9uKGUsdCl7dmFyIHI9ZihlLnZhbHVlLnZhbHVlLHQpO3ZhciBpPW5ldyBuLk1hdGhOb2RlKFwibXN0eWxlXCIscik7aS5zZXRBdHRyaWJ1dGUoXCJtYXRoc2l6ZVwiLGEuc2l6aW5nTXVsdGlwbGllcltlLnZhbHVlLnNpemVdK1wiZW1cIik7cmV0dXJuIGl9O3Yub3ZlcmxpbmU9ZnVuY3Rpb24oZSx0KXt2YXIgcj1uZXcgbi5NYXRoTm9kZShcIm1vXCIsW25ldyBuLlRleHROb2RlKFwiXFx1MjAzZVwiKV0pO3Iuc2V0QXR0cmlidXRlKFwic3RyZXRjaHlcIixcInRydWVcIik7dmFyIGE9bmV3IG4uTWF0aE5vZGUoXCJtb3ZlclwiLFttKGUudmFsdWUuYm9keSx0KSxyXSk7YS5zZXRBdHRyaWJ1dGUoXCJhY2NlbnRcIixcInRydWVcIik7cmV0dXJuIGF9O3YudW5kZXJsaW5lPWZ1bmN0aW9uKGUsdCl7dmFyIHI9bmV3IG4uTWF0aE5vZGUoXCJtb1wiLFtuZXcgbi5UZXh0Tm9kZShcIlxcdTIwM2VcIildKTtyLnNldEF0dHJpYnV0ZShcInN0cmV0Y2h5XCIsXCJ0cnVlXCIpO3ZhciBhPW5ldyBuLk1hdGhOb2RlKFwibXVuZGVyXCIsW20oZS52YWx1ZS5ib2R5LHQpLHJdKTthLnNldEF0dHJpYnV0ZShcImFjY2VudHVuZGVyXCIsXCJ0cnVlXCIpO3JldHVybiBhfTt2LnJ1bGU9ZnVuY3Rpb24oZSl7dmFyIHQ9bmV3IG4uTWF0aE5vZGUoXCJtcm93XCIpO3JldHVybiB0fTt2Lmtlcm49ZnVuY3Rpb24oZSl7dmFyIHQ9bmV3IG4uTWF0aE5vZGUoXCJtcm93XCIpO3JldHVybiB0fTt2LmxsYXA9ZnVuY3Rpb24oZSx0KXt2YXIgcj1uZXcgbi5NYXRoTm9kZShcIm1wYWRkZWRcIixbbShlLnZhbHVlLmJvZHksdCldKTtyLnNldEF0dHJpYnV0ZShcImxzcGFjZVwiLFwiLTF3aWR0aFwiKTtyLnNldEF0dHJpYnV0ZShcIndpZHRoXCIsXCIwcHhcIik7cmV0dXJuIHJ9O3YucmxhcD1mdW5jdGlvbihlLHQpe3ZhciByPW5ldyBuLk1hdGhOb2RlKFwibXBhZGRlZFwiLFttKGUudmFsdWUuYm9keSx0KV0pO3Iuc2V0QXR0cmlidXRlKFwid2lkdGhcIixcIjBweFwiKTtyZXR1cm4gcn07di5waGFudG9tPWZ1bmN0aW9uKGUsdCxyKXt2YXIgYT1mKGUudmFsdWUudmFsdWUsdCk7cmV0dXJuIG5ldyBuLk1hdGhOb2RlKFwibXBoYW50b21cIixhKX07dmFyIGY9ZnVuY3Rpb24oZSx0KXt2YXIgcj1bXTtmb3IodmFyIGE9MDthPGUubGVuZ3RoO2ErKyl7dmFyIGk9ZVthXTtyLnB1c2gobShpLHQpKX1yZXR1cm4gcn07dmFyIG09ZnVuY3Rpb24oZSx0KXtpZighZSl7cmV0dXJuIG5ldyBuLk1hdGhOb2RlKFwibXJvd1wiKX1pZih2W2UudHlwZV0pe3JldHVybiB2W2UudHlwZV0oZSx0KX1lbHNle3Rocm93IG5ldyBzKFwiR290IGdyb3VwIG9mIHVua25vd24gdHlwZTogJ1wiK2UudHlwZStcIidcIil9fTt2YXIgZD1mdW5jdGlvbihlLHQscil7dmFyIGE9ZihlLHIpO3ZhciBpPW5ldyBuLk1hdGhOb2RlKFwibXJvd1wiLGEpO3ZhciBzPW5ldyBuLk1hdGhOb2RlKFwiYW5ub3RhdGlvblwiLFtuZXcgbi5UZXh0Tm9kZSh0KV0pO3Muc2V0QXR0cmlidXRlKFwiZW5jb2RpbmdcIixcImFwcGxpY2F0aW9uL3gtdGV4XCIpO3ZhciBsPW5ldyBuLk1hdGhOb2RlKFwic2VtYW50aWNzXCIsW2ksc10pO3ZhciBvPW5ldyBuLk1hdGhOb2RlKFwibWF0aFwiLFtsXSk7cmV0dXJuIHUoW1wia2F0ZXgtbWF0aG1sXCJdLFtvXSl9O3QuZXhwb3J0cz1kfSx7XCIuL1BhcnNlRXJyb3JcIjo2LFwiLi9idWlsZENvbW1vblwiOjEwLFwiLi9mb250TWV0cmljc1wiOjE3LFwiLi9tYXRoTUxUcmVlXCI6MjAsXCIuL3N5bWJvbHNcIjoyMyxcIi4vdXRpbHNcIjoyNX1dLDEzOltmdW5jdGlvbihlLHQscil7dmFyIGE9ZShcIi4vYnVpbGRIVE1MXCIpO3ZhciBpPWUoXCIuL2J1aWxkTWF0aE1MXCIpO3ZhciBuPWUoXCIuL2J1aWxkQ29tbW9uXCIpO3ZhciBzPWUoXCIuL09wdGlvbnNcIik7dmFyIGw9ZShcIi4vU2V0dGluZ3NcIik7dmFyIG89ZShcIi4vU3R5bGVcIik7dmFyIHU9bi5tYWtlU3Bhbjt2YXIgcD1mdW5jdGlvbihlLHQscil7cj1yfHxuZXcgbCh7fSk7dmFyIG49by5URVhUO2lmKHIuZGlzcGxheU1vZGUpe249by5ESVNQTEFZfXZhciBwPW5ldyBzKHtzdHlsZTpuLHNpemU6XCJzaXplNVwifSk7dmFyIGg9aShlLHQscCk7dmFyIGM9YShlLHApO3ZhciB2PXUoW1wia2F0ZXhcIl0sW2gsY10pO2lmKHIuZGlzcGxheU1vZGUpe3JldHVybiB1KFtcImthdGV4LWRpc3BsYXlcIl0sW3ZdKX1lbHNle3JldHVybiB2fX07dC5leHBvcnRzPXB9LHtcIi4vT3B0aW9uc1wiOjUsXCIuL1NldHRpbmdzXCI6OCxcIi4vU3R5bGVcIjo5LFwiLi9idWlsZENvbW1vblwiOjEwLFwiLi9idWlsZEhUTUxcIjoxMSxcIi4vYnVpbGRNYXRoTUxcIjoxMn1dLDE0OltmdW5jdGlvbihlLHQscil7dmFyIGE9ZShcIi4vUGFyc2VFcnJvclwiKTt2YXIgaT1lKFwiLi9TdHlsZVwiKTt2YXIgbj1lKFwiLi9idWlsZENvbW1vblwiKTt2YXIgcz1lKFwiLi9mb250TWV0cmljc1wiKTt2YXIgbD1lKFwiLi9zeW1ib2xzXCIpO3ZhciBvPWUoXCIuL3V0aWxzXCIpO3ZhciB1PW4ubWFrZVNwYW47dmFyIHA9ZnVuY3Rpb24oZSx0KXtpZihsLm1hdGhbZV0mJmwubWF0aFtlXS5yZXBsYWNlKXtyZXR1cm4gcy5nZXRDaGFyYWN0ZXJNZXRyaWNzKGwubWF0aFtlXS5yZXBsYWNlLHQpfWVsc2V7cmV0dXJuIHMuZ2V0Q2hhcmFjdGVyTWV0cmljcyhlLHQpfX07dmFyIGg9ZnVuY3Rpb24oZSx0LHIsYSl7cmV0dXJuIG4ubWFrZVN5bWJvbChlLFwiU2l6ZVwiK3QrXCItUmVndWxhclwiLHIsYSl9O3ZhciBjPWZ1bmN0aW9uKGUsdCxyKXt2YXIgYT11KFtcInN0eWxlLXdyYXBcIixyLnN0eWxlLnJlc2V0KCksdC5jbHMoKV0sW2VdLHIpO3ZhciBpPXQuc2l6ZU11bHRpcGxpZXIvci5zdHlsZS5zaXplTXVsdGlwbGllcjthLmhlaWdodCo9aTthLmRlcHRoKj1pO2EubWF4Rm9udFNpemU9dC5zaXplTXVsdGlwbGllcjtyZXR1cm4gYX07dmFyIHY9ZnVuY3Rpb24oZSx0LHIsYSxpKXt2YXIgcz1uLm1ha2VTeW1ib2woZSxcIk1haW4tUmVndWxhclwiLGksYSk7dmFyIGw9YyhzLHQsYSk7aWYocil7dmFyIG89KDEtYS5zdHlsZS5zaXplTXVsdGlwbGllci90LnNpemVNdWx0aXBsaWVyKSphLnN0eWxlLm1ldHJpY3MuYXhpc0hlaWdodDtsLnN0eWxlLnRvcD1vK1wiZW1cIjtsLmhlaWdodC09bztsLmRlcHRoKz1vfXJldHVybiBsfTt2YXIgZj1mdW5jdGlvbihlLHQscixhLG4pe3ZhciBzPWgoZSx0LG4sYSk7dmFyIGw9Yyh1KFtcImRlbGltc2l6aW5nXCIsXCJzaXplXCIrdF0sW3NdLGEpLGkuVEVYVCxhKTtpZihyKXt2YXIgbz0oMS1hLnN0eWxlLnNpemVNdWx0aXBsaWVyKSphLnN0eWxlLm1ldHJpY3MuYXhpc0hlaWdodDtsLnN0eWxlLnRvcD1vK1wiZW1cIjtsLmhlaWdodC09bztsLmRlcHRoKz1vfXJldHVybiBsfTt2YXIgbT1mdW5jdGlvbihlLHQscil7dmFyIGE7aWYodD09PVwiU2l6ZTEtUmVndWxhclwiKXthPVwiZGVsaW0tc2l6ZTFcIn1lbHNlIGlmKHQ9PT1cIlNpemU0LVJlZ3VsYXJcIil7YT1cImRlbGltLXNpemU0XCJ9dmFyIGk9dShbXCJkZWxpbXNpemluZ2lubmVyXCIsYV0sW3UoW10sW24ubWFrZVN5bWJvbChlLHQscildKV0pO3JldHVybnt0eXBlOlwiZWxlbVwiLGVsZW06aX19O3ZhciBkPWZ1bmN0aW9uKGUsdCxyLGEscyl7dmFyIGw7dmFyIG87dmFyIGg7dmFyIHY7bD1oPXY9ZTtvPW51bGw7dmFyIGY9XCJTaXplMS1SZWd1bGFyXCI7aWYoZT09PVwiXFxcXHVwYXJyb3dcIil7aD12PVwiXFx1MjNkMFwifWVsc2UgaWYoZT09PVwiXFxcXFVwYXJyb3dcIil7aD12PVwiXFx1MjAxNlwifWVsc2UgaWYoZT09PVwiXFxcXGRvd25hcnJvd1wiKXtsPWg9XCJcXHUyM2QwXCJ9ZWxzZSBpZihlPT09XCJcXFxcRG93bmFycm93XCIpe2w9aD1cIlxcdTIwMTZcIn1lbHNlIGlmKGU9PT1cIlxcXFx1cGRvd25hcnJvd1wiKXtsPVwiXFxcXHVwYXJyb3dcIjtoPVwiXFx1MjNkMFwiO3Y9XCJcXFxcZG93bmFycm93XCJ9ZWxzZSBpZihlPT09XCJcXFxcVXBkb3duYXJyb3dcIil7bD1cIlxcXFxVcGFycm93XCI7aD1cIlxcdTIwMTZcIjt2PVwiXFxcXERvd25hcnJvd1wifWVsc2UgaWYoZT09PVwiW1wifHxlPT09XCJcXFxcbGJyYWNrXCIpe2w9XCJcXHUyM2ExXCI7aD1cIlxcdTIzYTJcIjt2PVwiXFx1MjNhM1wiO2Y9XCJTaXplNC1SZWd1bGFyXCJ9ZWxzZSBpZihlPT09XCJdXCJ8fGU9PT1cIlxcXFxyYnJhY2tcIil7bD1cIlxcdTIzYTRcIjtoPVwiXFx1MjNhNVwiO3Y9XCJcXHUyM2E2XCI7Zj1cIlNpemU0LVJlZ3VsYXJcIn1lbHNlIGlmKGU9PT1cIlxcXFxsZmxvb3JcIil7aD1sPVwiXFx1MjNhMlwiO3Y9XCJcXHUyM2EzXCI7Zj1cIlNpemU0LVJlZ3VsYXJcIn1lbHNlIGlmKGU9PT1cIlxcXFxsY2VpbFwiKXtsPVwiXFx1MjNhMVwiO2g9dj1cIlxcdTIzYTJcIjtmPVwiU2l6ZTQtUmVndWxhclwifWVsc2UgaWYoZT09PVwiXFxcXHJmbG9vclwiKXtoPWw9XCJcXHUyM2E1XCI7dj1cIlxcdTIzYTZcIjtmPVwiU2l6ZTQtUmVndWxhclwifWVsc2UgaWYoZT09PVwiXFxcXHJjZWlsXCIpe2w9XCJcXHUyM2E0XCI7aD12PVwiXFx1MjNhNVwiO2Y9XCJTaXplNC1SZWd1bGFyXCJ9ZWxzZSBpZihlPT09XCIoXCIpe2w9XCJcXHUyMzliXCI7aD1cIlxcdTIzOWNcIjt2PVwiXFx1MjM5ZFwiO2Y9XCJTaXplNC1SZWd1bGFyXCJ9ZWxzZSBpZihlPT09XCIpXCIpe2w9XCJcXHUyMzllXCI7aD1cIlxcdTIzOWZcIjt2PVwiXFx1MjNhMFwiO2Y9XCJTaXplNC1SZWd1bGFyXCJ9ZWxzZSBpZihlPT09XCJcXFxce1wifHxlPT09XCJcXFxcbGJyYWNlXCIpe2w9XCJcXHUyM2E3XCI7bz1cIlxcdTIzYThcIjt2PVwiXFx1MjNhOVwiO2g9XCJcXHUyM2FhXCI7Zj1cIlNpemU0LVJlZ3VsYXJcIn1lbHNlIGlmKGU9PT1cIlxcXFx9XCJ8fGU9PT1cIlxcXFxyYnJhY2VcIil7bD1cIlxcdTIzYWJcIjtvPVwiXFx1MjNhY1wiO3Y9XCJcXHUyM2FkXCI7aD1cIlxcdTIzYWFcIjtmPVwiU2l6ZTQtUmVndWxhclwifWVsc2UgaWYoZT09PVwiXFxcXGxncm91cFwiKXtsPVwiXFx1MjNhN1wiO3Y9XCJcXHUyM2E5XCI7aD1cIlxcdTIzYWFcIjtmPVwiU2l6ZTQtUmVndWxhclwifWVsc2UgaWYoZT09PVwiXFxcXHJncm91cFwiKXtsPVwiXFx1MjNhYlwiO3Y9XCJcXHUyM2FkXCI7aD1cIlxcdTIzYWFcIjtmPVwiU2l6ZTQtUmVndWxhclwifWVsc2UgaWYoZT09PVwiXFxcXGxtb3VzdGFjaGVcIil7bD1cIlxcdTIzYTdcIjt2PVwiXFx1MjNhZFwiO2g9XCJcXHUyM2FhXCI7Zj1cIlNpemU0LVJlZ3VsYXJcIn1lbHNlIGlmKGU9PT1cIlxcXFxybW91c3RhY2hlXCIpe2w9XCJcXHUyM2FiXCI7dj1cIlxcdTIzYTlcIjtoPVwiXFx1MjNhYVwiO2Y9XCJTaXplNC1SZWd1bGFyXCJ9ZWxzZSBpZihlPT09XCJcXFxcc3VyZFwiKXtsPVwiXFx1ZTAwMVwiO3Y9XCJcXHUyM2I3XCI7aD1cIlxcdWUwMDBcIjtmPVwiU2l6ZTQtUmVndWxhclwifXZhciBkPXAobCxmKTt2YXIgZz1kLmhlaWdodCtkLmRlcHRoO3ZhciB5PXAoaCxmKTt2YXIgeD15LmhlaWdodCt5LmRlcHRoO3ZhciBiPXAodixmKTt2YXIgdz1iLmhlaWdodCtiLmRlcHRoO3ZhciBrPTA7dmFyIHo9MTtpZihvIT09bnVsbCl7dmFyIFM9cChvLGYpO2s9Uy5oZWlnaHQrUy5kZXB0aDt6PTJ9dmFyIE09Zyt3K2s7dmFyIFQ9TWF0aC5jZWlsKCh0LU0pLyh6KngpKTt2YXIgQT1NK1Qqeip4O3ZhciBOPWEuc3R5bGUubWV0cmljcy5heGlzSGVpZ2h0O2lmKHIpe04qPWEuc3R5bGUuc2l6ZU11bHRpcGxpZXJ9dmFyIHE9QS8yLU47dmFyIFI9W107Ui5wdXNoKG0odixmLHMpKTt2YXIgQztpZihvPT09bnVsbCl7Zm9yKEM9MDtDPFQ7QysrKXtSLnB1c2gobShoLGYscykpfX1lbHNle2ZvcihDPTA7QzxUO0MrKyl7Ui5wdXNoKG0oaCxmLHMpKX1SLnB1c2gobShvLGYscykpO2ZvcihDPTA7QzxUO0MrKyl7Ui5wdXNoKG0oaCxmLHMpKX19Ui5wdXNoKG0obCxmLHMpKTt2YXIgRT1uLm1ha2VWTGlzdChSLFwiYm90dG9tXCIscSxhKTtyZXR1cm4gYyh1KFtcImRlbGltc2l6aW5nXCIsXCJtdWx0XCJdLFtFXSxhKSxpLlRFWFQsYSl9O3ZhciBnPVtcIihcIixcIilcIixcIltcIixcIlxcXFxsYnJhY2tcIixcIl1cIixcIlxcXFxyYnJhY2tcIixcIlxcXFx7XCIsXCJcXFxcbGJyYWNlXCIsXCJcXFxcfVwiLFwiXFxcXHJicmFjZVwiLFwiXFxcXGxmbG9vclwiLFwiXFxcXHJmbG9vclwiLFwiXFxcXGxjZWlsXCIsXCJcXFxccmNlaWxcIixcIlxcXFxzdXJkXCJdO3ZhciB5PVtcIlxcXFx1cGFycm93XCIsXCJcXFxcZG93bmFycm93XCIsXCJcXFxcdXBkb3duYXJyb3dcIixcIlxcXFxVcGFycm93XCIsXCJcXFxcRG93bmFycm93XCIsXCJcXFxcVXBkb3duYXJyb3dcIixcInxcIixcIlxcXFx8XCIsXCJcXFxcdmVydFwiLFwiXFxcXFZlcnRcIixcIlxcXFxsdmVydFwiLFwiXFxcXHJ2ZXJ0XCIsXCJcXFxcbFZlcnRcIixcIlxcXFxyVmVydFwiLFwiXFxcXGxncm91cFwiLFwiXFxcXHJncm91cFwiLFwiXFxcXGxtb3VzdGFjaGVcIixcIlxcXFxybW91c3RhY2hlXCJdO3ZhciB4PVtcIjxcIixcIj5cIixcIlxcXFxsYW5nbGVcIixcIlxcXFxyYW5nbGVcIixcIi9cIixcIlxcXFxiYWNrc2xhc2hcIixcIlxcXFxsdFwiLFwiXFxcXGd0XCJdO3ZhciBiPVswLDEuMiwxLjgsMi40LDNdO3ZhciB3PWZ1bmN0aW9uKGUsdCxyLGkpe2lmKGU9PT1cIjxcInx8ZT09PVwiXFxcXGx0XCIpe2U9XCJcXFxcbGFuZ2xlXCJ9ZWxzZSBpZihlPT09XCI+XCJ8fGU9PT1cIlxcXFxndFwiKXtlPVwiXFxcXHJhbmdsZVwifWlmKG8uY29udGFpbnMoZyxlKXx8by5jb250YWlucyh4LGUpKXtyZXR1cm4gZihlLHQsZmFsc2UscixpKX1lbHNlIGlmKG8uY29udGFpbnMoeSxlKSl7cmV0dXJuIGQoZSxiW3RdLGZhbHNlLHIsaSl9ZWxzZXt0aHJvdyBuZXcgYShcIklsbGVnYWwgZGVsaW1pdGVyOiAnXCIrZStcIidcIil9fTt2YXIgaz1be3R5cGU6XCJzbWFsbFwiLHN0eWxlOmkuU0NSSVBUU0NSSVBUfSx7dHlwZTpcInNtYWxsXCIsc3R5bGU6aS5TQ1JJUFR9LHt0eXBlOlwic21hbGxcIixzdHlsZTppLlRFWFR9LHt0eXBlOlwibGFyZ2VcIixzaXplOjF9LHt0eXBlOlwibGFyZ2VcIixzaXplOjJ9LHt0eXBlOlwibGFyZ2VcIixzaXplOjN9LHt0eXBlOlwibGFyZ2VcIixzaXplOjR9XTt2YXIgej1be3R5cGU6XCJzbWFsbFwiLHN0eWxlOmkuU0NSSVBUU0NSSVBUfSx7dHlwZTpcInNtYWxsXCIsc3R5bGU6aS5TQ1JJUFR9LHt0eXBlOlwic21hbGxcIixzdHlsZTppLlRFWFR9LHt0eXBlOlwic3RhY2tcIn1dO3ZhciBTPVt7dHlwZTpcInNtYWxsXCIsc3R5bGU6aS5TQ1JJUFRTQ1JJUFR9LHt0eXBlOlwic21hbGxcIixzdHlsZTppLlNDUklQVH0se3R5cGU6XCJzbWFsbFwiLHN0eWxlOmkuVEVYVH0se3R5cGU6XCJsYXJnZVwiLHNpemU6MX0se3R5cGU6XCJsYXJnZVwiLHNpemU6Mn0se3R5cGU6XCJsYXJnZVwiLHNpemU6M30se3R5cGU6XCJsYXJnZVwiLHNpemU6NH0se3R5cGU6XCJzdGFja1wifV07dmFyIE09ZnVuY3Rpb24oZSl7aWYoZS50eXBlPT09XCJzbWFsbFwiKXtyZXR1cm5cIk1haW4tUmVndWxhclwifWVsc2UgaWYoZS50eXBlPT09XCJsYXJnZVwiKXtyZXR1cm5cIlNpemVcIitlLnNpemUrXCItUmVndWxhclwifWVsc2UgaWYoZS50eXBlPT09XCJzdGFja1wiKXtyZXR1cm5cIlNpemU0LVJlZ3VsYXJcIn19O3ZhciBUPWZ1bmN0aW9uKGUsdCxyLGEpe3ZhciBpPU1hdGgubWluKDIsMy1hLnN0eWxlLnNpemUpO2Zvcih2YXIgbj1pO248ci5sZW5ndGg7bisrKXtpZihyW25dLnR5cGU9PT1cInN0YWNrXCIpe2JyZWFrfXZhciBzPXAoZSxNKHJbbl0pKTt2YXIgbD1zLmhlaWdodCtzLmRlcHRoO2lmKHJbbl0udHlwZT09PVwic21hbGxcIil7bCo9cltuXS5zdHlsZS5zaXplTXVsdGlwbGllcn1pZihsPnQpe3JldHVybiByW25dfX1yZXR1cm4gcltyLmxlbmd0aC0xXX07dmFyIEE9ZnVuY3Rpb24oZSx0LHIsYSxpKXtpZihlPT09XCI8XCJ8fGU9PT1cIlxcXFxsdFwiKXtlPVwiXFxcXGxhbmdsZVwifWVsc2UgaWYoZT09PVwiPlwifHxlPT09XCJcXFxcZ3RcIil7ZT1cIlxcXFxyYW5nbGVcIn12YXIgbjtpZihvLmNvbnRhaW5zKHgsZSkpe249a31lbHNlIGlmKG8uY29udGFpbnMoZyxlKSl7bj1TfWVsc2V7bj16fXZhciBzPVQoZSx0LG4sYSk7aWYocy50eXBlPT09XCJzbWFsbFwiKXtyZXR1cm4gdihlLHMuc3R5bGUscixhLGkpfWVsc2UgaWYocy50eXBlPT09XCJsYXJnZVwiKXtyZXR1cm4gZihlLHMuc2l6ZSxyLGEsaSl9ZWxzZSBpZihzLnR5cGU9PT1cInN0YWNrXCIpe3JldHVybiBkKGUsdCxyLGEsaSl9fTt2YXIgTj1mdW5jdGlvbihlLHQscixhLGkpe3ZhciBuPWEuc3R5bGUubWV0cmljcy5heGlzSGVpZ2h0KmEuc3R5bGUuc2l6ZU11bHRpcGxpZXI7dmFyIGw9OTAxO3ZhciBvPTUvcy5tZXRyaWNzLnB0UGVyRW07dmFyIHU9TWF0aC5tYXgodC1uLHIrbik7dmFyIHA9TWF0aC5tYXgodS81MDAqbCwyKnUtbyk7cmV0dXJuIEEoZSxwLHRydWUsYSxpKX07dC5leHBvcnRzPXtzaXplZERlbGltOncsY3VzdG9tU2l6ZWREZWxpbTpBLGxlZnRSaWdodERlbGltOk59fSx7XCIuL1BhcnNlRXJyb3JcIjo2LFwiLi9TdHlsZVwiOjksXCIuL2J1aWxkQ29tbW9uXCI6MTAsXCIuL2ZvbnRNZXRyaWNzXCI6MTcsXCIuL3N5bWJvbHNcIjoyMyxcIi4vdXRpbHNcIjoyNX1dLDE1OltmdW5jdGlvbihlLHQscil7dmFyIGE9ZShcIi4vdW5pY29kZVJlZ2V4ZXNcIik7dmFyIGk9ZShcIi4vdXRpbHNcIik7dmFyIG49ZnVuY3Rpb24oZSl7ZT1lLnNsaWNlKCk7Zm9yKHZhciB0PWUubGVuZ3RoLTE7dD49MDt0LS0pe2lmKCFlW3RdKXtlLnNwbGljZSh0LDEpfX1yZXR1cm4gZS5qb2luKFwiIFwiKX07ZnVuY3Rpb24gcyhlLHQscil7dGhpcy5jbGFzc2VzPWV8fFtdO3RoaXMuY2hpbGRyZW49dHx8W107dGhpcy5oZWlnaHQ9MDt0aGlzLmRlcHRoPTA7dGhpcy5tYXhGb250U2l6ZT0wO3RoaXMuc3R5bGU9e307dGhpcy5hdHRyaWJ1dGVzPXt9O2lmKHIpe2lmKHIuc3R5bGUuaXNUaWdodCgpKXt0aGlzLmNsYXNzZXMucHVzaChcIm10aWdodFwiKX1pZihyLmdldENvbG9yKCkpe3RoaXMuc3R5bGUuY29sb3I9ci5nZXRDb2xvcigpfX19cy5wcm90b3R5cGUuc2V0QXR0cmlidXRlPWZ1bmN0aW9uKGUsdCl7dGhpcy5hdHRyaWJ1dGVzW2VdPXR9O3MucHJvdG90eXBlLnRvTm9kZT1mdW5jdGlvbigpe3ZhciBlPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIpO2UuY2xhc3NOYW1lPW4odGhpcy5jbGFzc2VzKTtmb3IodmFyIHQgaW4gdGhpcy5zdHlsZSl7aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHRoaXMuc3R5bGUsdCkpe2Uuc3R5bGVbdF09dGhpcy5zdHlsZVt0XX19Zm9yKHZhciByIGluIHRoaXMuYXR0cmlidXRlcyl7aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHRoaXMuYXR0cmlidXRlcyxyKSl7ZS5zZXRBdHRyaWJ1dGUocix0aGlzLmF0dHJpYnV0ZXNbcl0pfX1mb3IodmFyIGE9MDthPHRoaXMuY2hpbGRyZW4ubGVuZ3RoO2ErKyl7ZS5hcHBlbmRDaGlsZCh0aGlzLmNoaWxkcmVuW2FdLnRvTm9kZSgpKX1yZXR1cm4gZX07cy5wcm90b3R5cGUudG9NYXJrdXA9ZnVuY3Rpb24oKXt2YXIgZT1cIjxzcGFuXCI7aWYodGhpcy5jbGFzc2VzLmxlbmd0aCl7ZSs9JyBjbGFzcz1cIic7ZSs9aS5lc2NhcGUobih0aGlzLmNsYXNzZXMpKTtlKz0nXCInfXZhciB0PVwiXCI7Zm9yKHZhciByIGluIHRoaXMuc3R5bGUpe2lmKHRoaXMuc3R5bGUuaGFzT3duUHJvcGVydHkocikpe3QrPWkuaHlwaGVuYXRlKHIpK1wiOlwiK3RoaXMuc3R5bGVbcl0rXCI7XCJ9fWlmKHQpe2UrPScgc3R5bGU9XCInK2kuZXNjYXBlKHQpKydcIid9Zm9yKHZhciBhIGluIHRoaXMuYXR0cmlidXRlcyl7aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHRoaXMuYXR0cmlidXRlcyxhKSl7ZSs9XCIgXCIrYSsnPVwiJztlKz1pLmVzY2FwZSh0aGlzLmF0dHJpYnV0ZXNbYV0pO2UrPSdcIid9fWUrPVwiPlwiO2Zvcih2YXIgcz0wO3M8dGhpcy5jaGlsZHJlbi5sZW5ndGg7cysrKXtlKz10aGlzLmNoaWxkcmVuW3NdLnRvTWFya3VwKCl9ZSs9XCI8L3NwYW4+XCI7cmV0dXJuIGV9O2Z1bmN0aW9uIGwoZSx0KXt0aGlzLmNoaWxkcmVuPWV8fFtdO3RoaXMuaGVpZ2h0PTA7dGhpcy5kZXB0aD0wO3RoaXMubWF4Rm9udFNpemU9MDtpZih0KXtmb3IodmFyIHI9MDtyPHRoaXMuY2hpbGRyZW4ubGVuZ3RoO3IrKyl7Zm9yKHZhciBhPTA7YTx0Lmxlbmd0aDthKyspe3RoaXMuY2hpbGRyZW5bcl0uY2xhc3Nlcy5wdXNoKHRbYV0pfX19dGhpcy5jbGFzc2VzPXR8fFtdfWwucHJvdG90eXBlLnRvTm9kZT1mdW5jdGlvbigpe3ZhciBlPWRvY3VtZW50LmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKTtmb3IodmFyIHQ9MDt0PHRoaXMuY2hpbGRyZW4ubGVuZ3RoO3QrKyl7ZS5hcHBlbmRDaGlsZCh0aGlzLmNoaWxkcmVuW3RdLnRvTm9kZSgpKX1yZXR1cm4gZX07bC5wcm90b3R5cGUudG9NYXJrdXA9ZnVuY3Rpb24oKXt2YXIgZT1cIlwiO2Zvcih2YXIgdD0wO3Q8dGhpcy5jaGlsZHJlbi5sZW5ndGg7dCsrKXtlKz10aGlzLmNoaWxkcmVuW3RdLnRvTWFya3VwKCl9cmV0dXJuIGV9O3ZhciBvPXtcIlxceGVlXCI6XCJcXHUwMTMxXFx1MDMwMlwiLFwiXFx4ZWZcIjpcIlxcdTAxMzFcXHUwMzA4XCIsXCJcXHhlZFwiOlwiXFx1MDEzMVxcdTAzMDFcIixcIlxceGVjXCI6XCJcXHUwMTMxXFx1MDMwMFwifTtmdW5jdGlvbiB1KGUsdCxyLGksbixzLGwpe3RoaXMudmFsdWU9ZXx8XCJcIjt0aGlzLmhlaWdodD10fHwwO3RoaXMuZGVwdGg9cnx8MDt0aGlzLml0YWxpYz1pfHwwO3RoaXMuc2tldz1ufHwwO3RoaXMuY2xhc3Nlcz1zfHxbXTt0aGlzLnN0eWxlPWx8fHt9O3RoaXMubWF4Rm9udFNpemU9MDtpZihhLmNqa1JlZ2V4LnRlc3QoZSkpe2lmKGEuaGFuZ3VsUmVnZXgudGVzdChlKSl7dGhpcy5jbGFzc2VzLnB1c2goXCJoYW5ndWxfZmFsbGJhY2tcIil9ZWxzZXt0aGlzLmNsYXNzZXMucHVzaChcImNqa19mYWxsYmFja1wiKX19aWYoL1tcXHhlZVxceGVmXFx4ZWRcXHhlY10vLnRlc3QodGhpcy52YWx1ZSkpe3RoaXMudmFsdWU9b1t0aGlzLnZhbHVlXX19dS5wcm90b3R5cGUudG9Ob2RlPWZ1bmN0aW9uKCl7dmFyIGU9ZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUodGhpcy52YWx1ZSk7dmFyIHQ9bnVsbDtpZih0aGlzLml0YWxpYz4wKXt0PWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIpO3Quc3R5bGUubWFyZ2luUmlnaHQ9dGhpcy5pdGFsaWMrXCJlbVwifWlmKHRoaXMuY2xhc3Nlcy5sZW5ndGg+MCl7dD10fHxkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3BhblwiKTt0LmNsYXNzTmFtZT1uKHRoaXMuY2xhc3Nlcyl9Zm9yKHZhciByIGluIHRoaXMuc3R5bGUpe2lmKHRoaXMuc3R5bGUuaGFzT3duUHJvcGVydHkocikpe3Q9dHx8ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNwYW5cIik7dC5zdHlsZVtyXT10aGlzLnN0eWxlW3JdfX1pZih0KXt0LmFwcGVuZENoaWxkKGUpO3JldHVybiB0fWVsc2V7cmV0dXJuIGV9fTt1LnByb3RvdHlwZS50b01hcmt1cD1mdW5jdGlvbigpe3ZhciBlPWZhbHNlO3ZhciB0PVwiPHNwYW5cIjtpZih0aGlzLmNsYXNzZXMubGVuZ3RoKXtlPXRydWU7dCs9JyBjbGFzcz1cIic7dCs9aS5lc2NhcGUobih0aGlzLmNsYXNzZXMpKTt0Kz0nXCInfXZhciByPVwiXCI7aWYodGhpcy5pdGFsaWM+MCl7cis9XCJtYXJnaW4tcmlnaHQ6XCIrdGhpcy5pdGFsaWMrXCJlbTtcIn1mb3IodmFyIGEgaW4gdGhpcy5zdHlsZSl7aWYodGhpcy5zdHlsZS5oYXNPd25Qcm9wZXJ0eShhKSl7cis9aS5oeXBoZW5hdGUoYSkrXCI6XCIrdGhpcy5zdHlsZVthXStcIjtcIn19aWYocil7ZT10cnVlO3QrPScgc3R5bGU9XCInK2kuZXNjYXBlKHIpKydcIid9dmFyIHM9aS5lc2NhcGUodGhpcy52YWx1ZSk7aWYoZSl7dCs9XCI+XCI7dCs9czt0Kz1cIjwvc3Bhbj5cIjtyZXR1cm4gdH1lbHNle3JldHVybiBzfX07dC5leHBvcnRzPXtzcGFuOnMsZG9jdW1lbnRGcmFnbWVudDpsLHN5bWJvbE5vZGU6dX19LHtcIi4vdW5pY29kZVJlZ2V4ZXNcIjoyNCxcIi4vdXRpbHNcIjoyNX1dLDE2OltmdW5jdGlvbihlLHQscil7dmFyIGE9ZShcIi4vcGFyc2VEYXRhXCIpO3ZhciBpPWUoXCIuL1BhcnNlRXJyb3JcIik7dmFyIG49ZShcIi4vU3R5bGVcIik7dmFyIHM9YS5QYXJzZU5vZGU7ZnVuY3Rpb24gbChlLHQpe3ZhciByPVtdO3ZhciBhPVtyXTt2YXIgbj1bXTt3aGlsZSh0cnVlKXt2YXIgbD1lLnBhcnNlRXhwcmVzc2lvbihmYWxzZSxudWxsKTtyLnB1c2gobmV3IHMoXCJvcmRncm91cFwiLGwsZS5tb2RlKSk7dmFyIG89ZS5uZXh0VG9rZW4udGV4dDtpZihvPT09XCImXCIpe2UuY29uc3VtZSgpfWVsc2UgaWYobz09PVwiXFxcXGVuZFwiKXticmVha31lbHNlIGlmKG89PT1cIlxcXFxcXFxcXCJ8fG89PT1cIlxcXFxjclwiKXt2YXIgdT1lLnBhcnNlRnVuY3Rpb24oKTtuLnB1c2godS52YWx1ZS5zaXplKTtyPVtdO2EucHVzaChyKX1lbHNle3Rocm93IG5ldyBpKFwiRXhwZWN0ZWQgJiBvciBcXFxcXFxcXCBvciBcXFxcZW5kXCIsZS5uZXh0VG9rZW4pfX10LmJvZHk9YTt0LnJvd0dhcHM9bjtyZXR1cm4gbmV3IHModC50eXBlLHQsZS5tb2RlKX1mdW5jdGlvbiBvKGUscixhKXtpZih0eXBlb2YgZT09PVwic3RyaW5nXCIpe2U9W2VdfWlmKHR5cGVvZiByPT09XCJudW1iZXJcIil7cj17bnVtQXJnczpyfX12YXIgaT17bnVtQXJnczpyLm51bUFyZ3N8fDAsYXJnVHlwZXM6ci5hcmdUeXBlcyxncmVlZGluZXNzOjEsYWxsb3dlZEluVGV4dDohIXIuYWxsb3dlZEluVGV4dCxudW1PcHRpb25hbEFyZ3M6ci5udW1PcHRpb25hbEFyZ3N8fDAsaGFuZGxlcjphfTtmb3IodmFyIG49MDtuPGUubGVuZ3RoOysrbil7dC5leHBvcnRzW2Vbbl1dPWl9fW8oXCJhcnJheVwiLHtudW1BcmdzOjF9LGZ1bmN0aW9uKGUsdCl7dmFyIHI9dFswXTtyPXIudmFsdWUubWFwP3IudmFsdWU6W3JdO3ZhciBhPXIubWFwKGZ1bmN0aW9uKGUpe3ZhciB0PWUudmFsdWU7aWYoXCJsY3JcIi5pbmRleE9mKHQpIT09LTEpe3JldHVybnt0eXBlOlwiYWxpZ25cIixhbGlnbjp0fX1lbHNlIGlmKHQ9PT1cInxcIil7cmV0dXJue3R5cGU6XCJzZXBhcmF0b3JcIixzZXBhcmF0b3I6XCJ8XCJ9fXRocm93IG5ldyBpKFwiVW5rbm93biBjb2x1bW4gYWxpZ25tZW50OiBcIitlLnZhbHVlLGUpfSk7dmFyIG49e3R5cGU6XCJhcnJheVwiLGNvbHM6YSxoc2tpcEJlZm9yZUFuZEFmdGVyOnRydWV9O249bChlLnBhcnNlcixuKTtyZXR1cm4gbn0pO28oW1wibWF0cml4XCIsXCJwbWF0cml4XCIsXCJibWF0cml4XCIsXCJCbWF0cml4XCIsXCJ2bWF0cml4XCIsXCJWbWF0cml4XCJdLHt9LGZ1bmN0aW9uKGUpe3ZhciB0PXttYXRyaXg6bnVsbCxwbWF0cml4OltcIihcIixcIilcIl0sYm1hdHJpeDpbXCJbXCIsXCJdXCJdLEJtYXRyaXg6W1wiXFxcXHtcIixcIlxcXFx9XCJdLHZtYXRyaXg6W1wifFwiLFwifFwiXSxWbWF0cml4OltcIlxcXFxWZXJ0XCIsXCJcXFxcVmVydFwiXX1bZS5lbnZOYW1lXTt2YXIgcj17dHlwZTpcImFycmF5XCIsaHNraXBCZWZvcmVBbmRBZnRlcjpmYWxzZX07cj1sKGUucGFyc2VyLHIpO2lmKHQpe3I9bmV3IHMoXCJsZWZ0cmlnaHRcIix7Ym9keTpbcl0sbGVmdDp0WzBdLHJpZ2h0OnRbMV19LGUubW9kZSl9cmV0dXJuIHJ9KTtvKFwiY2FzZXNcIix7fSxmdW5jdGlvbihlKXt2YXIgdD17dHlwZTpcImFycmF5XCIsYXJyYXlzdHJldGNoOjEuMixjb2xzOlt7dHlwZTpcImFsaWduXCIsYWxpZ246XCJsXCIscHJlZ2FwOjAscG9zdGdhcDpuLlRFWFQubWV0cmljcy5xdWFkfSx7dHlwZTpcImFsaWduXCIsYWxpZ246XCJsXCIscHJlZ2FwOjAscG9zdGdhcDowfV19O3Q9bChlLnBhcnNlcix0KTt0PW5ldyBzKFwibGVmdHJpZ2h0XCIse2JvZHk6W3RdLGxlZnQ6XCJcXFxce1wiLHJpZ2h0OlwiLlwifSxlLm1vZGUpO3JldHVybiB0fSk7byhcImFsaWduZWRcIix7fSxmdW5jdGlvbihlKXt2YXIgdD17dHlwZTpcImFycmF5XCIsY29sczpbXX07dD1sKGUucGFyc2VyLHQpO3ZhciByPW5ldyBzKFwib3JkZ3JvdXBcIixbXSxlLm1vZGUpO3ZhciBhPTA7dC52YWx1ZS5ib2R5LmZvckVhY2goZnVuY3Rpb24oZSl7dmFyIHQ7Zm9yKHQ9MTt0PGUubGVuZ3RoO3QrPTIpe2VbdF0udmFsdWUudW5zaGlmdChyKX1pZihhPGUubGVuZ3RoKXthPWUubGVuZ3RofX0pO2Zvcih2YXIgaT0wO2k8YTsrK2kpe3ZhciBuPVwiclwiO3ZhciBvPTA7aWYoaSUyPT09MSl7bj1cImxcIn1lbHNlIGlmKGk+MCl7bz0yfXQudmFsdWUuY29sc1tpXT17dHlwZTpcImFsaWduXCIsYWxpZ246bixwcmVnYXA6byxwb3N0Z2FwOjB9fXJldHVybiB0fSl9LHtcIi4vUGFyc2VFcnJvclwiOjYsXCIuL1N0eWxlXCI6OSxcIi4vcGFyc2VEYXRhXCI6MjF9XSwxNzpbZnVuY3Rpb24oZSx0LHIpe3ZhciBhPWUoXCIuL1N0eWxlXCIpO3ZhciBpPWUoXCIuL3VuaWNvZGVSZWdleGVzXCIpLmNqa1JlZ2V4O3ZhciBuPXtzbGFudDpbLjI1LC4yNSwuMjVdLHNwYWNlOlswLDAsMF0sc3RyZXRjaDpbMCwwLDBdLHNocmluazpbMCwwLDBdLHhIZWlnaHQ6Wy40MzEsLjQzMSwuNDMxXSxxdWFkOlsxLDEuMTcxLDEuNDcyXSxleHRyYVNwYWNlOlswLDAsMF0sbnVtMTpbLjY3NywuNzMyLC45MjVdLG51bTI6Wy4zOTQsLjM4NCwuMzg3XSxudW0zOlsuNDQ0LC40NzEsLjUwNF0sZGVub20xOlsuNjg2LC43NTIsMS4wMjVdLGRlbm9tMjpbLjM0NSwuMzQ0LC41MzJdLHN1cDE6Wy40MTMsLjUwMywuNTA0XSxzdXAyOlsuMzYzLC40MzEsLjQwNF0sc3VwMzpbLjI4OSwuMjg2LC4yOTRdLHN1YjE6Wy4xNSwuMTQzLC4yXSxzdWIyOlsuMjQ3LC4yODYsLjRdLHN1cERyb3A6Wy4zODYsLjM1MywuNDk0XSxzdWJEcm9wOlsuMDUsLjA3MSwuMV0sZGVsaW0xOlsyLjM5LDEuNywxLjk4XSxkZWxpbTI6WzEuMDEsMS4xNTcsMS40Ml0sYXhpc0hlaWdodDpbLjI1LC4yNSwuMjVdfTt2YXIgcz0wO3ZhciBsPTA7dmFyIG89MDt2YXIgdT0wO3ZhciBwPS40MzE7dmFyIGg9MTt2YXIgYz0wO3ZhciB2PS4wNDt2YXIgZj0uMTExO3ZhciBtPS4xNjY7dmFyIGQ9LjI7dmFyIGc9LjY7dmFyIHk9LjE7dmFyIHg9MTA7dmFyIGI9Mi94O3ZhciB3PXtkZWZhdWx0UnVsZVRoaWNrbmVzczp2LGJpZ09wU3BhY2luZzE6ZixiaWdPcFNwYWNpbmcyOm0sYmlnT3BTcGFjaW5nMzpkLGJpZ09wU3BhY2luZzQ6ZyxiaWdPcFNwYWNpbmc1OnkscHRQZXJFbTp4LGRvdWJsZVJ1bGVTZXA6Yn07dmFyIGs9ZShcIi4vZm9udE1ldHJpY3NEYXRhXCIpO3ZhciB6PXtcIlxceGMwXCI6XCJBXCIsXCJcXHhjMVwiOlwiQVwiLFwiXFx4YzJcIjpcIkFcIixcIlxceGMzXCI6XCJBXCIsXCJcXHhjNFwiOlwiQVwiLFwiXFx4YzVcIjpcIkFcIixcIlxceGM2XCI6XCJBXCIsXCJcXHhjN1wiOlwiQ1wiLFwiXFx4YzhcIjpcIkVcIixcIlxceGM5XCI6XCJFXCIsXCJcXHhjYVwiOlwiRVwiLFwiXFx4Y2JcIjpcIkVcIixcIlxceGNjXCI6XCJJXCIsXCJcXHhjZFwiOlwiSVwiLFwiXFx4Y2VcIjpcIklcIixcIlxceGNmXCI6XCJJXCIsXCJcXHhkMFwiOlwiRFwiLFwiXFx4ZDFcIjpcIk5cIixcIlxceGQyXCI6XCJPXCIsXCJcXHhkM1wiOlwiT1wiLFwiXFx4ZDRcIjpcIk9cIixcIlxceGQ1XCI6XCJPXCIsXCJcXHhkNlwiOlwiT1wiLFwiXFx4ZDhcIjpcIk9cIixcIlxceGQ5XCI6XCJVXCIsXCJcXHhkYVwiOlwiVVwiLFwiXFx4ZGJcIjpcIlVcIixcIlxceGRjXCI6XCJVXCIsXCJcXHhkZFwiOlwiWVwiLFwiXFx4ZGVcIjpcIm9cIixcIlxceGRmXCI6XCJCXCIsXCJcXHhlMFwiOlwiYVwiLFwiXFx4ZTFcIjpcImFcIixcIlxceGUyXCI6XCJhXCIsXCJcXHhlM1wiOlwiYVwiLFwiXFx4ZTRcIjpcImFcIixcIlxceGU1XCI6XCJhXCIsXCJcXHhlNlwiOlwiYVwiLFwiXFx4ZTdcIjpcImNcIixcIlxceGU4XCI6XCJlXCIsXCJcXHhlOVwiOlwiZVwiLFwiXFx4ZWFcIjpcImVcIixcIlxceGViXCI6XCJlXCIsXCJcXHhlY1wiOlwiaVwiLFwiXFx4ZWRcIjpcImlcIixcIlxceGVlXCI6XCJpXCIsXCJcXHhlZlwiOlwiaVwiLFwiXFx4ZjBcIjpcImRcIixcIlxceGYxXCI6XCJuXCIsXCJcXHhmMlwiOlwib1wiLFwiXFx4ZjNcIjpcIm9cIixcIlxceGY0XCI6XCJvXCIsXCJcXHhmNVwiOlwib1wiLFwiXFx4ZjZcIjpcIm9cIixcIlxceGY4XCI6XCJvXCIsXCJcXHhmOVwiOlwidVwiLFwiXFx4ZmFcIjpcInVcIixcIlxceGZiXCI6XCJ1XCIsXCJcXHhmY1wiOlwidVwiLFwiXFx4ZmRcIjpcInlcIixcIlxceGZlXCI6XCJvXCIsXCJcXHhmZlwiOlwieVwiLFwiXFx1MDQxMFwiOlwiQVwiLFwiXFx1MDQxMVwiOlwiQlwiLFwiXFx1MDQxMlwiOlwiQlwiLFwiXFx1MDQxM1wiOlwiRlwiLFwiXFx1MDQxNFwiOlwiQVwiLFwiXFx1MDQxNVwiOlwiRVwiLFwiXFx1MDQxNlwiOlwiS1wiLFwiXFx1MDQxN1wiOlwiM1wiLFwiXFx1MDQxOFwiOlwiTlwiLFwiXFx1MDQxOVwiOlwiTlwiLFwiXFx1MDQxYVwiOlwiS1wiLFwiXFx1MDQxYlwiOlwiTlwiLFwiXFx1MDQxY1wiOlwiTVwiLFwiXFx1MDQxZFwiOlwiSFwiLFwiXFx1MDQxZVwiOlwiT1wiLFwiXFx1MDQxZlwiOlwiTlwiLFwiXFx1MDQyMFwiOlwiUFwiLFwiXFx1MDQyMVwiOlwiQ1wiLFwiXFx1MDQyMlwiOlwiVFwiLFwiXFx1MDQyM1wiOlwieVwiLFwiXFx1MDQyNFwiOlwiT1wiLFwiXFx1MDQyNVwiOlwiWFwiLFwiXFx1MDQyNlwiOlwiVVwiLFwiXFx1MDQyN1wiOlwiaFwiLFwiXFx1MDQyOFwiOlwiV1wiLFwiXFx1MDQyOVwiOlwiV1wiLFwiXFx1MDQyYVwiOlwiQlwiLFwiXFx1MDQyYlwiOlwiWFwiLFwiXFx1MDQyY1wiOlwiQlwiLFwiXFx1MDQyZFwiOlwiM1wiLFwiXFx1MDQyZVwiOlwiWFwiLFwiXFx1MDQyZlwiOlwiUlwiLFwiXFx1MDQzMFwiOlwiYVwiLFwiXFx1MDQzMVwiOlwiYlwiLFwiXFx1MDQzMlwiOlwiYVwiLFwiXFx1MDQzM1wiOlwiclwiLFwiXFx1MDQzNFwiOlwieVwiLFwiXFx1MDQzNVwiOlwiZVwiLFwiXFx1MDQzNlwiOlwibVwiLFwiXFx1MDQzN1wiOlwiZVwiLFwiXFx1MDQzOFwiOlwiblwiLFwiXFx1MDQzOVwiOlwiblwiLFwiXFx1MDQzYVwiOlwiblwiLFwiXFx1MDQzYlwiOlwiblwiLFwiXFx1MDQzY1wiOlwibVwiLFwiXFx1MDQzZFwiOlwiblwiLFwiXFx1MDQzZVwiOlwib1wiLFwiXFx1MDQzZlwiOlwiblwiLFwiXFx1MDQ0MFwiOlwicFwiLFwiXFx1MDQ0MVwiOlwiY1wiLFwiXFx1MDQ0MlwiOlwib1wiLFwiXFx1MDQ0M1wiOlwieVwiLFwiXFx1MDQ0NFwiOlwiYlwiLFwiXFx1MDQ0NVwiOlwieFwiLFwiXFx1MDQ0NlwiOlwiblwiLFwiXFx1MDQ0N1wiOlwiblwiLFwiXFx1MDQ0OFwiOlwid1wiLFwiXFx1MDQ0OVwiOlwid1wiLFwiXFx1MDQ0YVwiOlwiYVwiLFwiXFx1MDQ0YlwiOlwibVwiLFwiXFx1MDQ0Y1wiOlwiYVwiLFwiXFx1MDQ0ZFwiOlwiZVwiLFwiXFx1MDQ0ZVwiOlwibVwiLFwiXFx1MDQ0ZlwiOlwiclwifTt2YXIgUz1mdW5jdGlvbihlLHQpe3ZhciByPWUuY2hhckNvZGVBdCgwKTtpZihlWzBdaW4geil7cj16W2VbMF1dLmNoYXJDb2RlQXQoMCl9ZWxzZSBpZihpLnRlc3QoZVswXSkpe3I9XCJNXCIuY2hhckNvZGVBdCgwKX12YXIgYT1rW3RdW3JdO2lmKGEpe3JldHVybntkZXB0aDphWzBdLGhlaWdodDphWzFdLGl0YWxpYzphWzJdLHNrZXc6YVszXSx3aWR0aDphWzRdfX19O3QuZXhwb3J0cz17bWV0cmljczp3LHNpZ21hczpuLGdldENoYXJhY3Rlck1ldHJpY3M6U319LHtcIi4vU3R5bGVcIjo5LFwiLi9mb250TWV0cmljc0RhdGFcIjoxOCxcIi4vdW5pY29kZVJlZ2V4ZXNcIjoyNH1dLDE4OltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPXtcIkFNUy1SZWd1bGFyXCI6ezY1OlswLC42ODg4OSwwLDBdLDY2OlswLC42ODg4OSwwLDBdLDY3OlswLC42ODg4OSwwLDBdLDY4OlswLC42ODg4OSwwLDBdLDY5OlswLC42ODg4OSwwLDBdLDcwOlswLC42ODg4OSwwLDBdLDcxOlswLC42ODg4OSwwLDBdLDcyOlswLC42ODg4OSwwLDBdLDczOlswLC42ODg4OSwwLDBdLDc0OlsuMTY2NjcsLjY4ODg5LDAsMF0sNzU6WzAsLjY4ODg5LDAsMF0sNzY6WzAsLjY4ODg5LDAsMF0sNzc6WzAsLjY4ODg5LDAsMF0sNzg6WzAsLjY4ODg5LDAsMF0sNzk6Wy4xNjY2NywuNjg4ODksMCwwXSw4MDpbMCwuNjg4ODksMCwwXSw4MTpbLjE2NjY3LC42ODg4OSwwLDBdLDgyOlswLC42ODg4OSwwLDBdLDgzOlswLC42ODg4OSwwLDBdLDg0OlswLC42ODg4OSwwLDBdLDg1OlswLC42ODg4OSwwLDBdLDg2OlswLC42ODg4OSwwLDBdLDg3OlswLC42ODg4OSwwLDBdLDg4OlswLC42ODg4OSwwLDBdLDg5OlswLC42ODg4OSwwLDBdLDkwOlswLC42ODg4OSwwLDBdLDEwNzpbMCwuNjg4ODksMCwwXSwxNjU6WzAsLjY3NSwuMDI1LDBdLDE3NDpbLjE1NTU5LC42OTIyNCwwLDBdLDI0MDpbMCwuNjg4ODksMCwwXSwyOTU6WzAsLjY4ODg5LDAsMF0sNzEwOlswLC44MjUsMCwwXSw3MzI6WzAsLjksMCwwXSw3NzA6WzAsLjgyNSwwLDBdLDc3MTpbMCwuOSwwLDBdLDk4OTpbLjA4MTY3LC41ODE2NywwLDBdLDEwMDg6WzAsLjQzMDU2LC4wNDAyOCwwXSw4MjQ1OlswLC41NDk4NiwwLDBdLDg0NjM6WzAsLjY4ODg5LDAsMF0sODQ4NzpbMCwuNjg4ODksMCwwXSw4NDk4OlswLC42ODg4OSwwLDBdLDg1MDI6WzAsLjY4ODg5LDAsMF0sODUwMzpbMCwuNjg4ODksMCwwXSw4NTA0OlswLC42ODg4OSwwLDBdLDg1MTM6WzAsLjY4ODg5LDAsMF0sODU5MjpbLS4wMzU5OCwuNDY0MDIsMCwwXSw4NTk0OlstLjAzNTk4LC40NjQwMiwwLDBdLDg2MDI6Wy0uMTMzMTMsLjM2Njg3LDAsMF0sODYwMzpbLS4xMzMxMywuMzY2ODcsMCwwXSw4NjA2OlsuMDEzNTQsLjUyMjM5LDAsMF0sODYwODpbLjAxMzU0LC41MjIzOSwwLDBdLDg2MTA6Wy4wMTM1NCwuNTIyMzksMCwwXSw4NjExOlsuMDEzNTQsLjUyMjM5LDAsMF0sODYxOTpbMCwuNTQ5ODYsMCwwXSw4NjIwOlswLC41NDk4NiwwLDBdLDg2MjE6Wy0uMTMzMTMsLjM3Nzg4LDAsMF0sODYyMjpbLS4xMzMxMywuMzY2ODcsMCwwXSw4NjI0OlswLC42OTIyNCwwLDBdLDg2MjU6WzAsLjY5MjI0LDAsMF0sODYzMDpbMCwuNDMwNTYsMCwwXSw4NjMxOlswLC40MzA1NiwwLDBdLDg2MzQ6Wy4wODE5OCwuNTgxOTgsMCwwXSw4NjM1OlsuMDgxOTgsLjU4MTk4LDAsMF0sODYzODpbLjE5NDQ0LC42OTIyNCwwLDBdLDg2Mzk6Wy4xOTQ0NCwuNjkyMjQsMCwwXSw4NjQyOlsuMTk0NDQsLjY5MjI0LDAsMF0sODY0MzpbLjE5NDQ0LC42OTIyNCwwLDBdLDg2NDQ6Wy4xODA4LC42NzUsMCwwXSw4NjQ2OlsuMTgwOCwuNjc1LDAsMF0sODY0NzpbLjE4MDgsLjY3NSwwLDBdLDg2NDg6Wy4xOTQ0NCwuNjkyMjQsMCwwXSw4NjQ5OlsuMTgwOCwuNjc1LDAsMF0sODY1MDpbLjE5NDQ0LC42OTIyNCwwLDBdLDg2NTE6Wy4wMTM1NCwuNTIyMzksMCwwXSw4NjUyOlsuMDEzNTQsLjUyMjM5LDAsMF0sODY1MzpbLS4xMzMxMywuMzY2ODcsMCwwXSw4NjU0OlstLjEzMzEzLC4zNjY4NywwLDBdLDg2NTU6Wy0uMTMzMTMsLjM2Njg3LDAsMF0sODY2NjpbLjEzNjY3LC42MzY2NywwLDBdLDg2Njc6Wy4xMzY2NywuNjM2NjcsMCwwXSw4NjY5OlstLjEzMzEzLC4zNzc4OCwwLDBdLDg2NzI6Wy0uMDY0LC40MzcsMCwwXSw4Njc0OlstLjA2NCwuNDM3LDAsMF0sODcwNTpbMCwuODI1LDAsMF0sODcwODpbMCwuNjg4ODksMCwwXSw4NzA5OlsuMDgxNjcsLjU4MTY3LDAsMF0sODcxNzpbMCwuNDMwNTYsMCwwXSw4NzIyOlstLjAzNTk4LC40NjQwMiwwLDBdLDg3MjQ6Wy4wODE5OCwuNjkyMjQsMCwwXSw4NzI2OlsuMDgxNjcsLjU4MTY3LDAsMF0sODczMzpbMCwuNjkyMjQsMCwwXSw4NzM2OlswLC42OTIyNCwwLDBdLDg3Mzc6WzAsLjY5MjI0LDAsMF0sODczODpbLjAzNTE3LC41MjIzOSwwLDBdLDg3Mzk6Wy4wODE2NywuNTgxNjcsMCwwXSw4NzQwOlsuMjUxNDIsLjc0MTExLDAsMF0sODc0MTpbLjA4MTY3LC41ODE2NywwLDBdLDg3NDI6Wy4yNTE0MiwuNzQxMTEsMCwwXSw4NzU2OlswLC42OTIyNCwwLDBdLDg3NTc6WzAsLjY5MjI0LDAsMF0sODc2NDpbLS4xMzMxMywuMzY2ODcsMCwwXSw4NzY1OlstLjEzMzEzLC4zNzc4OCwwLDBdLDg3Njk6Wy0uMTMzMTMsLjM2Njg3LDAsMF0sODc3MDpbLS4wMzYyNSwuNDYzNzUsMCwwXSw4Nzc0OlsuMzAyNzQsLjc5MzgzLDAsMF0sODc3NjpbLS4wMTY4OCwuNDgzMTIsMCwwXSw4Nzc4OlsuMDgxNjcsLjU4MTY3LDAsMF0sODc4MjpbLjA2MDYyLC41NDk4NiwwLDBdLDg3ODM6Wy4wNjA2MiwuNTQ5ODYsMCwwXSw4Nzg1OlsuMDgxOTgsLjU4MTk4LDAsMF0sODc4NjpbLjA4MTk4LC41ODE5OCwwLDBdLDg3ODc6Wy4wODE5OCwuNTgxOTgsMCwwXSw4NzkwOlswLC42OTIyNCwwLDBdLDg3OTE6Wy4yMjk1OCwuNzI5NTgsMCwwXSw4Nzk2OlsuMDgxOTgsLjkxNjY3LDAsMF0sODgwNjpbLjI1NTgzLC43NTU4MywwLDBdLDg4MDc6Wy4yNTU4MywuNzU1ODMsMCwwXSw4ODA4OlsuMjUxNDIsLjc1NzI2LDAsMF0sODgwOTpbLjI1MTQyLC43NTcyNiwwLDBdLDg4MTI6Wy4yNTU4MywuNzU1ODMsMCwwXSw4ODE0OlsuMjA1NzYsLjcwNTc2LDAsMF0sODgxNTpbLjIwNTc2LC43MDU3NiwwLDBdLDg4MTY6Wy4zMDI3NCwuNzkzODMsMCwwXSw4ODE3OlsuMzAyNzQsLjc5MzgzLDAsMF0sODgxODpbLjIyOTU4LC43Mjk1OCwwLDBdLDg4MTk6Wy4yMjk1OCwuNzI5NTgsMCwwXSw4ODIyOlsuMTgwOCwuNjc1LDAsMF0sODgyMzpbLjE4MDgsLjY3NSwwLDBdLDg4Mjg6Wy4xMzY2NywuNjM2NjcsMCwwXSw4ODI5OlsuMTM2NjcsLjYzNjY3LDAsMF0sODgzMDpbLjIyOTU4LC43Mjk1OCwwLDBdLDg4MzE6Wy4yMjk1OCwuNzI5NTgsMCwwXSw4ODMyOlsuMjA1NzYsLjcwNTc2LDAsMF0sODgzMzpbLjIwNTc2LC43MDU3NiwwLDBdLDg4NDA6Wy4zMDI3NCwuNzkzODMsMCwwXSw4ODQxOlsuMzAyNzQsLjc5MzgzLDAsMF0sODg0MjpbLjEzNTk3LC42MzU5NywwLDBdLDg4NDM6Wy4xMzU5NywuNjM1OTcsMCwwXSw4ODQ3OlsuMDM1MTcsLjU0OTg2LDAsMF0sODg0ODpbLjAzNTE3LC41NDk4NiwwLDBdLDg4NTg6Wy4wODE5OCwuNTgxOTgsMCwwXSw4ODU5OlsuMDgxOTgsLjU4MTk4LDAsMF0sODg2MTpbLjA4MTk4LC41ODE5OCwwLDBdLDg4NjI6WzAsLjY3NSwwLDBdLDg4NjM6WzAsLjY3NSwwLDBdLDg4NjQ6WzAsLjY3NSwwLDBdLDg4NjU6WzAsLjY3NSwwLDBdLDg4NzI6WzAsLjY5MjI0LDAsMF0sODg3MzpbMCwuNjkyMjQsMCwwXSw4ODc0OlswLC42OTIyNCwwLDBdLDg4NzY6WzAsLjY4ODg5LDAsMF0sODg3NzpbMCwuNjg4ODksMCwwXSw4ODc4OlswLC42ODg4OSwwLDBdLDg4Nzk6WzAsLjY4ODg5LDAsMF0sODg4MjpbLjAzNTE3LC41NDk4NiwwLDBdLDg4ODM6Wy4wMzUxNywuNTQ5ODYsMCwwXSw4ODg0OlsuMTM2NjcsLjYzNjY3LDAsMF0sODg4NTpbLjEzNjY3LC42MzY2NywwLDBdLDg4ODg6WzAsLjU0OTg2LDAsMF0sODg5MDpbLjE5NDQ0LC40MzA1NiwwLDBdLDg4OTE6Wy4xOTQ0NCwuNjkyMjQsMCwwXSw4ODkyOlsuMTk0NDQsLjY5MjI0LDAsMF0sODkwMTpbMCwuNTQ5ODYsMCwwXSw4OTAzOlsuMDgxNjcsLjU4MTY3LDAsMF0sODkwNTpbLjA4MTY3LC41ODE2NywwLDBdLDg5MDY6Wy4wODE2NywuNTgxNjcsMCwwXSw4OTA3OlswLC42OTIyNCwwLDBdLDg5MDg6WzAsLjY5MjI0LDAsMF0sODkwOTpbLS4wMzU5OCwuNDY0MDIsMCwwXSw4OTEwOlswLC41NDk4NiwwLDBdLDg5MTE6WzAsLjU0OTg2LDAsMF0sODkxMjpbLjAzNTE3LC41NDk4NiwwLDBdLDg5MTM6Wy4wMzUxNywuNTQ5ODYsMCwwXSw4OTE0OlswLC41NDk4NiwwLDBdLDg5MTU6WzAsLjU0OTg2LDAsMF0sODkxNjpbMCwuNjkyMjQsMCwwXSw4OTE4OlsuMDM5MSwuNTM5MSwwLDBdLDg5MTk6Wy4wMzkxLC41MzkxLDAsMF0sODkyMDpbLjAzNTE3LC41NDk4NiwwLDBdLDg5MjE6Wy4wMzUxNywuNTQ5ODYsMCwwXSw4OTIyOlsuMzg1NjksLjg4NTY5LDAsMF0sODkyMzpbLjM4NTY5LC44ODU2OSwwLDBdLDg5MjY6Wy4xMzY2NywuNjM2NjcsMCwwXSw4OTI3OlsuMTM2NjcsLjYzNjY3LDAsMF0sODkyODpbLjMwMjc0LC43OTM4MywwLDBdLDg5Mjk6Wy4zMDI3NCwuNzkzODMsMCwwXSw4OTM0OlsuMjMyMjIsLjc0MTExLDAsMF0sODkzNTpbLjIzMjIyLC43NDExMSwwLDBdLDg5MzY6Wy4yMzIyMiwuNzQxMTEsMCwwXSw4OTM3OlsuMjMyMjIsLjc0MTExLDAsMF0sODkzODpbLjIwNTc2LC43MDU3NiwwLDBdLDg5Mzk6Wy4yMDU3NiwuNzA1NzYsMCwwXSw4OTQwOlsuMzAyNzQsLjc5MzgzLDAsMF0sODk0MTpbLjMwMjc0LC43OTM4MywwLDBdLDg5OTQ6Wy4xOTQ0NCwuNjkyMjQsMCwwXSw4OTk1OlsuMTk0NDQsLjY5MjI0LDAsMF0sOTQxNjpbLjE1NTU5LC42OTIyNCwwLDBdLDk0ODQ6WzAsLjY5MjI0LDAsMF0sOTQ4ODpbMCwuNjkyMjQsMCwwXSw5NDkyOlswLC4zNzc4OCwwLDBdLDk0OTY6WzAsLjM3Nzg4LDAsMF0sOTU4NTpbLjE5NDQ0LC42ODg4OSwwLDBdLDk1ODY6Wy4xOTQ0NCwuNzQxMTEsMCwwXSw5NjMyOlswLC42NzUsMCwwXSxcbjk2MzM6WzAsLjY3NSwwLDBdLDk2NTA6WzAsLjU0OTg2LDAsMF0sOTY1MTpbMCwuNTQ5ODYsMCwwXSw5NjU0OlsuMDM1MTcsLjU0OTg2LDAsMF0sOTY2MDpbMCwuNTQ5ODYsMCwwXSw5NjYxOlswLC41NDk4NiwwLDBdLDk2NjQ6Wy4wMzUxNywuNTQ5ODYsMCwwXSw5Njc0OlsuMTExMTEsLjY5MjI0LDAsMF0sOTczMzpbLjE5NDQ0LC42OTIyNCwwLDBdLDEwMDAzOlswLC42OTIyNCwwLDBdLDEwMDE2OlswLC42OTIyNCwwLDBdLDEwNzMxOlsuMTExMTEsLjY5MjI0LDAsMF0sMTA4NDY6Wy4xOTQ0NCwuNzU1ODMsMCwwXSwxMDg3NzpbLjEzNjY3LC42MzY2NywwLDBdLDEwODc4OlsuMTM2NjcsLjYzNjY3LDAsMF0sMTA4ODU6Wy4yNTU4MywuNzU1ODMsMCwwXSwxMDg4NjpbLjI1NTgzLC43NTU4MywwLDBdLDEwODg3OlsuMTM1OTcsLjYzNTk3LDAsMF0sMTA4ODg6Wy4xMzU5NywuNjM1OTcsMCwwXSwxMDg4OTpbLjI2MTY3LC43NTcyNiwwLDBdLDEwODkwOlsuMjYxNjcsLjc1NzI2LDAsMF0sMTA4OTE6Wy40ODI1NiwuOTgyNTYsMCwwXSwxMDg5MjpbLjQ4MjU2LC45ODI1NiwwLDBdLDEwOTAxOlsuMTM2NjcsLjYzNjY3LDAsMF0sMTA5MDI6Wy4xMzY2NywuNjM2NjcsMCwwXSwxMDkzMzpbLjI1MTQyLC43NTcyNiwwLDBdLDEwOTM0OlsuMjUxNDIsLjc1NzI2LDAsMF0sMTA5MzU6Wy4yNjE2NywuNzU3MjYsMCwwXSwxMDkzNjpbLjI2MTY3LC43NTcyNiwwLDBdLDEwOTM3OlsuMjYxNjcsLjc1NzI2LDAsMF0sMTA5Mzg6Wy4yNjE2NywuNzU3MjYsMCwwXSwxMDk0OTpbLjI1NTgzLC43NTU4MywwLDBdLDEwOTUwOlsuMjU1ODMsLjc1NTgzLDAsMF0sMTA5NTU6Wy4yODQ4MSwuNzkzODMsMCwwXSwxMDk1NjpbLjI4NDgxLC43OTM4MywwLDBdLDU3MzUwOlsuMDgxNjcsLjU4MTY3LDAsMF0sNTczNTE6Wy4wODE2NywuNTgxNjcsMCwwXSw1NzM1MjpbLjA4MTY3LC41ODE2NywwLDBdLDU3MzUzOlswLC40MzA1NiwuMDQwMjgsMF0sNTczNTY6Wy4yNTE0MiwuNzU3MjYsMCwwXSw1NzM1NzpbLjI1MTQyLC43NTcyNiwwLDBdLDU3MzU4OlsuNDE5NTEsLjkxOTUxLDAsMF0sNTczNTk6Wy4zMDI3NCwuNzkzODMsMCwwXSw1NzM2MDpbLjMwMjc0LC43OTM4MywwLDBdLDU3MzYxOlsuNDE5NTEsLjkxOTUxLDAsMF0sNTczNjY6Wy4yNTE0MiwuNzU3MjYsMCwwXSw1NzM2NzpbLjI1MTQyLC43NTcyNiwwLDBdLDU3MzY4OlsuMjUxNDIsLjc1NzI2LDAsMF0sNTczNjk6Wy4yNTE0MiwuNzU3MjYsMCwwXSw1NzM3MDpbLjEzNTk3LC42MzU5NywwLDBdLDU3MzcxOlsuMTM1OTcsLjYzNTk3LDAsMF19LFwiQ2FsaWdyYXBoaWMtUmVndWxhclwiOns0ODpbMCwuNDMwNTYsMCwwXSw0OTpbMCwuNDMwNTYsMCwwXSw1MDpbMCwuNDMwNTYsMCwwXSw1MTpbLjE5NDQ0LC40MzA1NiwwLDBdLDUyOlsuMTk0NDQsLjQzMDU2LDAsMF0sNTM6Wy4xOTQ0NCwuNDMwNTYsMCwwXSw1NDpbMCwuNjQ0NDQsMCwwXSw1NTpbLjE5NDQ0LC40MzA1NiwwLDBdLDU2OlswLC42NDQ0NCwwLDBdLDU3OlsuMTk0NDQsLjQzMDU2LDAsMF0sNjU6WzAsLjY4MzMzLDAsLjE5NDQ1XSw2NjpbMCwuNjgzMzMsLjAzMDQxLC4xMzg4OV0sNjc6WzAsLjY4MzMzLC4wNTgzNCwuMTM4ODldLDY4OlswLC42ODMzMywuMDI3NzgsLjA4MzM0XSw2OTpbMCwuNjgzMzMsLjA4OTQ0LC4xMTExMV0sNzA6WzAsLjY4MzMzLC4wOTkzMSwuMTExMTFdLDcxOlsuMDk3MjIsLjY4MzMzLC4wNTkzLC4xMTExMV0sNzI6WzAsLjY4MzMzLC4wMDk2NSwuMTExMTFdLDczOlswLC42ODMzMywuMDczODIsMF0sNzQ6Wy4wOTcyMiwuNjgzMzMsLjE4NDcyLC4xNjY2N10sNzU6WzAsLjY4MzMzLC4wMTQ0NSwuMDU1NTZdLDc2OlswLC42ODMzMywwLC4xMzg4OV0sNzc6WzAsLjY4MzMzLDAsLjEzODg5XSw3ODpbMCwuNjgzMzMsLjE0NzM2LC4wODMzNF0sNzk6WzAsLjY4MzMzLC4wMjc3OCwuMTExMTFdLDgwOlswLC42ODMzMywuMDgyMjIsLjA4MzM0XSw4MTpbLjA5NzIyLC42ODMzMywwLC4xMTExMV0sODI6WzAsLjY4MzMzLDAsLjA4MzM0XSw4MzpbMCwuNjgzMzMsLjA3NSwuMTM4ODldLDg0OlswLC42ODMzMywuMjU0MTcsMF0sODU6WzAsLjY4MzMzLC4wOTkzMSwuMDgzMzRdLDg2OlswLC42ODMzMywuMDgyMjIsMF0sODc6WzAsLjY4MzMzLC4wODIyMiwuMDgzMzRdLDg4OlswLC42ODMzMywuMTQ2NDMsLjEzODg5XSw4OTpbLjA5NzIyLC42ODMzMywuMDgyMjIsLjA4MzM0XSw5MDpbMCwuNjgzMzMsLjA3OTQ0LC4xMzg4OV19LFwiRnJha3R1ci1SZWd1bGFyXCI6ezMzOlswLC42OTE0MSwwLDBdLDM0OlswLC42OTE0MSwwLDBdLDM4OlswLC42OTE0MSwwLDBdLDM5OlswLC42OTE0MSwwLDBdLDQwOlsuMjQ5ODIsLjc0OTQ3LDAsMF0sNDE6Wy4yNDk4MiwuNzQ5NDcsMCwwXSw0MjpbMCwuNjIxMTksMCwwXSw0MzpbLjA4MzE5LC41ODI4MywwLDBdLDQ0OlswLC4xMDgwMywwLDBdLDQ1OlsuMDgzMTksLjU4MjgzLDAsMF0sNDY6WzAsLjEwODAzLDAsMF0sNDc6Wy4yNDk4MiwuNzQ5NDcsMCwwXSw0ODpbMCwuNDc1MzQsMCwwXSw0OTpbMCwuNDc1MzQsMCwwXSw1MDpbMCwuNDc1MzQsMCwwXSw1MTpbLjE4OTA2LC40NzUzNCwwLDBdLDUyOlsuMTg5MDYsLjQ3NTM0LDAsMF0sNTM6Wy4xODkwNiwuNDc1MzQsMCwwXSw1NDpbMCwuNjkxNDEsMCwwXSw1NTpbLjE4OTA2LC40NzUzNCwwLDBdLDU2OlswLC42OTE0MSwwLDBdLDU3OlsuMTg5MDYsLjQ3NTM0LDAsMF0sNTg6WzAsLjQ3NTM0LDAsMF0sNTk6Wy4xMjYwNCwuNDc1MzQsMCwwXSw2MTpbLS4xMzA5OSwuMzY4NjYsMCwwXSw2MzpbMCwuNjkxNDEsMCwwXSw2NTpbMCwuNjkxNDEsMCwwXSw2NjpbMCwuNjkxNDEsMCwwXSw2NzpbMCwuNjkxNDEsMCwwXSw2ODpbMCwuNjkxNDEsMCwwXSw2OTpbMCwuNjkxNDEsMCwwXSw3MDpbLjEyNjA0LC42OTE0MSwwLDBdLDcxOlswLC42OTE0MSwwLDBdLDcyOlsuMDYzMDIsLjY5MTQxLDAsMF0sNzM6WzAsLjY5MTQxLDAsMF0sNzQ6Wy4xMjYwNCwuNjkxNDEsMCwwXSw3NTpbMCwuNjkxNDEsMCwwXSw3NjpbMCwuNjkxNDEsMCwwXSw3NzpbMCwuNjkxNDEsMCwwXSw3ODpbMCwuNjkxNDEsMCwwXSw3OTpbMCwuNjkxNDEsMCwwXSw4MDpbLjE4OTA2LC42OTE0MSwwLDBdLDgxOlsuMDM3ODEsLjY5MTQxLDAsMF0sODI6WzAsLjY5MTQxLDAsMF0sODM6WzAsLjY5MTQxLDAsMF0sODQ6WzAsLjY5MTQxLDAsMF0sODU6WzAsLjY5MTQxLDAsMF0sODY6WzAsLjY5MTQxLDAsMF0sODc6WzAsLjY5MTQxLDAsMF0sODg6WzAsLjY5MTQxLDAsMF0sODk6Wy4xODkwNiwuNjkxNDEsMCwwXSw5MDpbLjEyNjA0LC42OTE0MSwwLDBdLDkxOlsuMjQ5ODIsLjc0OTQ3LDAsMF0sOTM6Wy4yNDk4MiwuNzQ5NDcsMCwwXSw5NDpbMCwuNjkxNDEsMCwwXSw5NzpbMCwuNDc1MzQsMCwwXSw5ODpbMCwuNjkxNDEsMCwwXSw5OTpbMCwuNDc1MzQsMCwwXSwxMDA6WzAsLjYyMTE5LDAsMF0sMTAxOlswLC40NzUzNCwwLDBdLDEwMjpbLjE4OTA2LC42OTE0MSwwLDBdLDEwMzpbLjE4OTA2LC40NzUzNCwwLDBdLDEwNDpbLjE4OTA2LC42OTE0MSwwLDBdLDEwNTpbMCwuNjkxNDEsMCwwXSwxMDY6WzAsLjY5MTQxLDAsMF0sMTA3OlswLC42OTE0MSwwLDBdLDEwODpbMCwuNjkxNDEsMCwwXSwxMDk6WzAsLjQ3NTM0LDAsMF0sMTEwOlswLC40NzUzNCwwLDBdLDExMTpbMCwuNDc1MzQsMCwwXSwxMTI6Wy4xODkwNiwuNTIzOTYsMCwwXSwxMTM6Wy4xODkwNiwuNDc1MzQsMCwwXSwxMTQ6WzAsLjQ3NTM0LDAsMF0sMTE1OlswLC40NzUzNCwwLDBdLDExNjpbMCwuNjIxMTksMCwwXSwxMTc6WzAsLjQ3NTM0LDAsMF0sMTE4OlswLC41MjM5NiwwLDBdLDExOTpbMCwuNTIzOTYsMCwwXSwxMjA6Wy4xODkwNiwuNDc1MzQsMCwwXSwxMjE6Wy4xODkwNiwuNDc1MzQsMCwwXSwxMjI6Wy4xODkwNiwuNDc1MzQsMCwwXSw4MjE2OlswLC42OTE0MSwwLDBdLDgyMTc6WzAsLjY5MTQxLDAsMF0sNTgxMTI6WzAsLjYyMTE5LDAsMF0sNTgxMTM6WzAsLjYyMTE5LDAsMF0sNTgxMTQ6Wy4xODkwNiwuNjkxNDEsMCwwXSw1ODExNTpbLjE4OTA2LC42OTE0MSwwLDBdLDU4MTE2OlsuMTg5MDYsLjQ3NTM0LDAsMF0sNTgxMTc6WzAsLjY5MTQxLDAsMF0sNTgxMTg6WzAsLjYyMTE5LDAsMF0sNTgxMTk6WzAsLjQ3NTM0LDAsMF19LFwiTWFpbi1Cb2xkXCI6ezMzOlswLC42OTQ0NCwwLDBdLDM0OlswLC42OTQ0NCwwLDBdLDM1OlsuMTk0NDQsLjY5NDQ0LDAsMF0sMzY6Wy4wNTU1NiwuNzUsMCwwXSwzNzpbLjA1NTU2LC43NSwwLDBdLDM4OlswLC42OTQ0NCwwLDBdLDM5OlswLC42OTQ0NCwwLDBdLDQwOlsuMjUsLjc1LDAsMF0sNDE6Wy4yNSwuNzUsMCwwXSw0MjpbMCwuNzUsMCwwXSw0MzpbLjEzMzMzLC42MzMzMywwLDBdLDQ0OlsuMTk0NDQsLjE1NTU2LDAsMF0sNDU6WzAsLjQ0NDQ0LDAsMF0sNDY6WzAsLjE1NTU2LDAsMF0sNDc6Wy4yNSwuNzUsMCwwXSw0ODpbMCwuNjQ0NDQsMCwwXSw0OTpbMCwuNjQ0NDQsMCwwXSw1MDpbMCwuNjQ0NDQsMCwwXSw1MTpbMCwuNjQ0NDQsMCwwXSw1MjpbMCwuNjQ0NDQsMCwwXSw1MzpbMCwuNjQ0NDQsMCwwXSw1NDpbMCwuNjQ0NDQsMCwwXSw1NTpbMCwuNjQ0NDQsMCwwXSw1NjpbMCwuNjQ0NDQsMCwwXSw1NzpbMCwuNjQ0NDQsMCwwXSw1ODpbMCwuNDQ0NDQsMCwwXSw1OTpbLjE5NDQ0LC40NDQ0NCwwLDBdLDYwOlsuMDg1NTYsLjU4NTU2LDAsMF0sNjE6Wy0uMTA4ODksLjM5MTExLDAsMF0sNjI6Wy4wODU1NiwuNTg1NTYsMCwwXSw2MzpbMCwuNjk0NDQsMCwwXSw2NDpbMCwuNjk0NDQsMCwwXSw2NTpbMCwuNjg2MTEsMCwwXSw2NjpbMCwuNjg2MTEsMCwwXSw2NzpbMCwuNjg2MTEsMCwwXSw2ODpbMCwuNjg2MTEsMCwwXSw2OTpbMCwuNjg2MTEsMCwwXSw3MDpbMCwuNjg2MTEsMCwwXSw3MTpbMCwuNjg2MTEsMCwwXSw3MjpbMCwuNjg2MTEsMCwwXSw3MzpbMCwuNjg2MTEsMCwwXSw3NDpbMCwuNjg2MTEsMCwwXSw3NTpbMCwuNjg2MTEsMCwwXSw3NjpbMCwuNjg2MTEsMCwwXSw3NzpbMCwuNjg2MTEsMCwwXSw3ODpbMCwuNjg2MTEsMCwwXSw3OTpbMCwuNjg2MTEsMCwwXSw4MDpbMCwuNjg2MTEsMCwwXSw4MTpbLjE5NDQ0LC42ODYxMSwwLDBdLDgyOlswLC42ODYxMSwwLDBdLDgzOlswLC42ODYxMSwwLDBdLDg0OlswLC42ODYxMSwwLDBdLDg1OlswLC42ODYxMSwwLDBdLDg2OlswLC42ODYxMSwuMDE1OTcsMF0sODc6WzAsLjY4NjExLC4wMTU5NywwXSw4ODpbMCwuNjg2MTEsMCwwXSw4OTpbMCwuNjg2MTEsLjAyODc1LDBdLDkwOlswLC42ODYxMSwwLDBdLDkxOlsuMjUsLjc1LDAsMF0sOTI6Wy4yNSwuNzUsMCwwXSw5MzpbLjI1LC43NSwwLDBdLDk0OlswLC42OTQ0NCwwLDBdLDk1OlsuMzEsLjEzNDQ0LC4wMzE5NCwwXSw5NjpbMCwuNjk0NDQsMCwwXSw5NzpbMCwuNDQ0NDQsMCwwXSw5ODpbMCwuNjk0NDQsMCwwXSw5OTpbMCwuNDQ0NDQsMCwwXSwxMDA6WzAsLjY5NDQ0LDAsMF0sMTAxOlswLC40NDQ0NCwwLDBdLDEwMjpbMCwuNjk0NDQsLjEwOTAzLDBdLDEwMzpbLjE5NDQ0LC40NDQ0NCwuMDE1OTcsMF0sMTA0OlswLC42OTQ0NCwwLDBdLDEwNTpbMCwuNjk0NDQsMCwwXSwxMDY6Wy4xOTQ0NCwuNjk0NDQsMCwwXSwxMDc6WzAsLjY5NDQ0LDAsMF0sMTA4OlswLC42OTQ0NCwwLDBdLDEwOTpbMCwuNDQ0NDQsMCwwXSwxMTA6WzAsLjQ0NDQ0LDAsMF0sMTExOlswLC40NDQ0NCwwLDBdLDExMjpbLjE5NDQ0LC40NDQ0NCwwLDBdLDExMzpbLjE5NDQ0LC40NDQ0NCwwLDBdLDExNDpbMCwuNDQ0NDQsMCwwXSwxMTU6WzAsLjQ0NDQ0LDAsMF0sMTE2OlswLC42MzQ5MiwwLDBdLDExNzpbMCwuNDQ0NDQsMCwwXSwxMTg6WzAsLjQ0NDQ0LC4wMTU5NywwXSwxMTk6WzAsLjQ0NDQ0LC4wMTU5NywwXSwxMjA6WzAsLjQ0NDQ0LDAsMF0sMTIxOlsuMTk0NDQsLjQ0NDQ0LC4wMTU5NywwXSwxMjI6WzAsLjQ0NDQ0LDAsMF0sMTIzOlsuMjUsLjc1LDAsMF0sMTI0OlsuMjUsLjc1LDAsMF0sMTI1OlsuMjUsLjc1LDAsMF0sMTI2OlsuMzUsLjM0NDQ0LDAsMF0sMTY4OlswLC42OTQ0NCwwLDBdLDE3MjpbMCwuNDQ0NDQsMCwwXSwxNzU6WzAsLjU5NjExLDAsMF0sMTc2OlswLC42OTQ0NCwwLDBdLDE3NzpbLjEzMzMzLC42MzMzMywwLDBdLDE4MDpbMCwuNjk0NDQsMCwwXSwyMTU6Wy4xMzMzMywuNjMzMzMsMCwwXSwyNDc6Wy4xMzMzMywuNjMzMzMsMCwwXSwzMDU6WzAsLjQ0NDQ0LDAsMF0sNTY3OlsuMTk0NDQsLjQ0NDQ0LDAsMF0sNzEwOlswLC42OTQ0NCwwLDBdLDcxMTpbMCwuNjMxOTQsMCwwXSw3MTM6WzAsLjU5NjExLDAsMF0sNzE0OlswLC42OTQ0NCwwLDBdLDcxNTpbMCwuNjk0NDQsMCwwXSw3Mjg6WzAsLjY5NDQ0LDAsMF0sNzI5OlswLC42OTQ0NCwwLDBdLDczMDpbMCwuNjk0NDQsMCwwXSw3MzI6WzAsLjY5NDQ0LDAsMF0sNzY4OlswLC42OTQ0NCwwLDBdLDc2OTpbMCwuNjk0NDQsMCwwXSw3NzA6WzAsLjY5NDQ0LDAsMF0sNzcxOlswLC42OTQ0NCwwLDBdLDc3MjpbMCwuNTk2MTEsMCwwXSw3NzQ6WzAsLjY5NDQ0LDAsMF0sNzc1OlswLC42OTQ0NCwwLDBdLDc3NjpbMCwuNjk0NDQsMCwwXSw3Nzg6WzAsLjY5NDQ0LDAsMF0sNzc5OlswLC42OTQ0NCwwLDBdLDc4MDpbMCwuNjMxOTQsMCwwXSw4MjQ6Wy4xOTQ0NCwuNjk0NDQsMCwwXSw5MTU6WzAsLjY4NjExLDAsMF0sOTE2OlswLC42ODYxMSwwLDBdLDkyMDpbMCwuNjg2MTEsMCwwXSw5MjM6WzAsLjY4NjExLDAsMF0sOTI2OlswLC42ODYxMSwwLDBdLDkyODpbMCwuNjg2MTEsMCwwXSw5MzE6WzAsLjY4NjExLDAsMF0sOTMzOlswLC42ODYxMSwwLDBdLDkzNDpbMCwuNjg2MTEsMCwwXSw5MzY6WzAsLjY4NjExLDAsMF0sOTM3OlswLC42ODYxMSwwLDBdLDgyMTE6WzAsLjQ0NDQ0LC4wMzE5NCwwXSw4MjEyOlswLC40NDQ0NCwuMDMxOTQsMF0sODIxNjpbMCwuNjk0NDQsMCwwXSw4MjE3OlswLC42OTQ0NCwwLDBdLDgyMjA6WzAsLjY5NDQ0LDAsMF0sODIyMTpbMCwuNjk0NDQsMCwwXSw4MjI0OlsuMTk0NDQsLjY5NDQ0LDAsMF0sODIyNTpbLjE5NDQ0LC42OTQ0NCwwLDBdLDgyNDI6WzAsLjU1NTU2LDAsMF0sODQwNzpbMCwuNzI0NDQsLjE1NDg2LDBdLDg0NjM6WzAsLjY5NDQ0LDAsMF0sODQ2NTpbMCwuNjk0NDQsMCwwXSw4NDY3OlswLC42OTQ0NCwwLDBdLDg0NzI6Wy4xOTQ0NCwuNDQ0NDQsMCwwXSw4NDc2OlswLC42OTQ0NCwwLDBdLDg1MDE6WzAsLjY5NDQ0LDAsMF0sODU5MjpbLS4xMDg4OSwuMzkxMTEsMCwwXSw4NTkzOlsuMTk0NDQsLjY5NDQ0LDAsMF0sODU5NDpbLS4xMDg4OSwuMzkxMTEsMCwwXSw4NTk1OlsuMTk0NDQsLjY5NDQ0LDAsMF0sODU5NjpbLS4xMDg4OSwuMzkxMTEsMCwwXSw4NTk3OlsuMjUsLjc1LDAsMF0sODU5ODpbLjE5NDQ0LC42OTQ0NCwwLDBdLDg1OTk6Wy4xOTQ0NCwuNjk0NDQsMCwwXSw4NjAwOlsuMTk0NDQsLjY5NDQ0LDAsMF0sODYwMTpbLjE5NDQ0LC42OTQ0NCwwLDBdLDg2MzY6Wy0uMTA4ODksLjM5MTExLDAsMF0sODYzNzpbLS4xMDg4OSwuMzkxMTEsMCwwXSw4NjQwOlstLjEwODg5LC4zOTExMSwwLDBdLDg2NDE6Wy0uMTA4ODksLjM5MTExLDAsMF0sODY1NjpbLS4xMDg4OSwuMzkxMTEsMCwwXSw4NjU3OlsuMTk0NDQsLjY5NDQ0LDAsMF0sODY1ODpbLS4xMDg4OSwuMzkxMTEsMCwwXSw4NjU5OlsuMTk0NDQsLjY5NDQ0LDAsMF0sODY2MDpbLS4xMDg4OSwuMzkxMTEsMCwwXSw4NjYxOlsuMjUsLjc1LDAsMF0sODcwNDpbMCwuNjk0NDQsMCwwXSw4NzA2OlswLC42OTQ0NCwuMDYzODksMF0sODcwNzpbMCwuNjk0NDQsMCwwXSw4NzA5OlsuMDU1NTYsLjc1LDAsMF0sODcxMTpbMCwuNjg2MTEsMCwwXSw4NzEyOlsuMDg1NTYsLjU4NTU2LDAsMF0sODcxNTpbLjA4NTU2LC41ODU1NiwwLDBdLDg3MjI6Wy4xMzMzMywuNjMzMzMsMCwwXSw4NzIzOlsuMTMzMzMsLjYzMzMzLDAsMF0sODcyNTpbLjI1LC43NSwwLDBdLDg3MjY6Wy4yNSwuNzUsMCwwXSw4NzI3OlstLjAyNzc4LC40NzIyMiwwLDBdLDg3Mjg6Wy0uMDI2MzksLjQ3MzYxLDAsMF0sODcyOTpbLS4wMjYzOSwuNDczNjEsMCwwXSw4NzMwOlsuMTgsLjgyLDAsMF0sODczMzpbMCwuNDQ0NDQsMCwwXSw4NzM0OlswLC40NDQ0NCwwLDBdLDg3MzY6WzAsLjY5MjI0LDAsMF0sODczOTpbLjI1LC43NSwwLDBdLDg3NDE6Wy4yNSwuNzUsMCwwXSw4NzQzOlswLC41NTU1NiwwLDBdLDg3NDQ6WzAsLjU1NTU2LDAsMF0sODc0NTpbMCwuNTU1NTYsMCwwXSw4NzQ2OlswLC41NTU1NiwwLDBdLDg3NDc6Wy4xOTQ0NCwuNjk0NDQsLjEyNzc4LDBdLDg3NjQ6Wy0uMTA4ODksLjM5MTExLDAsMF0sODc2ODpbLjE5NDQ0LC42OTQ0NCwwLDBdLDg3NzE6Wy4wMDIyMiwuNTAyMjIsMCwwXSw4Nzc2OlsuMDI0NDQsLjUyNDQ0LDAsMF0sODc4MTpbLjAwMjIyLC41MDIyMiwwLDBdLDg4MDE6Wy4wMDIyMiwuNTAyMjIsMCwwXSw4ODA0OlsuMTk2NjcsLjY5NjY3LDAsMF0sODgwNTpbLjE5NjY3LC42OTY2NywwLDBdLDg4MTA6Wy4wODU1NiwuNTg1NTYsMCwwXSw4ODExOlsuMDg1NTYsLjU4NTU2LDAsMF0sODgyNjpbLjA4NTU2LC41ODU1NiwwLDBdLDg4Mjc6Wy4wODU1NiwuNTg1NTYsMCwwXSw4ODM0OlsuMDg1NTYsLjU4NTU2LDAsMF0sODgzNTpbLjA4NTU2LC41ODU1NiwwLDBdLDg4Mzg6Wy4xOTY2NywuNjk2NjcsMCwwXSw4ODM5OlsuMTk2NjcsLjY5NjY3LDAsMF0sODg0NjpbMCwuNTU1NTYsMCwwXSw4ODQ5OlsuMTk2NjcsLjY5NjY3LDAsMF0sODg1MDpbLjE5NjY3LC42OTY2NywwLDBdLDg4NTE6WzAsLjU1NTU2LDAsMF0sODg1MjpbMCwuNTU1NTYsMCwwXSw4ODUzOlsuMTMzMzMsLjYzMzMzLDAsMF0sODg1NDpbLjEzMzMzLC42MzMzMywwLDBdLDg4NTU6Wy4xMzMzMywuNjMzMzMsMCwwXSw4ODU2OlsuMTMzMzMsLjYzMzMzLDAsMF0sODg1NzpbLjEzMzMzLC42MzMzMywwLDBdLDg4NjY6WzAsLjY5NDQ0LDAsMF0sODg2NzpbMCwuNjk0NDQsMCwwXSw4ODY4OlswLC42OTQ0NCwwLDBdLDg4Njk6WzAsLjY5NDQ0LDAsMF0sODkwMDpbLS4wMjYzOSwuNDczNjEsMCwwXSw4OTAxOlstLjAyNjM5LC40NzM2MSwwLDBdLDg5MDI6Wy0uMDI3NzgsLjQ3MjIyLDAsMF0sODk2ODpbLjI1LC43NSwwLDBdLDg5Njk6Wy4yNSwuNzUsMCwwXSw4OTcwOlsuMjUsLjc1LDAsMF0sODk3MTpbLjI1LC43NSwwLDBdLDg5OTQ6Wy0uMTM4ODksLjM2MTExLDAsMF0sODk5NTpbLS4xMzg4OSwuMzYxMTEsMCwwXSw5NjUxOlsuMTk0NDQsLjY5NDQ0LDAsMF0sOTY1NzpbLS4wMjc3OCwuNDcyMjIsMCwwXSw5NjYxOlsuMTk0NDQsLjY5NDQ0LDAsMF0sOTY2NzpbLS4wMjc3OCwuNDcyMjIsMCwwXSw5NzExOlsuMTk0NDQsLjY5NDQ0LDAsMF0sOTgyNDpbLjEyOTYzLC42OTQ0NCwwLDBdLDk4MjU6Wy4xMjk2MywuNjk0NDQsMCwwXSw5ODI2OlsuMTI5NjMsLjY5NDQ0LDAsMF0sOTgyNzpbLjEyOTYzLC42OTQ0NCwwLDBdLDk4Mzc6WzAsLjc1LDAsMF0sOTgzODpbLjE5NDQ0LC42OTQ0NCwwLDBdLDk4Mzk6Wy4xOTQ0NCwuNjk0NDQsMCwwXSwxMDIxNjpbLjI1LC43NSwwLDBdLDEwMjE3OlsuMjUsLjc1LDAsMF0sMTA4MTU6WzAsLjY4NjExLDAsMF0sMTA5Mjc6Wy4xOTY2NywuNjk2NjcsMCwwXSwxMDkyODpbLjE5NjY3LC42OTY2NywwLDBdfSxcIk1haW4tSXRhbGljXCI6ezMzOlswLC42OTQ0NCwuMTI0MTcsMF0sMzQ6WzAsLjY5NDQ0LC4wNjk2MSwwXSwzNTpbLjE5NDQ0LC42OTQ0NCwuMDY2MTYsMF0sMzc6Wy4wNTU1NiwuNzUsLjEzNjM5LDBdLDM4OlswLC42OTQ0NCwuMDk2OTQsMF0sMzk6WzAsLjY5NDQ0LC4xMjQxNywwXSw0MDpbLjI1LC43NSwuMTYxOTQsMF0sNDE6Wy4yNSwuNzUsLjAzNjk0LDBdLDQyOlswLC43NSwuMTQ5MTcsMF0sNDM6Wy4wNTY2NywuNTYxNjcsLjAzNjk0LDBdLDQ0OlsuMTk0NDQsLjEwNTU2LDAsMF0sNDU6WzAsLjQzMDU2LC4wMjgyNiwwXSw0NjpbMCwuMTA1NTYsMCwwXSw0NzpbLjI1LC43NSwuMTYxOTQsMF0sNDg6WzAsLjY0NDQ0LC4xMzU1NiwwXSw0OTpbMCwuNjQ0NDQsLjEzNTU2LDBdLDUwOlswLC42NDQ0NCwuMTM1NTYsMF0sNTE6WzAsLjY0NDQ0LC4xMzU1NiwwXSw1MjpbLjE5NDQ0LC42NDQ0NCwuMTM1NTYsMF0sNTM6WzAsLjY0NDQ0LC4xMzU1NiwwXSw1NDpbMCwuNjQ0NDQsLjEzNTU2LDBdLDU1OlsuMTk0NDQsLjY0NDQ0LC4xMzU1NiwwXSw1NjpbMCwuNjQ0NDQsLjEzNTU2LDBdLDU3OlswLC42NDQ0NCwuMTM1NTYsMF0sNTg6WzAsLjQzMDU2LC4wNTgyLDBdLDU5OlsuMTk0NDQsLjQzMDU2LC4wNTgyLDBdLDYxOlstLjEzMzEzLC4zNjY4NywuMDY2MTYsMF0sNjM6WzAsLjY5NDQ0LC4xMjI1LDBdLDY0OlswLC42OTQ0NCwuMDk1OTcsMF0sNjU6WzAsLjY4MzMzLDAsMF0sNjY6WzAsLjY4MzMzLC4xMDI1NywwXSw2NzpbMCwuNjgzMzMsLjE0NTI4LDBdLDY4OlswLC42ODMzMywuMDk0MDMsMF0sNjk6WzAsLjY4MzMzLC4xMjAyOCwwXSw3MDpbMCwuNjgzMzMsLjEzMzA1LDBdLDcxOlswLC42ODMzMywuMDg3MjIsMF0sNzI6WzAsLjY4MzMzLC4xNjM4OSwwXSw3MzpbMCwuNjgzMzMsLjE1ODA2LDBdLDc0OlswLC42ODMzMywuMTQwMjgsMF0sNzU6WzAsLjY4MzMzLC4xNDUyOCwwXSw3NjpbMCwuNjgzMzMsMCwwXSw3NzpbMCwuNjgzMzMsLjE2Mzg5LDBdLDc4OlswLC42ODMzMywuMTYzODksMF0sNzk6WzAsLjY4MzMzLC4wOTQwMywwXSw4MDpbMCwuNjgzMzMsLjEwMjU3LDBdLDgxOlsuMTk0NDQsLjY4MzMzLC4wOTQwMywwXSw4MjpbMCwuNjgzMzMsLjAzODY4LDBdLDgzOlswLC42ODMzMywuMTE5NzIsMF0sODQ6WzAsLjY4MzMzLC4xMzMwNSwwXSw4NTpbMCwuNjgzMzMsLjE2Mzg5LDBdLDg2OlswLC42ODMzMywuMTgzNjEsMF0sODc6WzAsLjY4MzMzLC4xODM2MSwwXSw4ODpbMCwuNjgzMzMsLjE1ODA2LDBdLDg5OlswLC42ODMzMywuMTkzODMsMF0sOTA6WzAsLjY4MzMzLC4xNDUyOCwwXSw5MTpbLjI1LC43NSwuMTg3NSwwXSw5MzpbLjI1LC43NSwuMTA1MjgsMF0sOTQ6WzAsLjY5NDQ0LC4wNjY0NiwwXSw5NTpbLjMxLC4xMjA1NiwuMDkyMDgsMF0sOTc6WzAsLjQzMDU2LC4wNzY3MSwwXSw5ODpbMCwuNjk0NDQsLjA2MzEyLDBdLDk5OlswLC40MzA1NiwuMDU2NTMsMF0sMTAwOlswLC42OTQ0NCwuMTAzMzMsMF0sMTAxOlswLC40MzA1NiwuMDc1MTQsMF0sMTAyOlsuMTk0NDQsLjY5NDQ0LC4yMTE5NCwwXSwxMDM6Wy4xOTQ0NCwuNDMwNTYsLjA4ODQ3LDBdLDEwNDpbMCwuNjk0NDQsLjA3NjcxLDBdLDEwNTpbMCwuNjU1MzYsLjEwMTksMF0sMTA2OlsuMTk0NDQsLjY1NTM2LC4xNDQ2NywwXSwxMDc6WzAsLjY5NDQ0LC4xMDc2NCwwXSwxMDg6WzAsLjY5NDQ0LC4xMDMzMywwXSwxMDk6WzAsLjQzMDU2LC4wNzY3MSwwXSwxMTA6WzAsLjQzMDU2LC4wNzY3MSwwXSwxMTE6WzAsLjQzMDU2LC4wNjMxMiwwXSwxMTI6Wy4xOTQ0NCwuNDMwNTYsLjA2MzEyLDBdLDExMzpbLjE5NDQ0LC40MzA1NiwuMDg4NDcsMF0sMTE0OlswLC40MzA1NiwuMTA3NjQsMF0sMTE1OlswLC40MzA1NiwuMDgyMDgsMF0sMTE2OlswLC42MTUwOCwuMDk0ODYsMF0sMTE3OlswLC40MzA1NiwuMDc2NzEsMF0sMTE4OlswLC40MzA1NiwuMTA3NjQsMF0sMTE5OlswLC40MzA1NiwuMTA3NjQsMF0sMTIwOlswLC40MzA1NiwuMTIwNDIsMF0sMTIxOlsuMTk0NDQsLjQzMDU2LC4wODg0NywwXSwxMjI6WzAsLjQzMDU2LC4xMjI5MiwwXSwxMjY6Wy4zNSwuMzE3ODYsLjExNTg1LDBdLDE2MzpbMCwuNjk0NDQsMCwwXSwzMDU6WzAsLjQzMDU2LDAsLjAyNzc4XSw1Njc6Wy4xOTQ0NCwuNDMwNTYsMCwuMDgzMzRdLDc2ODpbMCwuNjk0NDQsMCwwXSw3Njk6WzAsLjY5NDQ0LC4wOTY5NCwwXSw3NzA6WzAsLjY5NDQ0LC4wNjY0NiwwXSw3NzE6WzAsLjY2Nzg2LC4xMTU4NSwwXSw3NzI6WzAsLjU2MTY3LC4xMDMzMywwXSw3NzQ6WzAsLjY5NDQ0LC4xMDgwNiwwXSw3NzU6WzAsLjY2Nzg2LC4xMTc1MiwwXSw3NzY6WzAsLjY2Nzg2LC4xMDQ3NCwwXSw3Nzg6WzAsLjY5NDQ0LDAsMF0sNzc5OlswLC42OTQ0NCwuMTIyNSwwXSw3ODA6WzAsLjYyODQ3LC4wODI5NSwwXSw5MTU6WzAsLjY4MzMzLC4xMzMwNSwwXSw5MTY6WzAsLjY4MzMzLDAsMF0sOTIwOlswLC42ODMzMywuMDk0MDMsMF0sOTIzOlswLC42ODMzMywwLDBdLDkyNjpbMCwuNjgzMzMsLjE1Mjk0LDBdLDkyODpbMCwuNjgzMzMsLjE2Mzg5LDBdLDkzMTpbMCwuNjgzMzMsLjEyMDI4LDBdLDkzMzpbMCwuNjgzMzMsLjExMTExLDBdLDkzNDpbMCwuNjgzMzMsLjA1OTg2LDBdLDkzNjpbMCwuNjgzMzMsLjExMTExLDBdLDkzNzpbMCwuNjgzMzMsLjEwMjU3LDBdLDgyMTE6WzAsLjQzMDU2LC4wOTIwOCwwXSw4MjEyOlswLC40MzA1NiwuMDkyMDgsMF0sODIxNjpbMCwuNjk0NDQsLjEyNDE3LDBdLDgyMTc6WzAsLjY5NDQ0LC4xMjQxNywwXSw4MjIwOlswLC42OTQ0NCwuMTY4NSwwXSw4MjIxOlswLC42OTQ0NCwuMDY5NjEsMF0sODQ2MzpbMCwuNjg4ODksMCwwXX0sXCJNYWluLVJlZ3VsYXJcIjp7MzI6WzAsMCwwLDBdLDMzOlswLC42OTQ0NCwwLDBdLDM0OlswLC42OTQ0NCwwLDBdLDM1OlsuMTk0NDQsLjY5NDQ0LDAsMF0sMzY6Wy4wNTU1NiwuNzUsMCwwXSwzNzpbLjA1NTU2LC43NSwwLDBdLDM4OlswLC42OTQ0NCwwLDBdLDM5OlswLC42OTQ0NCwwLDBdLDQwOlsuMjUsLjc1LDAsMF0sNDE6Wy4yNSwuNzUsMCwwXSw0MjpbMCwuNzUsMCwwXSw0MzpbLjA4MzMzLC41ODMzMywwLDBdLDQ0OlsuMTk0NDQsLjEwNTU2LDAsMF0sNDU6WzAsLjQzMDU2LDAsMF0sNDY6WzAsLjEwNTU2LDAsMF0sNDc6Wy4yNSwuNzUsMCwwXSw0ODpbMCwuNjQ0NDQsMCwwXSw0OTpbMCwuNjQ0NDQsMCwwXSw1MDpbMCwuNjQ0NDQsMCwwXSw1MTpbMCwuNjQ0NDQsMCwwXSw1MjpbMCwuNjQ0NDQsMCwwXSw1MzpbMCwuNjQ0NDQsMCwwXSw1NDpbMCwuNjQ0NDQsMCwwXSw1NTpbMCwuNjQ0NDQsMCwwXSw1NjpbMCwuNjQ0NDQsMCwwXSw1NzpbMCwuNjQ0NDQsMCwwXSw1ODpbMCwuNDMwNTYsMCwwXSw1OTpbLjE5NDQ0LC40MzA1NiwwLDBdLDYwOlsuMDM5MSwuNTM5MSwwLDBdLDYxOlstLjEzMzEzLC4zNjY4NywwLDBdLDYyOlsuMDM5MSwuNTM5MSwwLDBdLDYzOlswLC42OTQ0NCwwLDBdLDY0OlswLC42OTQ0NCwwLDBdLDY1OlswLC42ODMzMywwLDBdLDY2OlswLC42ODMzMywwLDBdLDY3OlswLC42ODMzMywwLDBdLDY4OlswLC42ODMzMywwLDBdLDY5OlswLC42ODMzMywwLDBdLDcwOlswLC42ODMzMywwLDBdLDcxOlswLC42ODMzMywwLDBdLDcyOlswLC42ODMzMywwLDBdLDczOlswLC42ODMzMywwLDBdLDc0OlswLC42ODMzMywwLDBdLDc1OlswLC42ODMzMywwLDBdLDc2OlswLC42ODMzMywwLDBdLDc3OlswLC42ODMzMywwLDBdLDc4OlswLC42ODMzMywwLDBdLDc5OlswLC42ODMzMywwLDBdLDgwOlswLC42ODMzMywwLDBdLDgxOlsuMTk0NDQsLjY4MzMzLDAsMF0sODI6WzAsLjY4MzMzLDAsMF0sODM6WzAsLjY4MzMzLDAsMF0sODQ6WzAsLjY4MzMzLDAsMF0sODU6WzAsLjY4MzMzLDAsMF0sODY6WzAsLjY4MzMzLC4wMTM4OSwwXSw4NzpbMCwuNjgzMzMsLjAxMzg5LDBdLDg4OlswLC42ODMzMywwLDBdLDg5OlswLC42ODMzMywuMDI1LDBdLDkwOlswLC42ODMzMywwLDBdLDkxOlsuMjUsLjc1LDAsMF0sOTI6Wy4yNSwuNzUsMCwwXSw5MzpbLjI1LC43NSwwLDBdLDk0OlswLC42OTQ0NCwwLDBdLDk1OlsuMzEsLjEyMDU2LC4wMjc3OCwwXSw5NjpbMCwuNjk0NDQsMCwwXSw5NzpbMCwuNDMwNTYsMCwwXSw5ODpbMCwuNjk0NDQsMCwwXSw5OTpbMCwuNDMwNTYsMCwwXSwxMDA6WzAsLjY5NDQ0LDAsMF0sMTAxOlswLC40MzA1NiwwLDBdLDEwMjpbMCwuNjk0NDQsLjA3Nzc4LDBdLDEwMzpbLjE5NDQ0LC40MzA1NiwuMDEzODksMF0sMTA0OlswLC42OTQ0NCwwLDBdLDEwNTpbMCwuNjY3ODYsMCwwXSwxMDY6Wy4xOTQ0NCwuNjY3ODYsMCwwXSwxMDc6WzAsLjY5NDQ0LDAsMF0sMTA4OlswLC42OTQ0NCwwLDBdLDEwOTpbMCwuNDMwNTYsMCwwXSwxMTA6WzAsLjQzMDU2LDAsMF0sMTExOlswLC40MzA1NiwwLDBdLDExMjpbLjE5NDQ0LC40MzA1NiwwLDBdLDExMzpbLjE5NDQ0LC40MzA1NiwwLDBdLDExNDpbMCwuNDMwNTYsMCwwXSwxMTU6WzAsLjQzMDU2LDAsMF0sMTE2OlswLC42MTUwOCwwLDBdLDExNzpbMCwuNDMwNTYsMCwwXSwxMTg6WzAsLjQzMDU2LC4wMTM4OSwwXSwxMTk6WzAsLjQzMDU2LC4wMTM4OSwwXSwxMjA6WzAsLjQzMDU2LDAsMF0sMTIxOlsuMTk0NDQsLjQzMDU2LC4wMTM4OSwwXSwxMjI6WzAsLjQzMDU2LDAsMF0sMTIzOlsuMjUsLjc1LDAsMF0sMTI0OlsuMjUsLjc1LDAsMF0sMTI1OlsuMjUsLjc1LDAsMF0sMTI2OlsuMzUsLjMxNzg2LDAsMF0sMTYwOlswLDAsMCwwXSwxNjg6WzAsLjY2Nzg2LDAsMF0sMTcyOlswLC40MzA1NiwwLDBdLDE3NTpbMCwuNTY3NzgsMCwwXSwxNzY6WzAsLjY5NDQ0LDAsMF0sMTc3OlsuMDgzMzMsLjU4MzMzLDAsMF0sMTgwOlswLC42OTQ0NCwwLDBdLDIxNTpbLjA4MzMzLC41ODMzMywwLDBdLDI0NzpbLjA4MzMzLC41ODMzMywwLDBdLDMwNTpbMCwuNDMwNTYsMCwwXSw1Njc6Wy4xOTQ0NCwuNDMwNTYsMCwwXSw3MTA6WzAsLjY5NDQ0LDAsMF0sNzExOlswLC42Mjg0NywwLDBdLDcxMzpbMCwuNTY3NzgsMCwwXSw3MTQ6WzAsLjY5NDQ0LDAsMF0sNzE1OlswLC42OTQ0NCwwLDBdLDcyODpbMCwuNjk0NDQsMCwwXSw3Mjk6WzAsLjY2Nzg2LDAsMF0sNzMwOlswLC42OTQ0NCwwLDBdLDczMjpbMCwuNjY3ODYsMCwwXSw3Njg6WzAsLjY5NDQ0LDAsMF0sNzY5OlswLC42OTQ0NCwwLDBdLDc3MDpbMCwuNjk0NDQsMCwwXSw3NzE6WzAsLjY2Nzg2LDAsMF0sNzcyOlswLC41Njc3OCwwLDBdLDc3NDpbMCwuNjk0NDQsMCwwXSw3NzU6WzAsLjY2Nzg2LDAsMF0sNzc2OlswLC42Njc4NiwwLDBdLDc3ODpbMCwuNjk0NDQsMCwwXSw3Nzk6WzAsLjY5NDQ0LDAsMF0sNzgwOlswLC42Mjg0NywwLDBdLDgyNDpbLjE5NDQ0LC42OTQ0NCwwLDBdLDkxNTpbMCwuNjgzMzMsMCwwXSw5MTY6WzAsLjY4MzMzLDAsMF0sOTIwOlswLC42ODMzMywwLDBdLDkyMzpbMCwuNjgzMzMsMCwwXSw5MjY6WzAsLjY4MzMzLDAsMF0sOTI4OlswLC42ODMzMywwLDBdLDkzMTpbMCwuNjgzMzMsMCwwXSw5MzM6WzAsLjY4MzMzLDAsMF0sOTM0OlswLC42ODMzMywwLDBdLDkzNjpbMCwuNjgzMzMsMCwwXSw5Mzc6WzAsLjY4MzMzLDAsMF0sODIxMTpbMCwuNDMwNTYsLjAyNzc4LDBdLDgyMTI6WzAsLjQzMDU2LC4wMjc3OCwwXSw4MjE2OlswLC42OTQ0NCwwLDBdLDgyMTc6WzAsLjY5NDQ0LDAsMF0sODIyMDpbMCwuNjk0NDQsMCwwXSw4MjIxOlswLC42OTQ0NCwwLDBdLDgyMjQ6Wy4xOTQ0NCwuNjk0NDQsMCwwXSw4MjI1OlsuMTk0NDQsLjY5NDQ0LDAsMF0sODIzMDpbMCwuMTIsMCwwXSw4MjQyOlswLC41NTU1NiwwLDBdLDg0MDc6WzAsLjcxNDQ0LC4xNTM4MiwwXSw4NDYzOlswLC42ODg4OSwwLDBdLDg0NjU6WzAsLjY5NDQ0LDAsMF0sODQ2NzpbMCwuNjk0NDQsMCwuMTExMTFdLDg0NzI6Wy4xOTQ0NCwuNDMwNTYsMCwuMTExMTFdLDg0NzY6WzAsLjY5NDQ0LDAsMF0sODUwMTpbMCwuNjk0NDQsMCwwXSw4NTkyOlstLjEzMzEzLC4zNjY4NywwLDBdLDg1OTM6Wy4xOTQ0NCwuNjk0NDQsMCwwXSw4NTk0OlstLjEzMzEzLC4zNjY4NywwLDBdLDg1OTU6Wy4xOTQ0NCwuNjk0NDQsMCwwXSw4NTk2OlstLjEzMzEzLC4zNjY4NywwLDBdLDg1OTc6Wy4yNSwuNzUsMCwwXSw4NTk4OlsuMTk0NDQsLjY5NDQ0LDAsMF0sODU5OTpbLjE5NDQ0LC42OTQ0NCwwLDBdLDg2MDA6Wy4xOTQ0NCwuNjk0NDQsMCwwXSw4NjAxOlsuMTk0NDQsLjY5NDQ0LDAsMF0sODYxNDpbLjAxMSwuNTExLDAsMF0sODYxNzpbLjAxMSwuNTExLDAsMF0sODYxODpbLjAxMSwuNTExLDAsMF0sODYzNjpbLS4xMzMxMywuMzY2ODcsMCwwXSw4NjM3OlstLjEzMzEzLC4zNjY4NywwLDBdLDg2NDA6Wy0uMTMzMTMsLjM2Njg3LDAsMF0sODY0MTpbLS4xMzMxMywuMzY2ODcsMCwwXSw4NjUyOlsuMDExLC42NzEsMCwwXSw4NjU2OlstLjEzMzEzLC4zNjY4NywwLDBdLDg2NTc6Wy4xOTQ0NCwuNjk0NDQsMCwwXSw4NjU4OlstLjEzMzEzLC4zNjY4NywwLDBdLDg2NTk6Wy4xOTQ0NCwuNjk0NDQsMCwwXSw4NjYwOlstLjEzMzEzLC4zNjY4NywwLDBdLDg2NjE6Wy4yNSwuNzUsMCwwXSw4NzA0OlswLC42OTQ0NCwwLDBdLDg3MDY6WzAsLjY5NDQ0LC4wNTU1NiwuMDgzMzRdLDg3MDc6WzAsLjY5NDQ0LDAsMF0sODcwOTpbLjA1NTU2LC43NSwwLDBdLDg3MTE6WzAsLjY4MzMzLDAsMF0sODcxMjpbLjAzOTEsLjUzOTEsMCwwXSw4NzE1OlsuMDM5MSwuNTM5MSwwLDBdLDg3MjI6Wy4wODMzMywuNTgzMzMsMCwwXSw4NzIzOlsuMDgzMzMsLjU4MzMzLDAsMF0sODcyNTpbLjI1LC43NSwwLDBdLDg3MjY6Wy4yNSwuNzUsMCwwXSw4NzI3OlstLjAzNDcyLC40NjUyOCwwLDBdLDg3Mjg6Wy0uMDU1NTUsLjQ0NDQ1LDAsMF0sODcyOTpbLS4wNTU1NSwuNDQ0NDUsMCwwXSw4NzMwOlsuMiwuOCwwLDBdLDg3MzM6WzAsLjQzMDU2LDAsMF0sODczNDpbMCwuNDMwNTYsMCwwXSw4NzM2OlswLC42OTIyNCwwLDBdLDg3Mzk6Wy4yNSwuNzUsMCwwXSw4NzQxOlsuMjUsLjc1LDAsMF0sODc0MzpbMCwuNTU1NTYsMCwwXSw4NzQ0OlswLC41NTU1NiwwLDBdLDg3NDU6WzAsLjU1NTU2LDAsMF0sODc0NjpbMCwuNTU1NTYsMCwwXSw4NzQ3OlsuMTk0NDQsLjY5NDQ0LC4xMTExMSwwXSw4NzY0OlstLjEzMzEzLC4zNjY4NywwLDBdLDg3Njg6Wy4xOTQ0NCwuNjk0NDQsMCwwXSw4NzcxOlstLjAzNjI1LC40NjM3NSwwLDBdLDg3NzM6Wy0uMDIyLC41ODksMCwwXSw4Nzc2OlstLjAxNjg4LC40ODMxMiwwLDBdLDg3ODE6Wy0uMDM2MjUsLjQ2Mzc1LDAsMF0sODc4NDpbLS4xMzMsLjY3LDAsMF0sODgwMDpbLjIxNSwuNzE2LDAsMF0sODgwMTpbLS4wMzYyNSwuNDYzNzUsMCwwXSw4ODA0OlsuMTM1OTcsLjYzNTk3LDAsMF0sODgwNTpbLjEzNTk3LC42MzU5NywwLDBdLDg4MTA6Wy4wMzkxLC41MzkxLDAsMF0sODgxMTpbLjAzOTEsLjUzOTEsMCwwXSw4ODI2OlsuMDM5MSwuNTM5MSwwLDBdLDg4Mjc6Wy4wMzkxLC41MzkxLDAsMF0sODgzNDpbLjAzOTEsLjUzOTEsMCwwXSw4ODM1OlsuMDM5MSwuNTM5MSwwLDBdLDg4Mzg6Wy4xMzU5NywuNjM1OTcsMCwwXSw4ODM5OlsuMTM1OTcsLjYzNTk3LDAsMF0sODg0NjpbMCwuNTU1NTYsMCwwXSw4ODQ5OlsuMTM1OTcsLjYzNTk3LDAsMF0sODg1MDpbLjEzNTk3LC42MzU5NywwLDBdLDg4NTE6WzAsLjU1NTU2LDAsMF0sODg1MjpbMCwuNTU1NTYsMCwwXSw4ODUzOlsuMDgzMzMsLjU4MzMzLDAsMF0sODg1NDpbLjA4MzMzLC41ODMzMywwLDBdLDg4NTU6Wy4wODMzMywuNTgzMzMsMCwwXSw4ODU2OlsuMDgzMzMsLjU4MzMzLDAsMF0sODg1NzpbLjA4MzMzLC41ODMzMywwLDBdLDg4NjY6WzAsLjY5NDQ0LDAsMF0sODg2NzpbMCwuNjk0NDQsMCwwXSw4ODY4OlswLC42OTQ0NCwwLDBdLDg4Njk6WzAsLjY5NDQ0LDAsMF0sODg3MjpbLjI0OSwuNzUsMCwwXSw4OTAwOlstLjA1NTU1LC40NDQ0NSwwLDBdLDg5MDE6Wy0uMDU1NTUsLjQ0NDQ1LDAsMF0sODkwMjpbLS4wMzQ3MiwuNDY1MjgsMCwwXSw4OTA0OlsuMDA1LC41MDUsMCwwXSw4OTQyOlsuMDMsLjksMCwwXSw4OTQzOlstLjE5LC4zMSwwLDBdLDg5NDU6Wy0uMSwuODIsMCwwXSw4OTY4OlsuMjUsLjc1LDAsMF0sODk2OTpbLjI1LC43NSwwLDBdLDg5NzA6Wy4yNSwuNzUsMCwwXSw4OTcxOlsuMjUsLjc1LDAsMF0sODk5NDpbLS4xNDIzNiwuMzU3NjQsMCwwXSw4OTk1OlstLjE0MjM2LC4zNTc2NCwwLDBdLDkxMzY6Wy4yNDQsLjc0NCwwLDBdLDkxMzc6Wy4yNDQsLjc0NCwwLDBdLDk2NTE6Wy4xOTQ0NCwuNjk0NDQsMCwwXSw5NjU3OlstLjAzNDcyLC40NjUyOCwwLDBdLDk2NjE6Wy4xOTQ0NCwuNjk0NDQsMCwwXSw5NjY3OlstLjAzNDcyLC40NjUyOCwwLDBdLDk3MTE6Wy4xOTQ0NCwuNjk0NDQsMCwwXSw5ODI0OlsuMTI5NjMsLjY5NDQ0LDAsMF0sOTgyNTpbLjEyOTYzLC42OTQ0NCwwLDBdLDk4MjY6Wy4xMjk2MywuNjk0NDQsMCwwXSw5ODI3OlsuMTI5NjMsLjY5NDQ0LDAsMF0sOTgzNzpbMCwuNzUsMCwwXSw5ODM4OlsuMTk0NDQsLjY5NDQ0LDAsMF0sOTgzOTpbLjE5NDQ0LC42OTQ0NCwwLDBdLDEwMjE2OlsuMjUsLjc1LDAsMF0sMTAyMTc6Wy4yNSwuNzUsMCwwXSwxMDIyMjpbLjI0NCwuNzQ0LDAsMF0sMTAyMjM6Wy4yNDQsLjc0NCwwLDBdLDEwMjI5OlsuMDExLC41MTEsMCwwXSwxMDIzMDpbLjAxMSwuNTExLDAsMF0sMTAyMzE6Wy4wMTEsLjUxMSwwLDBdLDEwMjMyOlsuMDI0LC41MjUsMCwwXSwxMDIzMzpbLjAyNCwuNTI1LDAsMF0sMTAyMzQ6Wy4wMjQsLjUyNSwwLDBdLDEwMjM2OlsuMDExLC41MTEsMCwwXSwxMDgxNTpbMCwuNjgzMzMsMCwwXSwxMDkyNzpbLjEzNTk3LC42MzU5NywwLDBdLDEwOTI4OlsuMTM1OTcsLjYzNTk3LDAsMF19LFwiTWF0aC1Cb2xkSXRhbGljXCI6ezQ3OlsuMTk0NDQsLjY5NDQ0LDAsMF0sNjU6WzAsLjY4NjExLDAsMF0sNjY6WzAsLjY4NjExLC4wNDgzNSwwXSw2NzpbMCwuNjg2MTEsLjA2OTc5LDBdLDY4OlswLC42ODYxMSwuMDMxOTQsMF0sNjk6WzAsLjY4NjExLC4wNTQ1MSwwXSw3MDpbMCwuNjg2MTEsLjE1OTcyLDBdLDcxOlswLC42ODYxMSwwLDBdLDcyOlswLC42ODYxMSwuMDgyMjksMF0sNzM6WzAsLjY4NjExLC4wNzc3OCwwXSw3NDpbMCwuNjg2MTEsLjEwMDY5LDBdLDc1OlswLC42ODYxMSwuMDY5NzksMF0sNzY6WzAsLjY4NjExLDAsMF0sNzc6WzAsLjY4NjExLC4xMTQyNCwwXSw3ODpbMCwuNjg2MTEsLjExNDI0LDBdLDc5OlswLC42ODYxMSwuMDMxOTQsMF0sODA6WzAsLjY4NjExLC4xNTk3MiwwXSw4MTpbLjE5NDQ0LC42ODYxMSwwLDBdLDgyOlswLC42ODYxMSwuMDA0MjEsMF0sODM6WzAsLjY4NjExLC4wNTM4MiwwXSw4NDpbMCwuNjg2MTEsLjE1OTcyLDBdLDg1OlswLC42ODYxMSwuMTE0MjQsMF0sODY6WzAsLjY4NjExLC4yNTU1NSwwXSw4NzpbMCwuNjg2MTEsLjE1OTcyLDBdLDg4OlswLC42ODYxMSwuMDc3NzgsMF0sODk6WzAsLjY4NjExLC4yNTU1NSwwXSw5MDpbMCwuNjg2MTEsLjA2OTc5LDBdLDk3OlswLC40NDQ0NCwwLDBdLDk4OlswLC42OTQ0NCwwLDBdLDk5OlswLC40NDQ0NCwwLDBdLDEwMDpbMCwuNjk0NDQsMCwwXSwxMDE6WzAsLjQ0NDQ0LDAsMF0sMTAyOlsuMTk0NDQsLjY5NDQ0LC4xMTA0MiwwXSwxMDM6Wy4xOTQ0NCwuNDQ0NDQsLjAzNzA0LDBdLDEwNDpbMCwuNjk0NDQsMCwwXSwxMDU6WzAsLjY5MzI2LDAsMF0sMTA2OlsuMTk0NDQsLjY5MzI2LC4wNjIyLDBdLDEwNzpbMCwuNjk0NDQsLjAxODUyLDBdLDEwODpbMCwuNjk0NDQsLjAwODgsMF0sMTA5OlswLC40NDQ0NCwwLDBdLDExMDpbMCwuNDQ0NDQsMCwwXSwxMTE6WzAsLjQ0NDQ0LDAsMF0sMTEyOlsuMTk0NDQsLjQ0NDQ0LDAsMF0sMTEzOlsuMTk0NDQsLjQ0NDQ0LC4wMzcwNCwwXSwxMTQ6WzAsLjQ0NDQ0LC4wMzE5NCwwXSwxMTU6WzAsLjQ0NDQ0LDAsMF0sMTE2OlswLC42MzQ5MiwwLDBdLDExNzpbMCwuNDQ0NDQsMCwwXSwxMTg6WzAsLjQ0NDQ0LC4wMzcwNCwwXSwxMTk6WzAsLjQ0NDQ0LC4wMjc3OCwwXSwxMjA6WzAsLjQ0NDQ0LDAsMF0sMTIxOlsuMTk0NDQsLjQ0NDQ0LC4wMzcwNCwwXSwxMjI6WzAsLjQ0NDQ0LC4wNDIxMywwXSw5MTU6WzAsLjY4NjExLC4xNTk3MiwwXSw5MTY6WzAsLjY4NjExLDAsMF0sOTIwOlswLC42ODYxMSwuMDMxOTQsMF0sOTIzOlswLC42ODYxMSwwLDBdLDkyNjpbMCwuNjg2MTEsLjA3NDU4LDBdLDkyODpbMCwuNjg2MTEsLjA4MjI5LDBdLDkzMTpbMCwuNjg2MTEsLjA1NDUxLDBdLDkzMzpbMCwuNjg2MTEsLjE1OTcyLDBdLDkzNDpbMCwuNjg2MTEsMCwwXSw5MzY6WzAsLjY4NjExLC4xMTY1MywwXSw5Mzc6WzAsLjY4NjExLC4wNDgzNSwwXSw5NDU6WzAsLjQ0NDQ0LDAsMF0sOTQ2OlsuMTk0NDQsLjY5NDQ0LC4wMzQwMywwXSw5NDc6Wy4xOTQ0NCwuNDQ0NDQsLjA2Mzg5LDBdLDk0ODpbMCwuNjk0NDQsLjAzODE5LDBdLDk0OTpbMCwuNDQ0NDQsMCwwXSw5NTA6Wy4xOTQ0NCwuNjk0NDQsLjA2MjE1LDBdLDk1MTpbLjE5NDQ0LC40NDQ0NCwuMDM3MDQsMF0sOTUyOlswLC42OTQ0NCwuMDMxOTQsMF0sOTUzOlswLC40NDQ0NCwwLDBdLDk1NDpbMCwuNDQ0NDQsMCwwXSw5NTU6WzAsLjY5NDQ0LDAsMF0sOTU2OlsuMTk0NDQsLjQ0NDQ0LDAsMF0sOTU3OlswLC40NDQ0NCwuMDY4OTgsMF0sOTU4OlsuMTk0NDQsLjY5NDQ0LC4wMzAyMSwwXSw5NTk6WzAsLjQ0NDQ0LDAsMF0sOTYwOlswLC40NDQ0NCwuMDM3MDQsMF0sOTYxOlsuMTk0NDQsLjQ0NDQ0LDAsMF0sOTYyOlsuMDk3MjIsLjQ0NDQ0LC4wNzkxNywwXSw5NjM6WzAsLjQ0NDQ0LC4wMzcwNCwwXSw5NjQ6WzAsLjQ0NDQ0LC4xMzQ3MiwwXSw5NjU6WzAsLjQ0NDQ0LC4wMzcwNCwwXSw5NjY6Wy4xOTQ0NCwuNDQ0NDQsMCwwXSw5Njc6Wy4xOTQ0NCwuNDQ0NDQsMCwwXSw5Njg6Wy4xOTQ0NCwuNjk0NDQsLjAzNzA0LDBdLDk2OTpbMCwuNDQ0NDQsLjAzNzA0LDBdLDk3NzpbMCwuNjk0NDQsMCwwXSw5ODE6Wy4xOTQ0NCwuNjk0NDQsMCwwXSw5ODI6WzAsLjQ0NDQ0LC4wMzE5NCwwXSwxMDA5OlsuMTk0NDQsLjQ0NDQ0LDAsMF0sMTAxMzpbMCwuNDQ0NDQsMCwwXX0sXCJNYXRoLUl0YWxpY1wiOns0NzpbLjE5NDQ0LC42OTQ0NCwwLDBdLDY1OlswLC42ODMzMywwLC4xMzg4OV0sNjY6WzAsLjY4MzMzLC4wNTAxNywuMDgzMzRdLDY3OlswLC42ODMzMywuMDcxNTMsLjA4MzM0XSw2ODpbMCwuNjgzMzMsLjAyNzc4LC4wNTU1Nl0sNjk6WzAsLjY4MzMzLC4wNTc2NCwuMDgzMzRdLDcwOlswLC42ODMzMywuMTM4ODksLjA4MzM0XSw3MTpbMCwuNjgzMzMsMCwuMDgzMzRdLDcyOlswLC42ODMzMywuMDgxMjUsLjA1NTU2XSw3MzpbMCwuNjgzMzMsLjA3ODQ3LC4xMTExMV0sNzQ6WzAsLjY4MzMzLC4wOTYxOCwuMTY2NjddLDc1OlswLC42ODMzMywuMDcxNTMsLjA1NTU2XSw3NjpbMCwuNjgzMzMsMCwuMDI3NzhdLDc3OlswLC42ODMzMywuMTA5MDMsLjA4MzM0XSw3ODpbMCwuNjgzMzMsLjEwOTAzLC4wODMzNF0sNzk6WzAsLjY4MzMzLC4wMjc3OCwuMDgzMzRdLDgwOlswLC42ODMzMywuMTM4ODksLjA4MzM0XSw4MTpbLjE5NDQ0LC42ODMzMywwLC4wODMzNF0sODI6WzAsLjY4MzMzLC4wMDc3MywuMDgzMzRdLDgzOlswLC42ODMzMywuMDU3NjQsLjA4MzM0XSw4NDpbMCwuNjgzMzMsLjEzODg5LC4wODMzNF0sODU6WzAsLjY4MzMzLC4xMDkwMywuMDI3NzhdLDg2OlswLC42ODMzMywuMjIyMjIsMF0sODc6WzAsLjY4MzMzLC4xMzg4OSwwXSw4ODpbMCwuNjgzMzMsLjA3ODQ3LC4wODMzNF0sODk6WzAsLjY4MzMzLC4yMjIyMiwwXSw5MDpbMCwuNjgzMzMsLjA3MTUzLC4wODMzNF0sOTc6WzAsLjQzMDU2LDAsMF0sOTg6WzAsLjY5NDQ0LDAsMF0sOTk6WzAsLjQzMDU2LDAsLjA1NTU2XSwxMDA6WzAsLjY5NDQ0LDAsLjE2NjY3XSwxMDE6WzAsLjQzMDU2LDAsLjA1NTU2XSwxMDI6Wy4xOTQ0NCwuNjk0NDQsLjEwNzY0LC4xNjY2N10sMTAzOlsuMTk0NDQsLjQzMDU2LC4wMzU4OCwuMDI3NzhdLDEwNDpbMCwuNjk0NDQsMCwwXSwxMDU6WzAsLjY1OTUyLDAsMF0sMTA2OlsuMTk0NDQsLjY1OTUyLC4wNTcyNCwwXSwxMDc6WzAsLjY5NDQ0LC4wMzE0OCwwXSwxMDg6WzAsLjY5NDQ0LC4wMTk2OCwuMDgzMzRdLDEwOTpbMCwuNDMwNTYsMCwwXSwxMTA6WzAsLjQzMDU2LDAsMF0sMTExOlswLC40MzA1NiwwLC4wNTU1Nl0sMTEyOlsuMTk0NDQsLjQzMDU2LDAsLjA4MzM0XSwxMTM6Wy4xOTQ0NCwuNDMwNTYsLjAzNTg4LC4wODMzNF0sMTE0OlswLC40MzA1NiwuMDI3NzgsLjA1NTU2XSwxMTU6WzAsLjQzMDU2LDAsLjA1NTU2XSwxMTY6WzAsLjYxNTA4LDAsLjA4MzM0XSwxMTc6WzAsLjQzMDU2LDAsLjAyNzc4XSwxMTg6WzAsLjQzMDU2LC4wMzU4OCwuMDI3NzhdLDExOTpbMCwuNDMwNTYsLjAyNjkxLC4wODMzNF0sMTIwOlswLC40MzA1NiwwLC4wMjc3OF0sMTIxOlsuMTk0NDQsLjQzMDU2LC4wMzU4OCwuMDU1NTZdLDEyMjpbMCwuNDMwNTYsLjA0Mzk4LC4wNTU1Nl0sOTE1OlswLC42ODMzMywuMTM4ODksLjA4MzM0XSw5MTY6WzAsLjY4MzMzLDAsLjE2NjY3XSw5MjA6WzAsLjY4MzMzLC4wMjc3OCwuMDgzMzRdLDkyMzpbMCwuNjgzMzMsMCwuMTY2NjddLDkyNjpbMCwuNjgzMzMsLjA3NTY5LC4wODMzNF0sOTI4OlswLC42ODMzMywuMDgxMjUsLjA1NTU2XSw5MzE6WzAsLjY4MzMzLC4wNTc2NCwuMDgzMzRdLDkzMzpbMCwuNjgzMzMsLjEzODg5LC4wNTU1Nl0sOTM0OlswLC42ODMzMywwLC4wODMzNF0sOTM2OlswLC42ODMzMywuMTEsLjA1NTU2XSw5Mzc6WzAsLjY4MzMzLC4wNTAxNywuMDgzMzRdLDk0NTpbMCwuNDMwNTYsLjAwMzcsLjAyNzc4XSw5NDY6Wy4xOTQ0NCwuNjk0NDQsLjA1Mjc4LC4wODMzNF0sOTQ3OlsuMTk0NDQsLjQzMDU2LC4wNTU1NiwwXSw5NDg6WzAsLjY5NDQ0LC4wMzc4NSwuMDU1NTZdLDk0OTpbMCwuNDMwNTYsMCwuMDgzMzRdLDk1MDpbLjE5NDQ0LC42OTQ0NCwuMDczNzgsLjA4MzM0XSw5NTE6Wy4xOTQ0NCwuNDMwNTYsLjAzNTg4LC4wNTU1Nl0sOTUyOlswLC42OTQ0NCwuMDI3NzgsLjA4MzM0XSw5NTM6WzAsLjQzMDU2LDAsLjA1NTU2XSw5NTQ6WzAsLjQzMDU2LDAsMF0sOTU1OlswLC42OTQ0NCwwLDBdLDk1NjpbLjE5NDQ0LC40MzA1NiwwLC4wMjc3OF0sOTU3OlswLC40MzA1NiwuMDYzNjYsLjAyNzc4XSw5NTg6Wy4xOTQ0NCwuNjk0NDQsLjA0NjAxLC4xMTExMV0sOTU5OlswLC40MzA1NiwwLC4wNTU1Nl0sOTYwOlswLC40MzA1NiwuMDM1ODgsMF0sOTYxOlsuMTk0NDQsLjQzMDU2LDAsLjA4MzM0XSw5NjI6Wy4wOTcyMiwuNDMwNTYsLjA3OTg2LC4wODMzNF0sOTYzOlswLC40MzA1NiwuMDM1ODgsMF0sOTY0OlswLC40MzA1NiwuMTEzMiwuMDI3NzhdLDk2NTpbMCwuNDMwNTYsLjAzNTg4LC4wMjc3OF0sOTY2OlsuMTk0NDQsLjQzMDU2LDAsLjA4MzM0XSw5Njc6Wy4xOTQ0NCwuNDMwNTYsMCwuMDU1NTZdLDk2ODpbLjE5NDQ0LC42OTQ0NCwuMDM1ODgsLjExMTExXSw5Njk6WzAsLjQzMDU2LC4wMzU4OCwwXSw5Nzc6WzAsLjY5NDQ0LDAsLjA4MzM0XSw5ODE6Wy4xOTQ0NCwuNjk0NDQsMCwuMDgzMzRdLDk4MjpbMCwuNDMwNTYsLjAyNzc4LDBdLDEwMDk6Wy4xOTQ0NCwuNDMwNTYsMCwuMDgzMzRdLDEwMTM6WzAsLjQzMDU2LDAsLjA1NTU2XX0sXCJNYXRoLVJlZ3VsYXJcIjp7NjU6WzAsLjY4MzMzLDAsLjEzODg5XSw2NjpbMCwuNjgzMzMsLjA1MDE3LC4wODMzNF0sNjc6WzAsLjY4MzMzLC4wNzE1MywuMDgzMzRdLDY4OlswLC42ODMzMywuMDI3NzgsLjA1NTU2XSw2OTpbMCwuNjgzMzMsLjA1NzY0LC4wODMzNF0sNzA6WzAsLjY4MzMzLC4xMzg4OSwuMDgzMzRdLDcxOlswLC42ODMzMywwLC4wODMzNF0sNzI6WzAsLjY4MzMzLC4wODEyNSwuMDU1NTZdLDczOlswLC42ODMzMywuMDc4NDcsLjExMTExXSw3NDpbMCwuNjgzMzMsLjA5NjE4LC4xNjY2N10sNzU6WzAsLjY4MzMzLC4wNzE1MywuMDU1NTZdLDc2OlswLC42ODMzMywwLC4wMjc3OF0sNzc6WzAsLjY4MzMzLC4xMDkwMywuMDgzMzRdLDc4OlswLC42ODMzMywuMTA5MDMsLjA4MzM0XSw3OTpbMCwuNjgzMzMsLjAyNzc4LC4wODMzNF0sODA6WzAsLjY4MzMzLC4xMzg4OSwuMDgzMzRdLDgxOlsuMTk0NDQsLjY4MzMzLDAsLjA4MzM0XSw4MjpbMCwuNjgzMzMsLjAwNzczLC4wODMzNF0sODM6WzAsLjY4MzMzLC4wNTc2NCwuMDgzMzRdLDg0OlswLC42ODMzMywuMTM4ODksLjA4MzM0XSw4NTpbMCwuNjgzMzMsLjEwOTAzLC4wMjc3OF0sODY6WzAsLjY4MzMzLC4yMjIyMiwwXSw4NzpbMCwuNjgzMzMsLjEzODg5LDBdLDg4OlswLC42ODMzMywuMDc4NDcsLjA4MzM0XSw4OTpbMCwuNjgzMzMsLjIyMjIyLDBdLDkwOlswLC42ODMzMywuMDcxNTMsLjA4MzM0XSw5NzpbMCwuNDMwNTYsMCwwXSw5ODpbMCwuNjk0NDQsMCwwXSw5OTpbMCwuNDMwNTYsMCwuMDU1NTZdLDEwMDpbMCwuNjk0NDQsMCwuMTY2NjddLDEwMTpbMCwuNDMwNTYsMCwuMDU1NTZdLDEwMjpbLjE5NDQ0LC42OTQ0NCwuMTA3NjQsLjE2NjY3XSwxMDM6Wy4xOTQ0NCwuNDMwNTYsLjAzNTg4LC4wMjc3OF0sMTA0OlswLC42OTQ0NCwwLDBdLDEwNTpbMCwuNjU5NTIsMCwwXSwxMDY6Wy4xOTQ0NCwuNjU5NTIsLjA1NzI0LDBdLDEwNzpbMCwuNjk0NDQsLjAzMTQ4LDBdLDEwODpbMCwuNjk0NDQsLjAxOTY4LC4wODMzNF0sMTA5OlswLC40MzA1NiwwLDBdLDExMDpbMCwuNDMwNTYsMCwwXSwxMTE6WzAsLjQzMDU2LDAsLjA1NTU2XSwxMTI6Wy4xOTQ0NCwuNDMwNTYsMCwuMDgzMzRdLDExMzpbLjE5NDQ0LC40MzA1NiwuMDM1ODgsLjA4MzM0XSwxMTQ6WzAsLjQzMDU2LC4wMjc3OCwuMDU1NTZdLDExNTpbMCwuNDMwNTYsMCwuMDU1NTZdLDExNjpbMCwuNjE1MDgsMCwuMDgzMzRdLDExNzpbMCwuNDMwNTYsMCwuMDI3NzhdLDExODpbMCwuNDMwNTYsLjAzNTg4LC4wMjc3OF0sMTE5OlswLC40MzA1NiwuMDI2OTEsLjA4MzM0XSwxMjA6WzAsLjQzMDU2LDAsLjAyNzc4XSwxMjE6Wy4xOTQ0NCwuNDMwNTYsLjAzNTg4LC4wNTU1Nl0sMTIyOlswLC40MzA1NiwuMDQzOTgsLjA1NTU2XSw5MTU6WzAsLjY4MzMzLC4xMzg4OSwuMDgzMzRdLDkxNjpbMCwuNjgzMzMsMCwuMTY2NjddLDkyMDpbMCwuNjgzMzMsLjAyNzc4LC4wODMzNF0sOTIzOlswLC42ODMzMywwLC4xNjY2N10sOTI2OlswLC42ODMzMywuMDc1NjksLjA4MzM0XSw5Mjg6WzAsLjY4MzMzLC4wODEyNSwuMDU1NTZdLDkzMTpbMCwuNjgzMzMsLjA1NzY0LC4wODMzNF0sOTMzOlswLC42ODMzMywuMTM4ODksLjA1NTU2XSw5MzQ6WzAsLjY4MzMzLDAsLjA4MzM0XSw5MzY6WzAsLjY4MzMzLC4xMSwuMDU1NTZdLDkzNzpbMCwuNjgzMzMsLjA1MDE3LC4wODMzNF0sOTQ1OlswLC40MzA1NiwuMDAzNywuMDI3NzhdLDk0NjpbLjE5NDQ0LC42OTQ0NCwuMDUyNzgsLjA4MzM0XSw5NDc6Wy4xOTQ0NCwuNDMwNTYsLjA1NTU2LDBdLDk0ODpbMCwuNjk0NDQsLjAzNzg1LC4wNTU1Nl0sOTQ5OlswLC40MzA1NiwwLC4wODMzNF0sOTUwOlsuMTk0NDQsLjY5NDQ0LC4wNzM3OCwuMDgzMzRdLDk1MTpbLjE5NDQ0LC40MzA1NiwuMDM1ODgsLjA1NTU2XSw5NTI6WzAsLjY5NDQ0LC4wMjc3OCwuMDgzMzRdLDk1MzpbMCwuNDMwNTYsMCwuMDU1NTZdLDk1NDpbMCwuNDMwNTYsMCwwXSw5NTU6WzAsLjY5NDQ0LDAsMF0sOTU2OlsuMTk0NDQsLjQzMDU2LDAsLjAyNzc4XSw5NTc6WzAsLjQzMDU2LC4wNjM2NiwuMDI3NzhdLDk1ODpbLjE5NDQ0LC42OTQ0NCwuMDQ2MDEsLjExMTExXSw5NTk6WzAsLjQzMDU2LDAsLjA1NTU2XSw5NjA6WzAsLjQzMDU2LC4wMzU4OCwwXSw5NjE6Wy4xOTQ0NCwuNDMwNTYsMCwuMDgzMzRdLDk2MjpbLjA5NzIyLC40MzA1NiwuMDc5ODYsLjA4MzM0XSw5NjM6WzAsLjQzMDU2LC4wMzU4OCwwXSw5NjQ6WzAsLjQzMDU2LC4xMTMyLC4wMjc3OF0sOTY1OlswLC40MzA1NiwuMDM1ODgsLjAyNzc4XSw5NjY6Wy4xOTQ0NCwuNDMwNTYsMCwuMDgzMzRdLDk2NzpbLjE5NDQ0LC40MzA1NiwwLC4wNTU1Nl0sOTY4OlsuMTk0NDQsLjY5NDQ0LC4wMzU4OCwuMTExMTFdLDk2OTpbMCwuNDMwNTYsLjAzNTg4LDBdLDk3NzpbMCwuNjk0NDQsMCwuMDgzMzRdLDk4MTpbLjE5NDQ0LC42OTQ0NCwwLC4wODMzNF0sOTgyOlswLC40MzA1NiwuMDI3NzgsMF0sMTAwOTpbLjE5NDQ0LC40MzA1NiwwLC4wODMzNF0sMTAxMzpbMCwuNDMwNTYsMCwuMDU1NTZdfSxcIlNhbnNTZXJpZi1SZWd1bGFyXCI6ezMzOlswLC42OTQ0NCwwLDBdLDM0OlswLC42OTQ0NCwwLDBdLDM1OlsuMTk0NDQsLjY5NDQ0LDAsMF0sMzY6Wy4wNTU1NiwuNzUsMCwwXSwzNzpbLjA1NTU2LC43NSwwLDBdLDM4OlswLC42OTQ0NCwwLDBdLDM5OlswLC42OTQ0NCwwLDBdLDQwOlsuMjUsLjc1LDAsMF0sNDE6Wy4yNSwuNzUsMCwwXSw0MjpbMCwuNzUsMCwwXSw0MzpbLjA4MzMzLC41ODMzMywwLDBdLDQ0OlsuMTI1LC4wODMzMywwLDBdLDQ1OlswLC40NDQ0NCwwLDBdLDQ2OlswLC4wODMzMywwLDBdLDQ3OlsuMjUsLjc1LDAsMF0sNDg6WzAsLjY1NTU2LDAsMF0sNDk6WzAsLjY1NTU2LDAsMF0sNTA6WzAsLjY1NTU2LDAsMF0sNTE6WzAsLjY1NTU2LDAsMF0sNTI6WzAsLjY1NTU2LDAsMF0sNTM6WzAsLjY1NTU2LDAsMF0sNTQ6WzAsLjY1NTU2LDAsMF0sNTU6WzAsLjY1NTU2LDAsMF0sNTY6WzAsLjY1NTU2LDAsMF0sNTc6WzAsLjY1NTU2LDAsMF0sNTg6WzAsLjQ0NDQ0LDAsMF0sNTk6Wy4xMjUsLjQ0NDQ0LDAsMF0sNjE6Wy0uMTMsLjM3LDAsMF0sNjM6WzAsLjY5NDQ0LDAsMF0sNjQ6WzAsLjY5NDQ0LDAsMF0sNjU6WzAsLjY5NDQ0LDAsMF0sNjY6WzAsLjY5NDQ0LDAsMF0sNjc6WzAsLjY5NDQ0LDAsMF0sNjg6WzAsLjY5NDQ0LDAsMF0sNjk6WzAsLjY5NDQ0LDAsMF0sNzA6WzAsLjY5NDQ0LDAsMF0sNzE6WzAsLjY5NDQ0LDAsMF0sNzI6WzAsLjY5NDQ0LDAsMF0sNzM6WzAsLjY5NDQ0LDAsMF0sNzQ6WzAsLjY5NDQ0LDAsMF0sNzU6WzAsLjY5NDQ0LDAsMF0sNzY6WzAsLjY5NDQ0LDAsMF0sNzc6WzAsLjY5NDQ0LDAsMF0sNzg6WzAsLjY5NDQ0LDAsMF0sNzk6WzAsLjY5NDQ0LDAsMF0sODA6WzAsLjY5NDQ0LDAsMF0sODE6Wy4xMjUsLjY5NDQ0LDAsMF0sODI6WzAsLjY5NDQ0LDAsMF0sODM6WzAsLjY5NDQ0LDAsMF0sODQ6WzAsLjY5NDQ0LDAsMF0sODU6WzAsLjY5NDQ0LDAsMF0sODY6WzAsLjY5NDQ0LC4wMTM4OSwwXSw4NzpbMCwuNjk0NDQsLjAxMzg5LDBdLDg4OlswLC42OTQ0NCwwLDBdLDg5OlswLC42OTQ0NCwuMDI1LDBdLDkwOlswLC42OTQ0NCwwLDBdLDkxOlsuMjUsLjc1LDAsMF0sOTM6Wy4yNSwuNzUsMCwwXSw5NDpbMCwuNjk0NDQsMCwwXSw5NTpbLjM1LC4wOTQ0NCwuMDI3NzgsMF0sOTc6WzAsLjQ0NDQ0LDAsMF0sOTg6WzAsLjY5NDQ0LDAsMF0sOTk6WzAsLjQ0NDQ0LDAsMF0sMTAwOlswLC42OTQ0NCwwLDBdLDEwMTpbMCwuNDQ0NDQsMCwwXSwxMDI6WzAsLjY5NDQ0LC4wNjk0NCwwXSwxMDM6Wy4xOTQ0NCwuNDQ0NDQsLjAxMzg5LDBdLDEwNDpbMCwuNjk0NDQsMCwwXSwxMDU6WzAsLjY3OTM3LDAsMF0sMTA2OlsuMTk0NDQsLjY3OTM3LDAsMF0sMTA3OlswLC42OTQ0NCwwLDBdLDEwODpbMCwuNjk0NDQsMCwwXSwxMDk6WzAsLjQ0NDQ0LDAsMF0sMTEwOlswLC40NDQ0NCwwLDBdLDExMTpbMCwuNDQ0NDQsMCwwXSwxMTI6Wy4xOTQ0NCwuNDQ0NDQsMCwwXSwxMTM6Wy4xOTQ0NCwuNDQ0NDQsMCwwXSwxMTQ6WzAsLjQ0NDQ0LC4wMTM4OSwwXSwxMTU6WzAsLjQ0NDQ0LDAsMF0sMTE2OlswLC41NzE0MywwLDBdLDExNzpbMCwuNDQ0NDQsMCwwXSwxMTg6WzAsLjQ0NDQ0LC4wMTM4OSwwXSwxMTk6WzAsLjQ0NDQ0LC4wMTM4OSwwXSwxMjA6WzAsLjQ0NDQ0LDAsMF0sMTIxOlsuMTk0NDQsLjQ0NDQ0LC4wMTM4OSwwXSwxMjI6WzAsLjQ0NDQ0LDAsMF0sMTI2OlsuMzUsLjMyNjU5LDAsMF0sMzA1OlswLC40NDQ0NCwwLDBdLDU2NzpbLjE5NDQ0LC40NDQ0NCwwLDBdLDc2ODpbMCwuNjk0NDQsMCwwXSw3Njk6WzAsLjY5NDQ0LDAsMF0sNzcwOlswLC42OTQ0NCwwLDBdLDc3MTpbMCwuNjc2NTksMCwwXSw3NzI6WzAsLjYwODg5LDAsMF0sNzc0OlswLC42OTQ0NCwwLDBdLDc3NTpbMCwuNjc5MzcsMCwwXSw3NzY6WzAsLjY3OTM3LDAsMF0sNzc4OlswLC42OTQ0NCwwLDBdLDc3OTpbMCwuNjk0NDQsMCwwXSw3ODA6WzAsLjYzMTk0LDAsMF0sOTE1OlswLC42OTQ0NCwwLDBdLDkxNjpbMCwuNjk0NDQsMCwwXSw5MjA6WzAsLjY5NDQ0LDAsMF0sOTIzOlswLC42OTQ0NCwwLDBdLDkyNjpbMCwuNjk0NDQsMCwwXSw5Mjg6WzAsLjY5NDQ0LDAsMF0sOTMxOlswLC42OTQ0NCwwLDBdLDkzMzpbMCwuNjk0NDQsMCwwXSw5MzQ6WzAsLjY5NDQ0LDAsMF0sOTM2OlswLC42OTQ0NCwwLDBdLDkzNzpbMCwuNjk0NDQsMCwwXSw4MjExOlswLC40NDQ0NCwuMDI3NzgsMF0sODIxMjpbMCwuNDQ0NDQsLjAyNzc4LDBdLDgyMTY6WzAsLjY5NDQ0LDAsMF0sODIxNzpbMCwuNjk0NDQsMCwwXSw4MjIwOlswLC42OTQ0NCwwLDBdLDgyMjE6WzAsLjY5NDQ0LDAsMF19LFwiU2NyaXB0LVJlZ3VsYXJcIjp7NjU6WzAsLjcsLjIyOTI1LDBdLDY2OlswLC43LC4wNDA4NywwXSw2NzpbMCwuNywuMTY4OSwwXSw2ODpbMCwuNywuMDkzNzEsMF0sNjk6WzAsLjcsLjE4NTgzLDBdLDcwOlswLC43LC4xMzYzNCwwXSw3MTpbMCwuNywuMTczMjIsMF0sNzI6WzAsLjcsLjI5Njk0LDBdLDczOlswLC43LC4xOTE4OSwwXSw3NDpbLjI3Nzc4LC43LC4xOTE4OSwwXSw3NTpbMCwuNywuMzEyNTksMF0sNzY6WzAsLjcsLjE5MTg5LDBdLDc3OlswLC43LC4xNTk4MSwwXSw3ODpbMCwuNywuMzUyNSwwXSw3OTpbMCwuNywuMDgwNzgsMF0sODA6WzAsLjcsLjA4MDc4LDBdLDgxOlswLC43LC4wMzMwNSwwXSw4MjpbMCwuNywuMDYyNTksMF0sODM6WzAsLjcsLjE5MTg5LDBdLDg0OlswLC43LC4yOTA4NywwXSw4NTpbMCwuNywuMjU4MTUsMF0sODY6WzAsLjcsLjI3NTIzLDBdLDg3OlswLC43LC4yNzUyMywwXSw4ODpbMCwuNywuMjYwMDYsMF0sODk6WzAsLjcsLjI5MzksMF0sOTA6WzAsLjcsLjI0MDM3LDBdfSxcIlNpemUxLVJlZ3VsYXJcIjp7NDA6Wy4zNTAwMSwuODUsMCwwXSw0MTpbLjM1MDAxLC44NSwwLDBdLDQ3OlsuMzUwMDEsLjg1LDAsMF0sOTE6Wy4zNTAwMSwuODUsMCwwXSw5MjpbLjM1MDAxLC44NSwwLDBdLDkzOlsuMzUwMDEsLjg1LDAsMF0sMTIzOlsuMzUwMDEsLjg1LDAsMF0sMTI1OlsuMzUwMDEsLjg1LDAsMF0sNzEwOlswLC43MjIyMiwwLDBdLDczMjpbMCwuNzIyMjIsMCwwXSw3NzA6WzAsLjcyMjIyLDAsMF0sNzcxOlswLC43MjIyMiwwLDBdLDgyMTQ6Wy05OWUtNSwuNjAxLDAsMF0sODU5MzpbMWUtNSwuNiwwLDBdLDg1OTU6WzFlLTUsLjYsMCwwXSw4NjU3OlsxZS01LC42LDAsMF0sODY1OTpbMWUtNSwuNiwwLDBdLDg3MTk6Wy4yNTAwMSwuNzUsMCwwXSw4NzIwOlsuMjUwMDEsLjc1LDAsMF0sODcyMTpbLjI1MDAxLC43NSwwLDBdLDg3MzA6Wy4zNTAwMSwuODUsMCwwXSw4NzM5OlstLjAwNTk5LC42MDYsMCwwXSw4NzQxOlstLjAwNTk5LC42MDYsMCwwXSw4NzQ3OlsuMzA2MTIsLjgwNSwuMTk0NDUsMF0sODc0ODpbLjMwNiwuODA1LC4xOTQ0NSwwXSw4NzQ5OlsuMzA2LC44MDUsLjE5NDQ1LDBdLDg3NTA6Wy4zMDYxMiwuODA1LC4xOTQ0NSwwXSw4ODk2OlsuMjUwMDEsLjc1LDAsMF0sODg5NzpbLjI1MDAxLC43NSwwLDBdLDg4OTg6Wy4yNTAwMSwuNzUsMCwwXSw4ODk5OlsuMjUwMDEsLjc1LDAsMF0sODk2ODpbLjM1MDAxLC44NSwwLDBdLDg5Njk6Wy4zNTAwMSwuODUsMCwwXSw4OTcwOlsuMzUwMDEsLjg1LDAsMF0sODk3MTpbLjM1MDAxLC44NSwwLDBdLDkxNjg6Wy05OWUtNSwuNjAxLDAsMF0sMTAyMTY6Wy4zNTAwMSwuODUsMCwwXSwxMDIxNzpbLjM1MDAxLC44NSwwLDBdLDEwNzUyOlsuMjUwMDEsLjc1LDAsMF0sMTA3NTM6Wy4yNTAwMSwuNzUsMCwwXSwxMDc1NDpbLjI1MDAxLC43NSwwLDBdLDEwNzU2OlsuMjUwMDEsLjc1LDAsMF0sMTA3NTg6Wy4yNTAwMSwuNzUsMCwwXX0sXCJTaXplMi1SZWd1bGFyXCI6ezQwOlsuNjUwMDIsMS4xNSwwLDBdLDQxOlsuNjUwMDIsMS4xNSwwLDBdLDQ3OlsuNjUwMDIsMS4xNSwwLDBdLDkxOlsuNjUwMDIsMS4xNSwwLDBdLDkyOlsuNjUwMDIsMS4xNSwwLDBdLDkzOlsuNjUwMDIsMS4xNSwwLDBdLDEyMzpbLjY1MDAyLDEuMTUsMCwwXSwxMjU6Wy42NTAwMiwxLjE1LDAsMF0sNzEwOlswLC43NSwwLDBdLDczMjpbMCwuNzUsMCwwXSw3NzA6WzAsLjc1LDAsMF0sNzcxOlswLC43NSwwLDBdLDg3MTk6Wy41NTAwMSwxLjA1LDAsMF0sODcyMDpbLjU1MDAxLDEuMDUsMCwwXSw4NzIxOlsuNTUwMDEsMS4wNSwwLDBdLDg3MzA6Wy42NTAwMiwxLjE1LDAsMF0sODc0NzpbLjg2MjI1LDEuMzYsLjQ0NDQ1LDBdLDg3NDg6Wy44NjIsMS4zNiwuNDQ0NDUsMF0sODc0OTpbLjg2MiwxLjM2LC40NDQ0NSwwXSw4NzUwOlsuODYyMjUsMS4zNiwuNDQ0NDUsMF0sODg5NjpbLjU1MDAxLDEuMDUsMCwwXSw4ODk3OlsuNTUwMDEsMS4wNSwwLDBdLDg4OTg6Wy41NTAwMSwxLjA1LDAsMF0sODg5OTpbLjU1MDAxLDEuMDUsMCwwXSw4OTY4OlsuNjUwMDIsMS4xNSwwLDBdLDg5Njk6Wy42NTAwMiwxLjE1LDAsMF0sODk3MDpbLjY1MDAyLDEuMTUsMCwwXSw4OTcxOlsuNjUwMDIsMS4xNSwwLDBdLDEwMjE2OlsuNjUwMDIsMS4xNSwwLDBdLDEwMjE3OlsuNjUwMDIsMS4xNSwwLDBdLDEwNzUyOlsuNTUwMDEsMS4wNSwwLDBdLDEwNzUzOlsuNTUwMDEsMS4wNSwwLDBdLDEwNzU0OlsuNTUwMDEsMS4wNSwwLDBdLDEwNzU2OlsuNTUwMDEsMS4wNSwwLDBdLDEwNzU4OlsuNTUwMDEsMS4wNSwwLDBdfSxcIlNpemUzLVJlZ3VsYXJcIjp7NDA6Wy45NTAwMywxLjQ1LDAsMF0sNDE6Wy45NTAwMywxLjQ1LDAsMF0sNDc6Wy45NTAwMywxLjQ1LDAsMF0sOTE6Wy45NTAwMywxLjQ1LDAsMF0sOTI6Wy45NTAwMywxLjQ1LDAsMF0sOTM6Wy45NTAwMywxLjQ1LDAsMF0sMTIzOlsuOTUwMDMsMS40NSwwLDBdLDEyNTpbLjk1MDAzLDEuNDUsMCwwXSw3MTA6WzAsLjc1LDAsMF0sNzMyOlswLC43NSwwLDBdLDc3MDpbMCwuNzUsMCwwXSw3NzE6WzAsLjc1LDAsMF0sODczMDpbLjk1MDAzLDEuNDUsMCwwXSw4OTY4OlsuOTUwMDMsMS40NSwwLDBdLDg5Njk6Wy45NTAwMywxLjQ1LDAsMF0sODk3MDpbLjk1MDAzLDEuNDUsMCwwXSw4OTcxOlsuOTUwMDMsMS40NSwwLDBdLDEwMjE2OlsuOTUwMDMsMS40NSwwLDBdLDEwMjE3OlsuOTUwMDMsMS40NSwwLDBdfSxcIlNpemU0LVJlZ3VsYXJcIjp7NDA6WzEuMjUwMDMsMS43NSwwLDBdLDQxOlsxLjI1MDAzLDEuNzUsMCwwXSw0NzpbMS4yNTAwMywxLjc1LDAsMF0sOTE6WzEuMjUwMDMsMS43NSwwLDBdLDkyOlsxLjI1MDAzLDEuNzUsMCwwXSw5MzpbMS4yNTAwMywxLjc1LDAsMF0sMTIzOlsxLjI1MDAzLDEuNzUsMCwwXSwxMjU6WzEuMjUwMDMsMS43NSwwLDBdLDcxMDpbMCwuODI1LDAsMF0sNzMyOlswLC44MjUsMCwwXSw3NzA6WzAsLjgyNSwwLDBdLDc3MTpbMCwuODI1LDAsMF0sODczMDpbMS4yNTAwMywxLjc1LDAsMF0sODk2ODpbMS4yNTAwMywxLjc1LDAsMF0sODk2OTpbMS4yNTAwMywxLjc1LDAsMF0sODk3MDpbMS4yNTAwMywxLjc1LDAsMF0sODk3MTpbMS4yNTAwMywxLjc1LDAsMF0sOTExNTpbLjY0NTAyLDEuMTU1LDAsMF0sOTExNjpbMWUtNSwuNiwwLDBdLDkxMTc6Wy42NDUwMiwxLjE1NSwwLDBdLDkxMTg6Wy42NDUwMiwxLjE1NSwwLDBdLDkxMTk6WzFlLTUsLjYsMCwwXSw5MTIwOlsuNjQ1MDIsMS4xNTUsMCwwXSw5MTIxOlsuNjQ1MDIsMS4xNTUsMCwwXSw5MTIyOlstOTllLTUsLjYwMSwwLDBdLDkxMjM6Wy42NDUwMiwxLjE1NSwwLDBdLDkxMjQ6Wy42NDUwMiwxLjE1NSwwLDBdLDkxMjU6Wy05OWUtNSwuNjAxLDAsMF0sOTEyNjpbLjY0NTAyLDEuMTU1LDAsMF0sOTEyNzpbMWUtNSwuOSwwLDBdLDkxMjg6Wy42NTAwMiwxLjE1LDAsMF0sOTEyOTpbLjkwMDAxLDAsMCwwXSw5MTMwOlswLC4zLDAsMF0sOTEzMTpbMWUtNSwuOSwwLDBdLDkxMzI6Wy42NTAwMiwxLjE1LDAsMF0sOTEzMzpbLjkwMDAxLDAsMCwwXSw5MTQzOlsuODg1MDIsLjkxNSwwLDBdLDEwMjE2OlsxLjI1MDAzLDEuNzUsMCwwXSwxMDIxNzpbMS4yNTAwMywxLjc1LDAsMF0sNTczNDQ6Wy0uMDA0OTksLjYwNSwwLDBdLDU3MzQ1OlstLjAwNDk5LC42MDUsMCwwXSw1NzY4MDpbMCwuMTIsMCwwXSw1NzY4MTpbMCwuMTIsMCwwXSw1NzY4MjpbMCwuMTIsMCwwXSw1NzY4MzpbMCwuMTIsMCwwXX0sXCJUeXBld3JpdGVyLVJlZ3VsYXJcIjp7MzM6WzAsLjYxMTExLDAsMF0sMzQ6WzAsLjYxMTExLDAsMF0sMzU6WzAsLjYxMTExLDAsMF0sMzY6Wy4wODMzMywuNjk0NDQsMCwwXSwzNzpbLjA4MzMzLC42OTQ0NCwwLDBdLDM4OlswLC42MTExMSwwLDBdLDM5OlswLC42MTExMSwwLDBdLDQwOlsuMDgzMzMsLjY5NDQ0LDAsMF0sNDE6Wy4wODMzMywuNjk0NDQsMCwwXSw0MjpbMCwuNTIwODMsMCwwXSw0MzpbLS4wODA1NiwuNTMwNTUsMCwwXSw0NDpbLjEzODg5LC4xMjUsMCwwXSw0NTpbLS4wODA1NiwuNTMwNTUsMCwwXSw0NjpbMCwuMTI1LDAsMF0sNDc6Wy4wODMzMywuNjk0NDQsMCwwXSw0ODpbMCwuNjExMTEsMCwwXSw0OTpbMCwuNjExMTEsMCwwXSw1MDpbMCwuNjExMTEsMCwwXSw1MTpbMCwuNjExMTEsMCwwXSw1MjpbMCwuNjExMTEsMCwwXSw1MzpbMCwuNjExMTEsMCwwXSw1NDpbMCwuNjExMTEsMCwwXSw1NTpbMCwuNjExMTEsMCwwXSw1NjpbMCwuNjExMTEsMCwwXSw1NzpbMCwuNjExMTEsMCwwXSw1ODpbMCwuNDMwNTYsMCwwXSw1OTpbLjEzODg5LC40MzA1NiwwLDBdLDYwOlstLjA1NTU2LC41NTU1NiwwLDBdLDYxOlstLjE5NTQ5LC40MTU2MiwwLDBdLFxuNjI6Wy0uMDU1NTYsLjU1NTU2LDAsMF0sNjM6WzAsLjYxMTExLDAsMF0sNjQ6WzAsLjYxMTExLDAsMF0sNjU6WzAsLjYxMTExLDAsMF0sNjY6WzAsLjYxMTExLDAsMF0sNjc6WzAsLjYxMTExLDAsMF0sNjg6WzAsLjYxMTExLDAsMF0sNjk6WzAsLjYxMTExLDAsMF0sNzA6WzAsLjYxMTExLDAsMF0sNzE6WzAsLjYxMTExLDAsMF0sNzI6WzAsLjYxMTExLDAsMF0sNzM6WzAsLjYxMTExLDAsMF0sNzQ6WzAsLjYxMTExLDAsMF0sNzU6WzAsLjYxMTExLDAsMF0sNzY6WzAsLjYxMTExLDAsMF0sNzc6WzAsLjYxMTExLDAsMF0sNzg6WzAsLjYxMTExLDAsMF0sNzk6WzAsLjYxMTExLDAsMF0sODA6WzAsLjYxMTExLDAsMF0sODE6Wy4xMzg4OSwuNjExMTEsMCwwXSw4MjpbMCwuNjExMTEsMCwwXSw4MzpbMCwuNjExMTEsMCwwXSw4NDpbMCwuNjExMTEsMCwwXSw4NTpbMCwuNjExMTEsMCwwXSw4NjpbMCwuNjExMTEsMCwwXSw4NzpbMCwuNjExMTEsMCwwXSw4ODpbMCwuNjExMTEsMCwwXSw4OTpbMCwuNjExMTEsMCwwXSw5MDpbMCwuNjExMTEsMCwwXSw5MTpbLjA4MzMzLC42OTQ0NCwwLDBdLDkyOlsuMDgzMzMsLjY5NDQ0LDAsMF0sOTM6Wy4wODMzMywuNjk0NDQsMCwwXSw5NDpbMCwuNjExMTEsMCwwXSw5NTpbLjA5NTE0LDAsMCwwXSw5NjpbMCwuNjExMTEsMCwwXSw5NzpbMCwuNDMwNTYsMCwwXSw5ODpbMCwuNjExMTEsMCwwXSw5OTpbMCwuNDMwNTYsMCwwXSwxMDA6WzAsLjYxMTExLDAsMF0sMTAxOlswLC40MzA1NiwwLDBdLDEwMjpbMCwuNjExMTEsMCwwXSwxMDM6Wy4yMjIyMiwuNDMwNTYsMCwwXSwxMDQ6WzAsLjYxMTExLDAsMF0sMTA1OlswLC42MTExMSwwLDBdLDEwNjpbLjIyMjIyLC42MTExMSwwLDBdLDEwNzpbMCwuNjExMTEsMCwwXSwxMDg6WzAsLjYxMTExLDAsMF0sMTA5OlswLC40MzA1NiwwLDBdLDExMDpbMCwuNDMwNTYsMCwwXSwxMTE6WzAsLjQzMDU2LDAsMF0sMTEyOlsuMjIyMjIsLjQzMDU2LDAsMF0sMTEzOlsuMjIyMjIsLjQzMDU2LDAsMF0sMTE0OlswLC40MzA1NiwwLDBdLDExNTpbMCwuNDMwNTYsMCwwXSwxMTY6WzAsLjU1MzU4LDAsMF0sMTE3OlswLC40MzA1NiwwLDBdLDExODpbMCwuNDMwNTYsMCwwXSwxMTk6WzAsLjQzMDU2LDAsMF0sMTIwOlswLC40MzA1NiwwLDBdLDEyMTpbLjIyMjIyLC40MzA1NiwwLDBdLDEyMjpbMCwuNDMwNTYsMCwwXSwxMjM6Wy4wODMzMywuNjk0NDQsMCwwXSwxMjQ6Wy4wODMzMywuNjk0NDQsMCwwXSwxMjU6Wy4wODMzMywuNjk0NDQsMCwwXSwxMjY6WzAsLjYxMTExLDAsMF0sMTI3OlswLC42MTExMSwwLDBdLDMwNTpbMCwuNDMwNTYsMCwwXSw1Njc6Wy4yMjIyMiwuNDMwNTYsMCwwXSw3Njg6WzAsLjYxMTExLDAsMF0sNzY5OlswLC42MTExMSwwLDBdLDc3MDpbMCwuNjExMTEsMCwwXSw3NzE6WzAsLjYxMTExLDAsMF0sNzcyOlswLC41NjU1NSwwLDBdLDc3NDpbMCwuNjExMTEsMCwwXSw3NzY6WzAsLjYxMTExLDAsMF0sNzc4OlswLC42MTExMSwwLDBdLDc4MDpbMCwuNTY1OTcsMCwwXSw5MTU6WzAsLjYxMTExLDAsMF0sOTE2OlswLC42MTExMSwwLDBdLDkyMDpbMCwuNjExMTEsMCwwXSw5MjM6WzAsLjYxMTExLDAsMF0sOTI2OlswLC42MTExMSwwLDBdLDkyODpbMCwuNjExMTEsMCwwXSw5MzE6WzAsLjYxMTExLDAsMF0sOTMzOlswLC42MTExMSwwLDBdLDkzNDpbMCwuNjExMTEsMCwwXSw5MzY6WzAsLjYxMTExLDAsMF0sOTM3OlswLC42MTExMSwwLDBdLDIwMTg6WzAsLjYxMTExLDAsMF0sMjAxOTpbMCwuNjExMTEsMCwwXSw4MjQyOlswLC42MTExMSwwLDBdfX19LHt9XSwxOTpbZnVuY3Rpb24oZSx0LHIpe3ZhciBhPWUoXCIuL3V0aWxzXCIpO3ZhciBpPWUoXCIuL1BhcnNlRXJyb3JcIik7ZnVuY3Rpb24gbihlLHIsYSl7aWYodHlwZW9mIGU9PT1cInN0cmluZ1wiKXtlPVtlXX1pZih0eXBlb2Ygcj09PVwibnVtYmVyXCIpe3I9e251bUFyZ3M6cn19dmFyIGk9e251bUFyZ3M6ci5udW1BcmdzLGFyZ1R5cGVzOnIuYXJnVHlwZXMsZ3JlZWRpbmVzczpyLmdyZWVkaW5lc3M9PT11bmRlZmluZWQ/MTpyLmdyZWVkaW5lc3MsYWxsb3dlZEluVGV4dDohIXIuYWxsb3dlZEluVGV4dCxudW1PcHRpb25hbEFyZ3M6ci5udW1PcHRpb25hbEFyZ3N8fDAsaW5maXg6ISFyLmluZml4LGhhbmRsZXI6YX07Zm9yKHZhciBuPTA7bjxlLmxlbmd0aDsrK24pe3QuZXhwb3J0c1tlW25dXT1pfX1uKFwiXFxcXHNxcnRcIix7bnVtQXJnczoxLG51bU9wdGlvbmFsQXJnczoxfSxmdW5jdGlvbihlLHQpe3ZhciByPXRbMF07dmFyIGE9dFsxXTtyZXR1cm57dHlwZTpcInNxcnRcIixib2R5OmEsaW5kZXg6cn19KTtuKFwiXFxcXHRleHRcIix7bnVtQXJnczoxLGFyZ1R5cGVzOltcInRleHRcIl0sZ3JlZWRpbmVzczoyfSxmdW5jdGlvbihlLHQpe3ZhciByPXRbMF07dmFyIGE7aWYoci50eXBlPT09XCJvcmRncm91cFwiKXthPXIudmFsdWV9ZWxzZXthPVtyXX1yZXR1cm57dHlwZTpcInRleHRcIixib2R5OmF9fSk7bihcIlxcXFx4bWxDbGFzc1wiLHtudW1BcmdzOjIsYWxsb3dlZEluVGV4dDp0cnVlLGdyZWVkaW5lc3M6MyxhcmdUeXBlczpbXCJzdHJpbmdcIixcIm9yaWdpbmFsXCJdfSxmdW5jdGlvbihlLHQpe3ZhciByPXRbMF07dmFyIGE9dFsxXTt2YXIgaTtpZihhLnR5cGU9PT1cIm9yZGdyb3VwXCIpe2k9YS52YWx1ZX1lbHNle2k9W2FdfXJldHVybnt0eXBlOlwieG1sQ2xhc3NcIixjbDpyLHZhbHVlOml9fSk7bihcIlxcXFxjb2xvclwiLHtudW1BcmdzOjIsYWxsb3dlZEluVGV4dDp0cnVlLGdyZWVkaW5lc3M6MyxhcmdUeXBlczpbXCJjb2xvclwiLFwib3JpZ2luYWxcIl19LGZ1bmN0aW9uKGUsdCl7dmFyIHI9dFswXTt2YXIgYT10WzFdO3ZhciBpO2lmKGEudHlwZT09PVwib3JkZ3JvdXBcIil7aT1hLnZhbHVlfWVsc2V7aT1bYV19cmV0dXJue3R5cGU6XCJjb2xvclwiLGNvbG9yOnIudmFsdWUsdmFsdWU6aX19KTtuKFwiXFxcXG92ZXJsaW5lXCIse251bUFyZ3M6MX0sZnVuY3Rpb24oZSx0KXt2YXIgcj10WzBdO3JldHVybnt0eXBlOlwib3ZlcmxpbmVcIixib2R5OnJ9fSk7bihcIlxcXFx1bmRlcmxpbmVcIix7bnVtQXJnczoxfSxmdW5jdGlvbihlLHQpe3ZhciByPXRbMF07cmV0dXJue3R5cGU6XCJ1bmRlcmxpbmVcIixib2R5OnJ9fSk7bihcIlxcXFxydWxlXCIse251bUFyZ3M6MixudW1PcHRpb25hbEFyZ3M6MSxhcmdUeXBlczpbXCJzaXplXCIsXCJzaXplXCIsXCJzaXplXCJdfSxmdW5jdGlvbihlLHQpe3ZhciByPXRbMF07dmFyIGE9dFsxXTt2YXIgaT10WzJdO3JldHVybnt0eXBlOlwicnVsZVwiLHNoaWZ0OnImJnIudmFsdWUsd2lkdGg6YS52YWx1ZSxoZWlnaHQ6aS52YWx1ZX19KTtuKFwiXFxcXGN1cnNvclwiLHtudW1BcmdzOjEsbnVtT3B0aW9uYWxBcmdzOjEsYXJnVHlwZXM6W1wic2l6ZVwiLFwic2l6ZVwiXX0sZnVuY3Rpb24oZSx0KXt2YXIgcj10WzBdO3ZhciBhPXRbMV07cmV0dXJue3R5cGU6XCJjdXJzb3JcIixzaGlmdDpyJiZyLnZhbHVlLGhlaWdodDphLnZhbHVlfX0pO24oXCJcXFxca2VyblwiLHtudW1BcmdzOjEsYXJnVHlwZXM6W1wic2l6ZVwiXX0sZnVuY3Rpb24oZSx0KXtyZXR1cm57dHlwZTpcImtlcm5cIixkaW1lbnNpb246dFswXS52YWx1ZX19KTtuKFwiXFxcXEthVGVYXCIse251bUFyZ3M6MH0sZnVuY3Rpb24oZSl7cmV0dXJue3R5cGU6XCJrYXRleFwifX0pO24oXCJcXFxccGhhbnRvbVwiLHtudW1BcmdzOjF9LGZ1bmN0aW9uKGUsdCl7dmFyIHI9dFswXTt2YXIgYTtpZihyLnR5cGU9PT1cIm9yZGdyb3VwXCIpe2E9ci52YWx1ZX1lbHNle2E9W3JdfXJldHVybnt0eXBlOlwicGhhbnRvbVwiLHZhbHVlOmF9fSk7dmFyIHM9e1wiXFxcXGJpZ2xcIjp7dHlwZTpcIm9wZW5cIixzaXplOjF9LFwiXFxcXEJpZ2xcIjp7dHlwZTpcIm9wZW5cIixzaXplOjJ9LFwiXFxcXGJpZ2dsXCI6e3R5cGU6XCJvcGVuXCIsc2l6ZTozfSxcIlxcXFxCaWdnbFwiOnt0eXBlOlwib3BlblwiLHNpemU6NH0sXCJcXFxcYmlnclwiOnt0eXBlOlwiY2xvc2VcIixzaXplOjF9LFwiXFxcXEJpZ3JcIjp7dHlwZTpcImNsb3NlXCIsc2l6ZToyfSxcIlxcXFxiaWdnclwiOnt0eXBlOlwiY2xvc2VcIixzaXplOjN9LFwiXFxcXEJpZ2dyXCI6e3R5cGU6XCJjbG9zZVwiLHNpemU6NH0sXCJcXFxcYmlnbVwiOnt0eXBlOlwicmVsXCIsc2l6ZToxfSxcIlxcXFxCaWdtXCI6e3R5cGU6XCJyZWxcIixzaXplOjJ9LFwiXFxcXGJpZ2dtXCI6e3R5cGU6XCJyZWxcIixzaXplOjN9LFwiXFxcXEJpZ2dtXCI6e3R5cGU6XCJyZWxcIixzaXplOjR9LFwiXFxcXGJpZ1wiOnt0eXBlOlwidGV4dG9yZFwiLHNpemU6MX0sXCJcXFxcQmlnXCI6e3R5cGU6XCJ0ZXh0b3JkXCIsc2l6ZToyfSxcIlxcXFxiaWdnXCI6e3R5cGU6XCJ0ZXh0b3JkXCIsc2l6ZTozfSxcIlxcXFxCaWdnXCI6e3R5cGU6XCJ0ZXh0b3JkXCIsc2l6ZTo0fX07dmFyIGw9W1wiKFwiLFwiKVwiLFwiW1wiLFwiXFxcXGxicmFja1wiLFwiXVwiLFwiXFxcXHJicmFja1wiLFwiXFxcXHtcIixcIlxcXFxsYnJhY2VcIixcIlxcXFx9XCIsXCJcXFxccmJyYWNlXCIsXCJcXFxcbGZsb29yXCIsXCJcXFxccmZsb29yXCIsXCJcXFxcbGNlaWxcIixcIlxcXFxyY2VpbFwiLFwiPFwiLFwiPlwiLFwiXFxcXGxhbmdsZVwiLFwiXFxcXHJhbmdsZVwiLFwiXFxcXGx0XCIsXCJcXFxcZ3RcIixcIlxcXFxsdmVydFwiLFwiXFxcXHJ2ZXJ0XCIsXCJcXFxcbFZlcnRcIixcIlxcXFxyVmVydFwiLFwiXFxcXGxncm91cFwiLFwiXFxcXHJncm91cFwiLFwiXFxcXGxtb3VzdGFjaGVcIixcIlxcXFxybW91c3RhY2hlXCIsXCIvXCIsXCJcXFxcYmFja3NsYXNoXCIsXCJ8XCIsXCJcXFxcdmVydFwiLFwiXFxcXHxcIixcIlxcXFxWZXJ0XCIsXCJcXFxcdXBhcnJvd1wiLFwiXFxcXFVwYXJyb3dcIixcIlxcXFxkb3duYXJyb3dcIixcIlxcXFxEb3duYXJyb3dcIixcIlxcXFx1cGRvd25hcnJvd1wiLFwiXFxcXFVwZG93bmFycm93XCIsXCIuXCJdO3ZhciBvPXtcIlxcXFxCYmJcIjpcIlxcXFxtYXRoYmJcIixcIlxcXFxib2xkXCI6XCJcXFxcbWF0aGJmXCIsXCJcXFxcZnJha1wiOlwiXFxcXG1hdGhmcmFrXCJ9O24oW1wiXFxcXGJsdWVcIixcIlxcXFxvcmFuZ2VcIixcIlxcXFxwaW5rXCIsXCJcXFxccmVkXCIsXCJcXFxcZ3JlZW5cIixcIlxcXFxncmF5XCIsXCJcXFxccHVycGxlXCIsXCJcXFxcYmx1ZUFcIixcIlxcXFxibHVlQlwiLFwiXFxcXGJsdWVDXCIsXCJcXFxcYmx1ZURcIixcIlxcXFxibHVlRVwiLFwiXFxcXHRlYWxBXCIsXCJcXFxcdGVhbEJcIixcIlxcXFx0ZWFsQ1wiLFwiXFxcXHRlYWxEXCIsXCJcXFxcdGVhbEVcIixcIlxcXFxncmVlbkFcIixcIlxcXFxncmVlbkJcIixcIlxcXFxncmVlbkNcIixcIlxcXFxncmVlbkRcIixcIlxcXFxncmVlbkVcIixcIlxcXFxnb2xkQVwiLFwiXFxcXGdvbGRCXCIsXCJcXFxcZ29sZENcIixcIlxcXFxnb2xkRFwiLFwiXFxcXGdvbGRFXCIsXCJcXFxccmVkQVwiLFwiXFxcXHJlZEJcIixcIlxcXFxyZWRDXCIsXCJcXFxccmVkRFwiLFwiXFxcXHJlZEVcIixcIlxcXFxtYXJvb25BXCIsXCJcXFxcbWFyb29uQlwiLFwiXFxcXG1hcm9vbkNcIixcIlxcXFxtYXJvb25EXCIsXCJcXFxcbWFyb29uRVwiLFwiXFxcXHB1cnBsZUFcIixcIlxcXFxwdXJwbGVCXCIsXCJcXFxccHVycGxlQ1wiLFwiXFxcXHB1cnBsZURcIixcIlxcXFxwdXJwbGVFXCIsXCJcXFxcbWludEFcIixcIlxcXFxtaW50QlwiLFwiXFxcXG1pbnRDXCIsXCJcXFxcZ3JheUFcIixcIlxcXFxncmF5QlwiLFwiXFxcXGdyYXlDXCIsXCJcXFxcZ3JheURcIixcIlxcXFxncmF5RVwiLFwiXFxcXGdyYXlGXCIsXCJcXFxcZ3JheUdcIixcIlxcXFxncmF5SFwiLFwiXFxcXGdyYXlJXCIsXCJcXFxca2FCbHVlXCIsXCJcXFxca2FHcmVlblwiXSx7bnVtQXJnczoxLGFsbG93ZWRJblRleHQ6dHJ1ZSxncmVlZGluZXNzOjN9LGZ1bmN0aW9uKGUsdCl7dmFyIHI9dFswXTt2YXIgYTtpZihyLnR5cGU9PT1cIm9yZGdyb3VwXCIpe2E9ci52YWx1ZX1lbHNle2E9W3JdfXJldHVybnt0eXBlOlwiY29sb3JcIixjb2xvcjpcImthdGV4LVwiK2UuZnVuY05hbWUuc2xpY2UoMSksdmFsdWU6YX19KTtuKFtcIlxcXFxhcmNzaW5cIixcIlxcXFxhcmNjb3NcIixcIlxcXFxhcmN0YW5cIixcIlxcXFxhcmdcIixcIlxcXFxjb3NcIixcIlxcXFxjb3NoXCIsXCJcXFxcY290XCIsXCJcXFxcY290aFwiLFwiXFxcXGNzY1wiLFwiXFxcXGRlZ1wiLFwiXFxcXGRpbVwiLFwiXFxcXGV4cFwiLFwiXFxcXGhvbVwiLFwiXFxcXGtlclwiLFwiXFxcXGxnXCIsXCJcXFxcbG5cIixcIlxcXFxsb2dcIixcIlxcXFxzZWNcIixcIlxcXFxzaW5cIixcIlxcXFxzaW5oXCIsXCJcXFxcdGFuXCIsXCJcXFxcdGFuaFwiXSx7bnVtQXJnczowfSxmdW5jdGlvbihlKXtyZXR1cm57dHlwZTpcIm9wXCIsbGltaXRzOmZhbHNlLHN5bWJvbDpmYWxzZSxib2R5OmUuZnVuY05hbWV9fSk7bihbXCJcXFxcZGV0XCIsXCJcXFxcZ2NkXCIsXCJcXFxcaW5mXCIsXCJcXFxcbGltXCIsXCJcXFxcbGltaW5mXCIsXCJcXFxcbGltc3VwXCIsXCJcXFxcbWF4XCIsXCJcXFxcbWluXCIsXCJcXFxcUHJcIixcIlxcXFxzdXBcIl0se251bUFyZ3M6MH0sZnVuY3Rpb24oZSl7cmV0dXJue3R5cGU6XCJvcFwiLGxpbWl0czp0cnVlLHN5bWJvbDpmYWxzZSxib2R5OmUuZnVuY05hbWV9fSk7bihbXCJcXFxcaW50XCIsXCJcXFxcaWludFwiLFwiXFxcXGlpaW50XCIsXCJcXFxcb2ludFwiXSx7bnVtQXJnczowfSxmdW5jdGlvbihlKXtyZXR1cm57dHlwZTpcIm9wXCIsbGltaXRzOmZhbHNlLHN5bWJvbDp0cnVlLGJvZHk6ZS5mdW5jTmFtZX19KTtuKFtcIlxcXFxjb3Byb2RcIixcIlxcXFxiaWd2ZWVcIixcIlxcXFxiaWd3ZWRnZVwiLFwiXFxcXGJpZ3VwbHVzXCIsXCJcXFxcYmlnY2FwXCIsXCJcXFxcYmlnY3VwXCIsXCJcXFxcaW50b3BcIixcIlxcXFxwcm9kXCIsXCJcXFxcc3VtXCIsXCJcXFxcYmlnb3RpbWVzXCIsXCJcXFxcYmlnb3BsdXNcIixcIlxcXFxiaWdvZG90XCIsXCJcXFxcYmlnc3FjdXBcIixcIlxcXFxzbWFsbGludFwiXSx7bnVtQXJnczowfSxmdW5jdGlvbihlKXtyZXR1cm57dHlwZTpcIm9wXCIsbGltaXRzOnRydWUsc3ltYm9sOnRydWUsYm9keTplLmZ1bmNOYW1lfX0pO24oW1wiXFxcXGRmcmFjXCIsXCJcXFxcZnJhY1wiLFwiXFxcXHRmcmFjXCIsXCJcXFxcZGJpbm9tXCIsXCJcXFxcYmlub21cIixcIlxcXFx0Ymlub21cIl0se251bUFyZ3M6MixncmVlZGluZXNzOjJ9LGZ1bmN0aW9uKGUsdCl7dmFyIHI9dFswXTt2YXIgYT10WzFdO3ZhciBpO3ZhciBuPW51bGw7dmFyIHM9bnVsbDt2YXIgbD1cImF1dG9cIjtzd2l0Y2goZS5mdW5jTmFtZSl7Y2FzZVwiXFxcXGRmcmFjXCI6Y2FzZVwiXFxcXGZyYWNcIjpjYXNlXCJcXFxcdGZyYWNcIjppPXRydWU7YnJlYWs7Y2FzZVwiXFxcXGRiaW5vbVwiOmNhc2VcIlxcXFxiaW5vbVwiOmNhc2VcIlxcXFx0Ymlub21cIjppPWZhbHNlO249XCIoXCI7cz1cIilcIjticmVhaztkZWZhdWx0OnRocm93IG5ldyBFcnJvcihcIlVucmVjb2duaXplZCBnZW5mcmFjIGNvbW1hbmRcIil9c3dpdGNoKGUuZnVuY05hbWUpe2Nhc2VcIlxcXFxkZnJhY1wiOmNhc2VcIlxcXFxkYmlub21cIjpsPVwiZGlzcGxheVwiO2JyZWFrO2Nhc2VcIlxcXFx0ZnJhY1wiOmNhc2VcIlxcXFx0Ymlub21cIjpsPVwidGV4dFwiO2JyZWFrfXJldHVybnt0eXBlOlwiZ2VuZnJhY1wiLG51bWVyOnIsZGVub206YSxoYXNCYXJMaW5lOmksbGVmdERlbGltOm4scmlnaHREZWxpbTpzLHNpemU6bH19KTtuKFtcIlxcXFxsbGFwXCIsXCJcXFxccmxhcFwiXSx7bnVtQXJnczoxLGFsbG93ZWRJblRleHQ6dHJ1ZX0sZnVuY3Rpb24oZSx0KXt2YXIgcj10WzBdO3JldHVybnt0eXBlOmUuZnVuY05hbWUuc2xpY2UoMSksYm9keTpyfX0pO24oW1wiXFxcXGJpZ2xcIixcIlxcXFxCaWdsXCIsXCJcXFxcYmlnZ2xcIixcIlxcXFxCaWdnbFwiLFwiXFxcXGJpZ3JcIixcIlxcXFxCaWdyXCIsXCJcXFxcYmlnZ3JcIixcIlxcXFxCaWdnclwiLFwiXFxcXGJpZ21cIixcIlxcXFxCaWdtXCIsXCJcXFxcYmlnZ21cIixcIlxcXFxCaWdnbVwiLFwiXFxcXGJpZ1wiLFwiXFxcXEJpZ1wiLFwiXFxcXGJpZ2dcIixcIlxcXFxCaWdnXCIsXCJcXFxcbGVmdFwiLFwiXFxcXHJpZ2h0XCJdLHtudW1BcmdzOjF9LGZ1bmN0aW9uKGUsdCl7dmFyIHI9dFswXTtpZighYS5jb250YWlucyhsLHIudmFsdWUpKXt0aHJvdyBuZXcgaShcIkludmFsaWQgZGVsaW1pdGVyOiAnXCIrci52YWx1ZStcIicgYWZ0ZXIgJ1wiK2UuZnVuY05hbWUrXCInXCIscil9aWYoZS5mdW5jTmFtZT09PVwiXFxcXGxlZnRcInx8ZS5mdW5jTmFtZT09PVwiXFxcXHJpZ2h0XCIpe3JldHVybnt0eXBlOlwibGVmdHJpZ2h0XCIsdmFsdWU6ci52YWx1ZX19ZWxzZXtyZXR1cm57dHlwZTpcImRlbGltc2l6aW5nXCIsc2l6ZTpzW2UuZnVuY05hbWVdLnNpemUsZGVsaW1UeXBlOnNbZS5mdW5jTmFtZV0udHlwZSx2YWx1ZTpyLnZhbHVlfX19KTtuKFtcIlxcXFx0aW55XCIsXCJcXFxcc2NyaXB0c2l6ZVwiLFwiXFxcXGZvb3Rub3Rlc2l6ZVwiLFwiXFxcXHNtYWxsXCIsXCJcXFxcbm9ybWFsc2l6ZVwiLFwiXFxcXGxhcmdlXCIsXCJcXFxcTGFyZ2VcIixcIlxcXFxMQVJHRVwiLFwiXFxcXGh1Z2VcIixcIlxcXFxIdWdlXCJdLDAsbnVsbCk7bihbXCJcXFxcZGlzcGxheXN0eWxlXCIsXCJcXFxcdGV4dHN0eWxlXCIsXCJcXFxcc2NyaXB0c3R5bGVcIixcIlxcXFxzY3JpcHRzY3JpcHRzdHlsZVwiXSwwLG51bGwpO24oW1wiXFxcXG1hdGhybVwiLFwiXFxcXG1hdGhpdFwiLFwiXFxcXG1hdGhiZlwiLFwiXFxcXG1hdGhiYlwiLFwiXFxcXG1hdGhjYWxcIixcIlxcXFxtYXRoZnJha1wiLFwiXFxcXG1hdGhzY3JcIixcIlxcXFxtYXRoc2ZcIixcIlxcXFxtYXRodHRcIixcIlxcXFxCYmJcIixcIlxcXFxib2xkXCIsXCJcXFxcZnJha1wiXSx7bnVtQXJnczoxLGdyZWVkaW5lc3M6Mn0sZnVuY3Rpb24oZSx0KXt2YXIgcj10WzBdO3ZhciBhPWUuZnVuY05hbWU7aWYoYSBpbiBvKXthPW9bYV19cmV0dXJue3R5cGU6XCJmb250XCIsZm9udDphLnNsaWNlKDEpLGJvZHk6cn19KTtuKFtcIlxcXFxhY3V0ZVwiLFwiXFxcXGdyYXZlXCIsXCJcXFxcZGRvdFwiLFwiXFxcXHRpbGRlXCIsXCJcXFxcYmFyXCIsXCJcXFxcYnJldmVcIixcIlxcXFxjaGVja1wiLFwiXFxcXGhhdFwiLFwiXFxcXHZlY1wiLFwiXFxcXGRvdFwiXSx7bnVtQXJnczoxfSxmdW5jdGlvbihlLHQpe3ZhciByPXRbMF07cmV0dXJue3R5cGU6XCJhY2NlbnRcIixhY2NlbnQ6ZS5mdW5jTmFtZSxiYXNlOnJ9fSk7bihbXCJcXFxcb3ZlclwiLFwiXFxcXGNob29zZVwiXSx7bnVtQXJnczowLGluZml4OnRydWV9LGZ1bmN0aW9uKGUpe3ZhciB0O3N3aXRjaChlLmZ1bmNOYW1lKXtjYXNlXCJcXFxcb3ZlclwiOnQ9XCJcXFxcZnJhY1wiO2JyZWFrO2Nhc2VcIlxcXFxjaG9vc2VcIjp0PVwiXFxcXGJpbm9tXCI7YnJlYWs7ZGVmYXVsdDp0aHJvdyBuZXcgRXJyb3IoXCJVbnJlY29nbml6ZWQgaW5maXggZ2VuZnJhYyBjb21tYW5kXCIpfXJldHVybnt0eXBlOlwiaW5maXhcIixyZXBsYWNlV2l0aDp0LHRva2VuOmUudG9rZW59fSk7bihbXCJcXFxcXFxcXFwiLFwiXFxcXGNyXCJdLHtudW1BcmdzOjAsbnVtT3B0aW9uYWxBcmdzOjEsYXJnVHlwZXM6W1wic2l6ZVwiXX0sZnVuY3Rpb24oZSx0KXt2YXIgcj10WzBdO3JldHVybnt0eXBlOlwiY3JcIixzaXplOnJ9fSk7bihbXCJcXFxcYmVnaW5cIixcIlxcXFxlbmRcIl0se251bUFyZ3M6MSxhcmdUeXBlczpbXCJ0ZXh0XCJdfSxmdW5jdGlvbihlLHQpe3ZhciByPXRbMF07aWYoci50eXBlIT09XCJvcmRncm91cFwiKXt0aHJvdyBuZXcgaShcIkludmFsaWQgZW52aXJvbm1lbnQgbmFtZVwiLHIpfXZhciBhPVwiXCI7Zm9yKHZhciBuPTA7bjxyLnZhbHVlLmxlbmd0aDsrK24pe2ErPXIudmFsdWVbbl0udmFsdWV9cmV0dXJue3R5cGU6XCJlbnZpcm9ubWVudFwiLG5hbWU6YSxuYW1lR3JvdXA6cn19KX0se1wiLi9QYXJzZUVycm9yXCI6NixcIi4vdXRpbHNcIjoyNX1dLDIwOltmdW5jdGlvbihlLHQscil7dmFyIGE9ZShcIi4vdXRpbHNcIik7ZnVuY3Rpb24gaShlLHQpe3RoaXMudHlwZT1lO3RoaXMuYXR0cmlidXRlcz17fTt0aGlzLmNoaWxkcmVuPXR8fFtdfWkucHJvdG90eXBlLnNldEF0dHJpYnV0ZT1mdW5jdGlvbihlLHQpe3RoaXMuYXR0cmlidXRlc1tlXT10fTtpLnByb3RvdHlwZS50b05vZGU9ZnVuY3Rpb24oKXt2YXIgZT1kb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoXCJodHRwOi8vd3d3LnczLm9yZy8xOTk4L01hdGgvTWF0aE1MXCIsdGhpcy50eXBlKTtmb3IodmFyIHQgaW4gdGhpcy5hdHRyaWJ1dGVzKXtpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodGhpcy5hdHRyaWJ1dGVzLHQpKXtlLnNldEF0dHJpYnV0ZSh0LHRoaXMuYXR0cmlidXRlc1t0XSl9fWZvcih2YXIgcj0wO3I8dGhpcy5jaGlsZHJlbi5sZW5ndGg7cisrKXtlLmFwcGVuZENoaWxkKHRoaXMuY2hpbGRyZW5bcl0udG9Ob2RlKCkpfXJldHVybiBlfTtpLnByb3RvdHlwZS50b01hcmt1cD1mdW5jdGlvbigpe3ZhciBlPVwiPFwiK3RoaXMudHlwZTtmb3IodmFyIHQgaW4gdGhpcy5hdHRyaWJ1dGVzKXtpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodGhpcy5hdHRyaWJ1dGVzLHQpKXtlKz1cIiBcIit0Kyc9XCInO2UrPWEuZXNjYXBlKHRoaXMuYXR0cmlidXRlc1t0XSk7ZSs9J1wiJ319ZSs9XCI+XCI7Zm9yKHZhciByPTA7cjx0aGlzLmNoaWxkcmVuLmxlbmd0aDtyKyspe2UrPXRoaXMuY2hpbGRyZW5bcl0udG9NYXJrdXAoKX1lKz1cIjwvXCIrdGhpcy50eXBlK1wiPlwiO3JldHVybiBlfTtmdW5jdGlvbiBuKGUpe3RoaXMudGV4dD1lfW4ucHJvdG90eXBlLnRvTm9kZT1mdW5jdGlvbigpe3JldHVybiBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSh0aGlzLnRleHQpfTtuLnByb3RvdHlwZS50b01hcmt1cD1mdW5jdGlvbigpe3JldHVybiBhLmVzY2FwZSh0aGlzLnRleHQpfTt0LmV4cG9ydHM9e01hdGhOb2RlOmksVGV4dE5vZGU6bn19LHtcIi4vdXRpbHNcIjoyNX1dLDIxOltmdW5jdGlvbihlLHQscil7ZnVuY3Rpb24gYShlLHQscixhLGkpe3RoaXMudHlwZT1lO3RoaXMudmFsdWU9dDt0aGlzLm1vZGU9cjtpZihhJiYoIWl8fGkubGV4ZXI9PT1hLmxleGVyKSl7dGhpcy5sZXhlcj1hLmxleGVyO3RoaXMuc3RhcnQ9YS5zdGFydDt0aGlzLmVuZD0oaXx8YSkuZW5kfX10LmV4cG9ydHM9e1BhcnNlTm9kZTphfX0se31dLDIyOltmdW5jdGlvbihlLHQscil7dmFyIGE9ZShcIi4vUGFyc2VyXCIpO3ZhciBpPWZ1bmN0aW9uKGUsdCl7aWYoISh0eXBlb2YgZT09PVwic3RyaW5nXCJ8fGUgaW5zdGFuY2VvZiBTdHJpbmcpKXt0aHJvdyBuZXcgVHlwZUVycm9yKFwiS2FUZVggY2FuIG9ubHkgcGFyc2Ugc3RyaW5nIHR5cGVkIGV4cHJlc3Npb25cIil9dmFyIHI9bmV3IGEoZSx0KTtyZXR1cm4gci5wYXJzZSgpfTt0LmV4cG9ydHM9aX0se1wiLi9QYXJzZXJcIjo3fV0sMjM6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9e21hdGg6e30sdGV4dDp7fX07ZnVuY3Rpb24gYShlLHIsYSxpLG4pe3QuZXhwb3J0c1tlXVtuXT17Zm9udDpyLGdyb3VwOmEscmVwbGFjZTppfX12YXIgaT1cIm1hdGhcIjt2YXIgbj1cInRleHRcIjt2YXIgcz1cIm1haW5cIjt2YXIgbD1cImFtc1wiO3ZhciBvPVwiYWNjZW50XCI7dmFyIHU9XCJiaW5cIjt2YXIgcD1cImNsb3NlXCI7dmFyIGg9XCJpbm5lclwiO3ZhciBjPVwibWF0aG9yZFwiO3ZhciB2PVwib3BcIjt2YXIgZj1cIm9wZW5cIjt2YXIgbT1cInB1bmN0XCI7dmFyIGQ9XCJyZWxcIjt2YXIgZz1cInNwYWNpbmdcIjt2YXIgeT1cInRleHRvcmRcIjthKGkscyxkLFwiXFx1MjI2MVwiLFwiXFxcXGVxdWl2XCIpO2EoaSxzLGQsXCJcXHUyMjdhXCIsXCJcXFxccHJlY1wiKTthKGkscyxkLFwiXFx1MjI3YlwiLFwiXFxcXHN1Y2NcIik7YShpLHMsZCxcIlxcdTIyM2NcIixcIlxcXFxzaW1cIik7YShpLHMsZCxcIlxcdTIyYTVcIixcIlxcXFxwZXJwXCIpO2EoaSxzLGQsXCJcXHUyYWFmXCIsXCJcXFxccHJlY2VxXCIpO2EoaSxzLGQsXCJcXHUyYWIwXCIsXCJcXFxcc3VjY2VxXCIpO2EoaSxzLGQsXCJcXHUyMjQzXCIsXCJcXFxcc2ltZXFcIik7YShpLHMsZCxcIlxcdTIyMjNcIixcIlxcXFxtaWRcIik7YShpLHMsZCxcIlxcdTIyNmFcIixcIlxcXFxsbFwiKTthKGkscyxkLFwiXFx1MjI2YlwiLFwiXFxcXGdnXCIpO2EoaSxzLGQsXCJcXHUyMjRkXCIsXCJcXFxcYXN5bXBcIik7YShpLHMsZCxcIlxcdTIyMjVcIixcIlxcXFxwYXJhbGxlbFwiKTthKGkscyxkLFwiXFx1MjJjOFwiLFwiXFxcXGJvd3RpZVwiKTthKGkscyxkLFwiXFx1MjMyM1wiLFwiXFxcXHNtaWxlXCIpO2EoaSxzLGQsXCJcXHUyMjkxXCIsXCJcXFxcc3FzdWJzZXRlcVwiKTthKGkscyxkLFwiXFx1MjI5MlwiLFwiXFxcXHNxc3Vwc2V0ZXFcIik7YShpLHMsZCxcIlxcdTIyNTBcIixcIlxcXFxkb3RlcVwiKTthKGkscyxkLFwiXFx1MjMyMlwiLFwiXFxcXGZyb3duXCIpO2EoaSxzLGQsXCJcXHUyMjBiXCIsXCJcXFxcbmlcIik7YShpLHMsZCxcIlxcdTIyMWRcIixcIlxcXFxwcm9wdG9cIik7YShpLHMsZCxcIlxcdTIyYTJcIixcIlxcXFx2ZGFzaFwiKTthKGkscyxkLFwiXFx1MjJhM1wiLFwiXFxcXGRhc2h2XCIpO2EoaSxzLGQsXCJcXHUyMjBiXCIsXCJcXFxcb3duc1wiKTthKGkscyxtLFwiLlwiLFwiXFxcXGxkb3RwXCIpO2EoaSxzLG0sXCJcXHUyMmM1XCIsXCJcXFxcY2RvdHBcIik7YShpLHMseSxcIiNcIixcIlxcXFwjXCIpO2EoaSxzLHksXCImXCIsXCJcXFxcJlwiKTthKGkscyx5LFwiXFx1MjEzNVwiLFwiXFxcXGFsZXBoXCIpO2EoaSxzLHksXCJcXHUyMjAwXCIsXCJcXFxcZm9yYWxsXCIpO2EoaSxzLHksXCJcXHUyMTBmXCIsXCJcXFxcaGJhclwiKTthKGkscyx5LFwiXFx1MjIwM1wiLFwiXFxcXGV4aXN0c1wiKTthKGkscyx5LFwiXFx1MjIwN1wiLFwiXFxcXG5hYmxhXCIpO2EoaSxzLHksXCJcXHUyNjZkXCIsXCJcXFxcZmxhdFwiKTthKGkscyx5LFwiXFx1MjExM1wiLFwiXFxcXGVsbFwiKTthKGkscyx5LFwiXFx1MjY2ZVwiLFwiXFxcXG5hdHVyYWxcIik7YShpLHMseSxcIlxcdTI2NjNcIixcIlxcXFxjbHVic3VpdFwiKTthKGkscyx5LFwiXFx1MjExOFwiLFwiXFxcXHdwXCIpO2EoaSxzLHksXCJcXHUyNjZmXCIsXCJcXFxcc2hhcnBcIik7YShpLHMseSxcIlxcdTI2NjJcIixcIlxcXFxkaWFtb25kc3VpdFwiKTthKGkscyx5LFwiXFx1MjExY1wiLFwiXFxcXFJlXCIpO2EoaSxzLHksXCJcXHUyNjYxXCIsXCJcXFxcaGVhcnRzdWl0XCIpO2EoaSxzLHksXCJcXHUyMTExXCIsXCJcXFxcSW1cIik7YShpLHMseSxcIlxcdTI2NjBcIixcIlxcXFxzcGFkZXN1aXRcIik7YShpLHMseSxcIlxcdTIwMjBcIixcIlxcXFxkYWdcIik7YShpLHMseSxcIlxcdTIwMjFcIixcIlxcXFxkZGFnXCIpO2EoaSxzLHAsXCJcXHUyM2IxXCIsXCJcXFxccm1vdXN0YWNoZVwiKTthKGkscyxmLFwiXFx1MjNiMFwiLFwiXFxcXGxtb3VzdGFjaGVcIik7YShpLHMscCxcIlxcdTI3ZWZcIixcIlxcXFxyZ3JvdXBcIik7YShpLHMsZixcIlxcdTI3ZWVcIixcIlxcXFxsZ3JvdXBcIik7YShpLHMsdSxcIlxcdTIyMTNcIixcIlxcXFxtcFwiKTthKGkscyx1LFwiXFx1MjI5NlwiLFwiXFxcXG9taW51c1wiKTthKGkscyx1LFwiXFx1MjI4ZVwiLFwiXFxcXHVwbHVzXCIpO2EoaSxzLHUsXCJcXHUyMjkzXCIsXCJcXFxcc3FjYXBcIik7YShpLHMsdSxcIlxcdTIyMTdcIixcIlxcXFxhc3RcIik7YShpLHMsdSxcIlxcdTIyOTRcIixcIlxcXFxzcWN1cFwiKTthKGkscyx1LFwiXFx1MjVlZlwiLFwiXFxcXGJpZ2NpcmNcIik7YShpLHMsdSxcIlxcdTIyMTlcIixcIlxcXFxidWxsZXRcIik7YShpLHMsdSxcIlxcdTIwMjFcIixcIlxcXFxkZGFnZ2VyXCIpO2EoaSxzLHUsXCJcXHUyMjQwXCIsXCJcXFxcd3JcIik7YShpLHMsdSxcIlxcdTJhM2ZcIixcIlxcXFxhbWFsZ1wiKTthKGkscyxkLFwiXFx1MjdmNVwiLFwiXFxcXGxvbmdsZWZ0YXJyb3dcIik7YShpLHMsZCxcIlxcdTIxZDBcIixcIlxcXFxMZWZ0YXJyb3dcIik7YShpLHMsZCxcIlxcdTI3ZjhcIixcIlxcXFxMb25nbGVmdGFycm93XCIpO2EoaSxzLGQsXCJcXHUyN2Y2XCIsXCJcXFxcbG9uZ3JpZ2h0YXJyb3dcIik7YShpLHMsZCxcIlxcdTIxZDJcIixcIlxcXFxSaWdodGFycm93XCIpO2EoaSxzLGQsXCJcXHUyN2Y5XCIsXCJcXFxcTG9uZ3JpZ2h0YXJyb3dcIik7YShpLHMsZCxcIlxcdTIxOTRcIixcIlxcXFxsZWZ0cmlnaHRhcnJvd1wiKTthKGkscyxkLFwiXFx1MjdmN1wiLFwiXFxcXGxvbmdsZWZ0cmlnaHRhcnJvd1wiKTthKGkscyxkLFwiXFx1MjFkNFwiLFwiXFxcXExlZnRyaWdodGFycm93XCIpO2EoaSxzLGQsXCJcXHUyN2ZhXCIsXCJcXFxcTG9uZ2xlZnRyaWdodGFycm93XCIpO2EoaSxzLGQsXCJcXHUyMWE2XCIsXCJcXFxcbWFwc3RvXCIpO2EoaSxzLGQsXCJcXHUyN2ZjXCIsXCJcXFxcbG9uZ21hcHN0b1wiKTthKGkscyxkLFwiXFx1MjE5N1wiLFwiXFxcXG5lYXJyb3dcIik7YShpLHMsZCxcIlxcdTIxYTlcIixcIlxcXFxob29rbGVmdGFycm93XCIpO2EoaSxzLGQsXCJcXHUyMWFhXCIsXCJcXFxcaG9va3JpZ2h0YXJyb3dcIik7YShpLHMsZCxcIlxcdTIxOThcIixcIlxcXFxzZWFycm93XCIpO2EoaSxzLGQsXCJcXHUyMWJjXCIsXCJcXFxcbGVmdGhhcnBvb251cFwiKTthKGkscyxkLFwiXFx1MjFjMFwiLFwiXFxcXHJpZ2h0aGFycG9vbnVwXCIpO2EoaSxzLGQsXCJcXHUyMTk5XCIsXCJcXFxcc3dhcnJvd1wiKTthKGkscyxkLFwiXFx1MjFiZFwiLFwiXFxcXGxlZnRoYXJwb29uZG93blwiKTthKGkscyxkLFwiXFx1MjFjMVwiLFwiXFxcXHJpZ2h0aGFycG9vbmRvd25cIik7YShpLHMsZCxcIlxcdTIxOTZcIixcIlxcXFxud2Fycm93XCIpO2EoaSxzLGQsXCJcXHUyMWNjXCIsXCJcXFxccmlnaHRsZWZ0aGFycG9vbnNcIik7YShpLGwsZCxcIlxcdTIyNmVcIixcIlxcXFxubGVzc1wiKTthKGksbCxkLFwiXFx1ZTAxMFwiLFwiXFxcXG5sZXFzbGFudFwiKTthKGksbCxkLFwiXFx1ZTAxMVwiLFwiXFxcXG5sZXFxXCIpO2EoaSxsLGQsXCJcXHUyYTg3XCIsXCJcXFxcbG5lcVwiKTthKGksbCxkLFwiXFx1MjI2OFwiLFwiXFxcXGxuZXFxXCIpO2EoaSxsLGQsXCJcXHVlMDBjXCIsXCJcXFxcbHZlcnRuZXFxXCIpO2EoaSxsLGQsXCJcXHUyMmU2XCIsXCJcXFxcbG5zaW1cIik7YShpLGwsZCxcIlxcdTJhODlcIixcIlxcXFxsbmFwcHJveFwiKTthKGksbCxkLFwiXFx1MjI4MFwiLFwiXFxcXG5wcmVjXCIpO2EoaSxsLGQsXCJcXHUyMmUwXCIsXCJcXFxcbnByZWNlcVwiKTthKGksbCxkLFwiXFx1MjJlOFwiLFwiXFxcXHByZWNuc2ltXCIpO2EoaSxsLGQsXCJcXHUyYWI5XCIsXCJcXFxccHJlY25hcHByb3hcIik7YShpLGwsZCxcIlxcdTIyNDFcIixcIlxcXFxuc2ltXCIpO2EoaSxsLGQsXCJcXHVlMDA2XCIsXCJcXFxcbnNob3J0bWlkXCIpO2EoaSxsLGQsXCJcXHUyMjI0XCIsXCJcXFxcbm1pZFwiKTthKGksbCxkLFwiXFx1MjJhY1wiLFwiXFxcXG52ZGFzaFwiKTthKGksbCxkLFwiXFx1MjJhZFwiLFwiXFxcXG52RGFzaFwiKTthKGksbCxkLFwiXFx1MjJlYVwiLFwiXFxcXG50cmlhbmdsZWxlZnRcIik7YShpLGwsZCxcIlxcdTIyZWNcIixcIlxcXFxudHJpYW5nbGVsZWZ0ZXFcIik7YShpLGwsZCxcIlxcdTIyOGFcIixcIlxcXFxzdWJzZXRuZXFcIik7YShpLGwsZCxcIlxcdWUwMWFcIixcIlxcXFx2YXJzdWJzZXRuZXFcIik7YShpLGwsZCxcIlxcdTJhY2JcIixcIlxcXFxzdWJzZXRuZXFxXCIpO2EoaSxsLGQsXCJcXHVlMDE3XCIsXCJcXFxcdmFyc3Vic2V0bmVxcVwiKTthKGksbCxkLFwiXFx1MjI2ZlwiLFwiXFxcXG5ndHJcIik7YShpLGwsZCxcIlxcdWUwMGZcIixcIlxcXFxuZ2Vxc2xhbnRcIik7YShpLGwsZCxcIlxcdWUwMGVcIixcIlxcXFxuZ2VxcVwiKTthKGksbCxkLFwiXFx1MmE4OFwiLFwiXFxcXGduZXFcIik7YShpLGwsZCxcIlxcdTIyNjlcIixcIlxcXFxnbmVxcVwiKTthKGksbCxkLFwiXFx1ZTAwZFwiLFwiXFxcXGd2ZXJ0bmVxcVwiKTthKGksbCxkLFwiXFx1MjJlN1wiLFwiXFxcXGduc2ltXCIpO2EoaSxsLGQsXCJcXHUyYThhXCIsXCJcXFxcZ25hcHByb3hcIik7YShpLGwsZCxcIlxcdTIyODFcIixcIlxcXFxuc3VjY1wiKTthKGksbCxkLFwiXFx1MjJlMVwiLFwiXFxcXG5zdWNjZXFcIik7YShpLGwsZCxcIlxcdTIyZTlcIixcIlxcXFxzdWNjbnNpbVwiKTthKGksbCxkLFwiXFx1MmFiYVwiLFwiXFxcXHN1Y2NuYXBwcm94XCIpO2EoaSxsLGQsXCJcXHUyMjQ2XCIsXCJcXFxcbmNvbmdcIik7YShpLGwsZCxcIlxcdWUwMDdcIixcIlxcXFxuc2hvcnRwYXJhbGxlbFwiKTthKGksbCxkLFwiXFx1MjIyNlwiLFwiXFxcXG5wYXJhbGxlbFwiKTthKGksbCxkLFwiXFx1MjJhZlwiLFwiXFxcXG5WRGFzaFwiKTthKGksbCxkLFwiXFx1MjJlYlwiLFwiXFxcXG50cmlhbmdsZXJpZ2h0XCIpO2EoaSxsLGQsXCJcXHUyMmVkXCIsXCJcXFxcbnRyaWFuZ2xlcmlnaHRlcVwiKTthKGksbCxkLFwiXFx1ZTAxOFwiLFwiXFxcXG5zdXBzZXRlcXFcIik7YShpLGwsZCxcIlxcdTIyOGJcIixcIlxcXFxzdXBzZXRuZXFcIik7YShpLGwsZCxcIlxcdWUwMWJcIixcIlxcXFx2YXJzdXBzZXRuZXFcIik7YShpLGwsZCxcIlxcdTJhY2NcIixcIlxcXFxzdXBzZXRuZXFxXCIpO2EoaSxsLGQsXCJcXHVlMDE5XCIsXCJcXFxcdmFyc3Vwc2V0bmVxcVwiKTthKGksbCxkLFwiXFx1MjJhZVwiLFwiXFxcXG5WZGFzaFwiKTthKGksbCxkLFwiXFx1MmFiNVwiLFwiXFxcXHByZWNuZXFxXCIpO2EoaSxsLGQsXCJcXHUyYWI2XCIsXCJcXFxcc3VjY25lcXFcIik7YShpLGwsZCxcIlxcdWUwMTZcIixcIlxcXFxuc3Vic2V0ZXFxXCIpO2EoaSxsLHUsXCJcXHUyMmI0XCIsXCJcXFxcdW5saGRcIik7YShpLGwsdSxcIlxcdTIyYjVcIixcIlxcXFx1bnJoZFwiKTthKGksbCxkLFwiXFx1MjE5YVwiLFwiXFxcXG5sZWZ0YXJyb3dcIik7YShpLGwsZCxcIlxcdTIxOWJcIixcIlxcXFxucmlnaHRhcnJvd1wiKTthKGksbCxkLFwiXFx1MjFjZFwiLFwiXFxcXG5MZWZ0YXJyb3dcIik7YShpLGwsZCxcIlxcdTIxY2ZcIixcIlxcXFxuUmlnaHRhcnJvd1wiKTthKGksbCxkLFwiXFx1MjFhZVwiLFwiXFxcXG5sZWZ0cmlnaHRhcnJvd1wiKTthKGksbCxkLFwiXFx1MjFjZVwiLFwiXFxcXG5MZWZ0cmlnaHRhcnJvd1wiKTthKGksbCxkLFwiXFx1MjViM1wiLFwiXFxcXHZhcnRyaWFuZ2xlXCIpO2EoaSxsLHksXCJcXHUyMTBmXCIsXCJcXFxcaHNsYXNoXCIpO2EoaSxsLHksXCJcXHUyNWJkXCIsXCJcXFxcdHJpYW5nbGVkb3duXCIpO2EoaSxsLHksXCJcXHUyNWNhXCIsXCJcXFxcbG96ZW5nZVwiKTthKGksbCx5LFwiXFx1MjRjOFwiLFwiXFxcXGNpcmNsZWRTXCIpO2EoaSxsLHksXCJcXHhhZVwiLFwiXFxcXGNpcmNsZWRSXCIpO2EoaSxsLHksXCJcXHUyMjIxXCIsXCJcXFxcbWVhc3VyZWRhbmdsZVwiKTthKGksbCx5LFwiXFx1MjIwNFwiLFwiXFxcXG5leGlzdHNcIik7YShpLGwseSxcIlxcdTIxMjdcIixcIlxcXFxtaG9cIik7YShpLGwseSxcIlxcdTIxMzJcIixcIlxcXFxGaW52XCIpO2EoaSxsLHksXCJcXHUyMTQxXCIsXCJcXFxcR2FtZVwiKTthKGksbCx5LFwia1wiLFwiXFxcXEJiYmtcIik7YShpLGwseSxcIlxcdTIwMzVcIixcIlxcXFxiYWNrcHJpbWVcIik7YShpLGwseSxcIlxcdTI1YjJcIixcIlxcXFxibGFja3RyaWFuZ2xlXCIpO2EoaSxsLHksXCJcXHUyNWJjXCIsXCJcXFxcYmxhY2t0cmlhbmdsZWRvd25cIik7YShpLGwseSxcIlxcdTI1YTBcIixcIlxcXFxibGFja3NxdWFyZVwiKTthKGksbCx5LFwiXFx1MjllYlwiLFwiXFxcXGJsYWNrbG96ZW5nZVwiKTthKGksbCx5LFwiXFx1MjYwNVwiLFwiXFxcXGJpZ3N0YXJcIik7YShpLGwseSxcIlxcdTIyMjJcIixcIlxcXFxzcGhlcmljYWxhbmdsZVwiKTthKGksbCx5LFwiXFx1MjIwMVwiLFwiXFxcXGNvbXBsZW1lbnRcIik7YShpLGwseSxcIlxceGYwXCIsXCJcXFxcZXRoXCIpO2EoaSxsLHksXCJcXHUyNTcxXCIsXCJcXFxcZGlhZ3VwXCIpO2EoaSxsLHksXCJcXHUyNTcyXCIsXCJcXFxcZGlhZ2Rvd25cIik7YShpLGwseSxcIlxcdTI1YTFcIixcIlxcXFxzcXVhcmVcIik7YShpLGwseSxcIlxcdTI1YTFcIixcIlxcXFxCb3hcIik7YShpLGwseSxcIlxcdTI1Y2FcIixcIlxcXFxEaWFtb25kXCIpO2EoaSxsLHksXCJcXHhhNVwiLFwiXFxcXHllblwiKTthKGksbCx5LFwiXFx1MjcxM1wiLFwiXFxcXGNoZWNrbWFya1wiKTthKGksbCx5LFwiXFx1MjEzNlwiLFwiXFxcXGJldGhcIik7YShpLGwseSxcIlxcdTIxMzhcIixcIlxcXFxkYWxldGhcIik7YShpLGwseSxcIlxcdTIxMzdcIixcIlxcXFxnaW1lbFwiKTthKGksbCx5LFwiXFx1MDNkZFwiLFwiXFxcXGRpZ2FtbWFcIik7YShpLGwseSxcIlxcdTAzZjBcIixcIlxcXFx2YXJrYXBwYVwiKTthKGksbCxmLFwiXFx1MjUwY1wiLFwiXFxcXHVsY29ybmVyXCIpO2EoaSxsLHAsXCJcXHUyNTEwXCIsXCJcXFxcdXJjb3JuZXJcIik7YShpLGwsZixcIlxcdTI1MTRcIixcIlxcXFxsbGNvcm5lclwiKTthKGksbCxwLFwiXFx1MjUxOFwiLFwiXFxcXGxyY29ybmVyXCIpO2EoaSxsLGQsXCJcXHUyMjY2XCIsXCJcXFxcbGVxcVwiKTthKGksbCxkLFwiXFx1MmE3ZFwiLFwiXFxcXGxlcXNsYW50XCIpO2EoaSxsLGQsXCJcXHUyYTk1XCIsXCJcXFxcZXFzbGFudGxlc3NcIik7YShpLGwsZCxcIlxcdTIyNzJcIixcIlxcXFxsZXNzc2ltXCIpO2EoaSxsLGQsXCJcXHUyYTg1XCIsXCJcXFxcbGVzc2FwcHJveFwiKTthKGksbCxkLFwiXFx1MjI0YVwiLFwiXFxcXGFwcHJveGVxXCIpO2EoaSxsLHUsXCJcXHUyMmQ2XCIsXCJcXFxcbGVzc2RvdFwiKTthKGksbCxkLFwiXFx1MjJkOFwiLFwiXFxcXGxsbFwiKTthKGksbCxkLFwiXFx1MjI3NlwiLFwiXFxcXGxlc3NndHJcIik7YShpLGwsZCxcIlxcdTIyZGFcIixcIlxcXFxsZXNzZXFndHJcIik7YShpLGwsZCxcIlxcdTJhOGJcIixcIlxcXFxsZXNzZXFxZ3RyXCIpO2EoaSxsLGQsXCJcXHUyMjUxXCIsXCJcXFxcZG90ZXFkb3RcIik7YShpLGwsZCxcIlxcdTIyNTNcIixcIlxcXFxyaXNpbmdkb3RzZXFcIik7YShpLGwsZCxcIlxcdTIyNTJcIixcIlxcXFxmYWxsaW5nZG90c2VxXCIpO2EoaSxsLGQsXCJcXHUyMjNkXCIsXCJcXFxcYmFja3NpbVwiKTthKGksbCxkLFwiXFx1MjJjZFwiLFwiXFxcXGJhY2tzaW1lcVwiKTthKGksbCxkLFwiXFx1MmFjNVwiLFwiXFxcXHN1YnNldGVxcVwiKTthKGksbCxkLFwiXFx1MjJkMFwiLFwiXFxcXFN1YnNldFwiKTthKGksbCxkLFwiXFx1MjI4ZlwiLFwiXFxcXHNxc3Vic2V0XCIpO2EoaSxsLGQsXCJcXHUyMjdjXCIsXCJcXFxccHJlY2N1cmx5ZXFcIik7YShpLGwsZCxcIlxcdTIyZGVcIixcIlxcXFxjdXJseWVxcHJlY1wiKTthKGksbCxkLFwiXFx1MjI3ZVwiLFwiXFxcXHByZWNzaW1cIik7YShpLGwsZCxcIlxcdTJhYjdcIixcIlxcXFxwcmVjYXBwcm94XCIpO2EoaSxsLGQsXCJcXHUyMmIyXCIsXCJcXFxcdmFydHJpYW5nbGVsZWZ0XCIpO2EoaSxsLGQsXCJcXHUyMmI0XCIsXCJcXFxcdHJpYW5nbGVsZWZ0ZXFcIik7YShpLGwsZCxcIlxcdTIyYThcIixcIlxcXFx2RGFzaFwiKTthKGksbCxkLFwiXFx1MjJhYVwiLFwiXFxcXFZ2ZGFzaFwiKTthKGksbCxkLFwiXFx1MjMyM1wiLFwiXFxcXHNtYWxsc21pbGVcIik7YShpLGwsZCxcIlxcdTIzMjJcIixcIlxcXFxzbWFsbGZyb3duXCIpO2EoaSxsLGQsXCJcXHUyMjRmXCIsXCJcXFxcYnVtcGVxXCIpO2EoaSxsLGQsXCJcXHUyMjRlXCIsXCJcXFxcQnVtcGVxXCIpO2EoaSxsLGQsXCJcXHUyMjY3XCIsXCJcXFxcZ2VxcVwiKTthKGksbCxkLFwiXFx1MmE3ZVwiLFwiXFxcXGdlcXNsYW50XCIpO2EoaSxsLGQsXCJcXHUyYTk2XCIsXCJcXFxcZXFzbGFudGd0clwiKTthKGksbCxkLFwiXFx1MjI3M1wiLFwiXFxcXGd0cnNpbVwiKTthKGksbCxkLFwiXFx1MmE4NlwiLFwiXFxcXGd0cmFwcHJveFwiKTthKGksbCx1LFwiXFx1MjJkN1wiLFwiXFxcXGd0cmRvdFwiKTthKGksbCxkLFwiXFx1MjJkOVwiLFwiXFxcXGdnZ1wiKTthKGksbCxkLFwiXFx1MjI3N1wiLFwiXFxcXGd0cmxlc3NcIik7YShpLGwsZCxcIlxcdTIyZGJcIixcIlxcXFxndHJlcWxlc3NcIik7YShpLGwsZCxcIlxcdTJhOGNcIixcIlxcXFxndHJlcXFsZXNzXCIpO2EoaSxsLGQsXCJcXHUyMjU2XCIsXCJcXFxcZXFjaXJjXCIpO2EoaSxsLGQsXCJcXHUyMjU3XCIsXCJcXFxcY2lyY2VxXCIpO2EoaSxsLGQsXCJcXHUyMjVjXCIsXCJcXFxcdHJpYW5nbGVxXCIpO2EoaSxsLGQsXCJcXHUyMjNjXCIsXCJcXFxcdGhpY2tzaW1cIik7YShpLGwsZCxcIlxcdTIyNDhcIixcIlxcXFx0aGlja2FwcHJveFwiKTthKGksbCxkLFwiXFx1MmFjNlwiLFwiXFxcXHN1cHNldGVxcVwiKTthKGksbCxkLFwiXFx1MjJkMVwiLFwiXFxcXFN1cHNldFwiKTthKGksbCxkLFwiXFx1MjI5MFwiLFwiXFxcXHNxc3Vwc2V0XCIpO2EoaSxsLGQsXCJcXHUyMjdkXCIsXCJcXFxcc3VjY2N1cmx5ZXFcIik7YShpLGwsZCxcIlxcdTIyZGZcIixcIlxcXFxjdXJseWVxc3VjY1wiKTthKGksbCxkLFwiXFx1MjI3ZlwiLFwiXFxcXHN1Y2NzaW1cIik7YShpLGwsZCxcIlxcdTJhYjhcIixcIlxcXFxzdWNjYXBwcm94XCIpO2EoaSxsLGQsXCJcXHUyMmIzXCIsXCJcXFxcdmFydHJpYW5nbGVyaWdodFwiKTthKGksbCxkLFwiXFx1MjJiNVwiLFwiXFxcXHRyaWFuZ2xlcmlnaHRlcVwiKTthKGksbCxkLFwiXFx1MjJhOVwiLFwiXFxcXFZkYXNoXCIpO2EoaSxsLGQsXCJcXHUyMjIzXCIsXCJcXFxcc2hvcnRtaWRcIik7YShpLGwsZCxcIlxcdTIyMjVcIixcIlxcXFxzaG9ydHBhcmFsbGVsXCIpO2EoaSxsLGQsXCJcXHUyMjZjXCIsXCJcXFxcYmV0d2VlblwiKTthKGksbCxkLFwiXFx1MjJkNFwiLFwiXFxcXHBpdGNoZm9ya1wiKTthKGksbCxkLFwiXFx1MjIxZFwiLFwiXFxcXHZhcnByb3B0b1wiKTthKGksbCxkLFwiXFx1MjVjMFwiLFwiXFxcXGJsYWNrdHJpYW5nbGVsZWZ0XCIpO2EoaSxsLGQsXCJcXHUyMjM0XCIsXCJcXFxcdGhlcmVmb3JlXCIpO2EoaSxsLGQsXCJcXHUyMjBkXCIsXCJcXFxcYmFja2Vwc2lsb25cIik7YShpLGwsZCxcIlxcdTI1YjZcIixcIlxcXFxibGFja3RyaWFuZ2xlcmlnaHRcIik7YShpLGwsZCxcIlxcdTIyMzVcIixcIlxcXFxiZWNhdXNlXCIpO2EoaSxsLGQsXCJcXHUyMmQ4XCIsXCJcXFxcbGxsZXNzXCIpO2EoaSxsLGQsXCJcXHUyMmQ5XCIsXCJcXFxcZ2dndHJcIik7YShpLGwsdSxcIlxcdTIyYjJcIixcIlxcXFxsaGRcIik7YShpLGwsdSxcIlxcdTIyYjNcIixcIlxcXFxyaGRcIik7YShpLGwsZCxcIlxcdTIyNDJcIixcIlxcXFxlcXNpbVwiKTthKGkscyxkLFwiXFx1MjJjOFwiLFwiXFxcXEpvaW5cIik7YShpLGwsZCxcIlxcdTIyNTFcIixcIlxcXFxEb3RlcVwiKTthKGksbCx1LFwiXFx1MjIxNFwiLFwiXFxcXGRvdHBsdXNcIik7YShpLGwsdSxcIlxcdTIyMTZcIixcIlxcXFxzbWFsbHNldG1pbnVzXCIpO2EoaSxsLHUsXCJcXHUyMmQyXCIsXCJcXFxcQ2FwXCIpO2EoaSxsLHUsXCJcXHUyMmQzXCIsXCJcXFxcQ3VwXCIpO2EoaSxsLHUsXCJcXHUyYTVlXCIsXCJcXFxcZG91YmxlYmFyd2VkZ2VcIik7YShpLGwsdSxcIlxcdTIyOWZcIixcIlxcXFxib3htaW51c1wiKTthKGksbCx1LFwiXFx1MjI5ZVwiLFwiXFxcXGJveHBsdXNcIik7YShpLGwsdSxcIlxcdTIyYzdcIixcIlxcXFxkaXZpZGVvbnRpbWVzXCIpO2EoaSxsLHUsXCJcXHUyMmM5XCIsXCJcXFxcbHRpbWVzXCIpO2EoaSxsLHUsXCJcXHUyMmNhXCIsXCJcXFxccnRpbWVzXCIpO2EoaSxsLHUsXCJcXHUyMmNiXCIsXCJcXFxcbGVmdHRocmVldGltZXNcIik7YShpLGwsdSxcIlxcdTIyY2NcIixcIlxcXFxyaWdodHRocmVldGltZXNcIik7YShpLGwsdSxcIlxcdTIyY2ZcIixcIlxcXFxjdXJseXdlZGdlXCIpO2EoaSxsLHUsXCJcXHUyMmNlXCIsXCJcXFxcY3VybHl2ZWVcIik7YShpLGwsdSxcIlxcdTIyOWRcIixcIlxcXFxjaXJjbGVkZGFzaFwiKTthKGksbCx1LFwiXFx1MjI5YlwiLFwiXFxcXGNpcmNsZWRhc3RcIik7YShpLGwsdSxcIlxcdTIyYzVcIixcIlxcXFxjZW50ZXJkb3RcIik7YShpLGwsdSxcIlxcdTIyYmFcIixcIlxcXFxpbnRlcmNhbFwiKTthKGksbCx1LFwiXFx1MjJkMlwiLFwiXFxcXGRvdWJsZWNhcFwiKTthKGksbCx1LFwiXFx1MjJkM1wiLFwiXFxcXGRvdWJsZWN1cFwiKTthKGksbCx1LFwiXFx1MjJhMFwiLFwiXFxcXGJveHRpbWVzXCIpO2EoaSxsLGQsXCJcXHUyMWUyXCIsXCJcXFxcZGFzaHJpZ2h0YXJyb3dcIik7YShpLGwsZCxcIlxcdTIxZTBcIixcIlxcXFxkYXNobGVmdGFycm93XCIpO2EoaSxsLGQsXCJcXHUyMWM3XCIsXCJcXFxcbGVmdGxlZnRhcnJvd3NcIik7YShpLGwsZCxcIlxcdTIxYzZcIixcIlxcXFxsZWZ0cmlnaHRhcnJvd3NcIik7YShpLGwsZCxcIlxcdTIxZGFcIixcIlxcXFxMbGVmdGFycm93XCIpO2EoaSxsLGQsXCJcXHUyMTllXCIsXCJcXFxcdHdvaGVhZGxlZnRhcnJvd1wiKTthKGksbCxkLFwiXFx1MjFhMlwiLFwiXFxcXGxlZnRhcnJvd3RhaWxcIik7YShpLGwsZCxcIlxcdTIxYWJcIixcIlxcXFxsb29wYXJyb3dsZWZ0XCIpO2EoaSxsLGQsXCJcXHUyMWNiXCIsXCJcXFxcbGVmdHJpZ2h0aGFycG9vbnNcIik7YShpLGwsZCxcIlxcdTIxYjZcIixcIlxcXFxjdXJ2ZWFycm93bGVmdFwiKTthKGksbCxkLFwiXFx1MjFiYVwiLFwiXFxcXGNpcmNsZWFycm93bGVmdFwiKTthKGksbCxkLFwiXFx1MjFiMFwiLFwiXFxcXExzaFwiKTthKGksbCxkLFwiXFx1MjFjOFwiLFwiXFxcXHVwdXBhcnJvd3NcIik7YShpLGwsZCxcIlxcdTIxYmZcIixcIlxcXFx1cGhhcnBvb25sZWZ0XCIpO2EoaSxsLGQsXCJcXHUyMWMzXCIsXCJcXFxcZG93bmhhcnBvb25sZWZ0XCIpO2EoaSxsLGQsXCJcXHUyMmI4XCIsXCJcXFxcbXVsdGltYXBcIik7YShpLGwsZCxcIlxcdTIxYWRcIixcIlxcXFxsZWZ0cmlnaHRzcXVpZ2Fycm93XCIpO2EoaSxsLGQsXCJcXHUyMWM5XCIsXCJcXFxccmlnaHRyaWdodGFycm93c1wiKTthKGksbCxkLFwiXFx1MjFjNFwiLFwiXFxcXHJpZ2h0bGVmdGFycm93c1wiKTthKGksbCxkLFwiXFx1MjFhMFwiLFwiXFxcXHR3b2hlYWRyaWdodGFycm93XCIpO2EoaSxsLGQsXCJcXHUyMWEzXCIsXCJcXFxccmlnaHRhcnJvd3RhaWxcIik7YShpLGwsZCxcIlxcdTIxYWNcIixcIlxcXFxsb29wYXJyb3dyaWdodFwiKTthKGksbCxkLFwiXFx1MjFiN1wiLFwiXFxcXGN1cnZlYXJyb3dyaWdodFwiKTthKGksbCxkLFwiXFx1MjFiYlwiLFwiXFxcXGNpcmNsZWFycm93cmlnaHRcIik7YShpLGwsZCxcIlxcdTIxYjFcIixcIlxcXFxSc2hcIik7YShpLGwsZCxcIlxcdTIxY2FcIixcIlxcXFxkb3duZG93bmFycm93c1wiKTthKGksbCxkLFwiXFx1MjFiZVwiLFwiXFxcXHVwaGFycG9vbnJpZ2h0XCIpO2EoaSxsLGQsXCJcXHUyMWMyXCIsXCJcXFxcZG93bmhhcnBvb25yaWdodFwiKTthKGksbCxkLFwiXFx1MjFkZFwiLFwiXFxcXHJpZ2h0c3F1aWdhcnJvd1wiKTthKGksbCxkLFwiXFx1MjFkZFwiLFwiXFxcXGxlYWRzdG9cIik7YShpLGwsZCxcIlxcdTIxZGJcIixcIlxcXFxScmlnaHRhcnJvd1wiKTthKGksbCxkLFwiXFx1MjFiZVwiLFwiXFxcXHJlc3RyaWN0aW9uXCIpO2EoaSxzLHksXCJcXHUyMDE4XCIsXCJgXCIpO2EoaSxzLHksXCIkXCIsXCJcXFxcJFwiKTthKGkscyx5LFwiJVwiLFwiXFxcXCVcIik7YShpLHMseSxcIl9cIixcIlxcXFxfXCIpO2EoaSxzLHksXCJcXHUyMjIwXCIsXCJcXFxcYW5nbGVcIik7YShpLHMseSxcIlxcdTIyMWVcIixcIlxcXFxpbmZ0eVwiKTthKGkscyx5LFwiXFx1MjAzMlwiLFwiXFxcXHByaW1lXCIpO2EoaSxzLHksXCJcXHUyNWIzXCIsXCJcXFxcdHJpYW5nbGVcIik7YShpLHMseSxcIlxcdTAzOTNcIixcIlxcXFxHYW1tYVwiKTthKGkscyx5LFwiXFx1MDM5NFwiLFwiXFxcXERlbHRhXCIpO2EoaSxzLHksXCJcXHUwMzk4XCIsXCJcXFxcVGhldGFcIik7YShpLHMseSxcIlxcdTAzOWJcIixcIlxcXFxMYW1iZGFcIik7YShpLHMseSxcIlxcdTAzOWVcIixcIlxcXFxYaVwiKTthKGkscyx5LFwiXFx1MDNhMFwiLFwiXFxcXFBpXCIpO2EoaSxzLHksXCJcXHUwM2EzXCIsXCJcXFxcU2lnbWFcIik7YShpLHMseSxcIlxcdTAzYTVcIixcIlxcXFxVcHNpbG9uXCIpO2EoaSxzLHksXCJcXHUwM2E2XCIsXCJcXFxcUGhpXCIpO2EoaSxzLHksXCJcXHUwM2E4XCIsXCJcXFxcUHNpXCIpO2EoaSxzLHksXCJcXHUwM2E5XCIsXCJcXFxcT21lZ2FcIik7YShpLHMseSxcIlxceGFjXCIsXCJcXFxcbmVnXCIpO2EoaSxzLHksXCJcXHhhY1wiLFwiXFxcXGxub3RcIik7YShpLHMseSxcIlxcdTIyYTRcIixcIlxcXFx0b3BcIik7YShpLHMseSxcIlxcdTIyYTVcIixcIlxcXFxib3RcIik7YShpLHMseSxcIlxcdTIyMDVcIixcIlxcXFxlbXB0eXNldFwiKTthKGksbCx5LFwiXFx1MjIwNVwiLFwiXFxcXHZhcm5vdGhpbmdcIik7YShpLHMsYyxcIlxcdTAzYjFcIixcIlxcXFxhbHBoYVwiKTthKGkscyxjLFwiXFx1MDNiMlwiLFwiXFxcXGJldGFcIik7YShpLHMsYyxcIlxcdTAzYjNcIixcIlxcXFxnYW1tYVwiKTthKGkscyxjLFwiXFx1MDNiNFwiLFwiXFxcXGRlbHRhXCIpO2EoaSxzLGMsXCJcXHUwM2Y1XCIsXCJcXFxcZXBzaWxvblwiKTthKGkscyxjLFwiXFx1MDNiNlwiLFwiXFxcXHpldGFcIik7YShpLHMsYyxcIlxcdTAzYjdcIixcIlxcXFxldGFcIik7YShpLHMsYyxcIlxcdTAzYjhcIixcIlxcXFx0aGV0YVwiKTthKGkscyxjLFwiXFx1MDNiOVwiLFwiXFxcXGlvdGFcIik7YShpLHMsYyxcIlxcdTAzYmFcIixcIlxcXFxrYXBwYVwiKTthKGkscyxjLFwiXFx1MDNiYlwiLFwiXFxcXGxhbWJkYVwiKTthKGkscyxjLFwiXFx1MDNiY1wiLFwiXFxcXG11XCIpO2EoaSxzLGMsXCJcXHUwM2JkXCIsXCJcXFxcbnVcIik7YShpLHMsYyxcIlxcdTAzYmVcIixcIlxcXFx4aVwiKTthKGkscyxjLFwib1wiLFwiXFxcXG9taWNyb25cIik7YShpLHMsYyxcIlxcdTAzYzBcIixcIlxcXFxwaVwiKTthKGkscyxjLFwiXFx1MDNjMVwiLFwiXFxcXHJob1wiKTthKGkscyxjLFwiXFx1MDNjM1wiLFwiXFxcXHNpZ21hXCIpO2EoaSxzLGMsXCJcXHUwM2M0XCIsXCJcXFxcdGF1XCIpO2EoaSxzLGMsXCJcXHUwM2M1XCIsXCJcXFxcdXBzaWxvblwiKTthKGkscyxjLFwiXFx1MDNkNVwiLFwiXFxcXHBoaVwiKTthKGkscyxjLFwiXFx1MDNjN1wiLFwiXFxcXGNoaVwiKTthKGkscyxjLFwiXFx1MDNjOFwiLFwiXFxcXHBzaVwiKTthKGkscyxjLFwiXFx1MDNjOVwiLFwiXFxcXG9tZWdhXCIpO2EoaSxzLGMsXCJcXHUwM2I1XCIsXCJcXFxcdmFyZXBzaWxvblwiKTthKGkscyxjLFwiXFx1MDNkMVwiLFwiXFxcXHZhcnRoZXRhXCIpO2EoaSxzLGMsXCJcXHUwM2Q2XCIsXCJcXFxcdmFycGlcIik7YShpLHMsYyxcIlxcdTAzZjFcIixcIlxcXFx2YXJyaG9cIik7YShpLHMsYyxcIlxcdTAzYzJcIixcIlxcXFx2YXJzaWdtYVwiKTthKGkscyxjLFwiXFx1MDNjNlwiLFwiXFxcXHZhcnBoaVwiKTthKGkscyx1LFwiXFx1MjIxN1wiLFwiKlwiKTthKGkscyx1LFwiK1wiLFwiK1wiKTthKGkscyx1LFwiXFx1MjIxMlwiLFwiLVwiKTthKGkscyx1LFwiXFx1MjJjNVwiLFwiXFxcXGNkb3RcIik7YShpLHMsdSxcIlxcdTIyMThcIixcIlxcXFxjaXJjXCIpO2EoaSxzLHUsXCJcXHhmN1wiLFwiXFxcXGRpdlwiKTthKGkscyx1LFwiXFx4YjFcIixcIlxcXFxwbVwiKTthKGkscyx1LFwiXFx4ZDdcIixcIlxcXFx0aW1lc1wiKTthKGkscyx1LFwiXFx1MjIyOVwiLFwiXFxcXGNhcFwiKTthKGkscyx1LFwiXFx1MjIyYVwiLFwiXFxcXGN1cFwiKTthKGkscyx1LFwiXFx1MjIxNlwiLFwiXFxcXHNldG1pbnVzXCIpO2EoaSxzLHUsXCJcXHUyMjI3XCIsXCJcXFxcbGFuZFwiKTthKGkscyx1LFwiXFx1MjIyOFwiLFwiXFxcXGxvclwiKTthKGkscyx1LFwiXFx1MjIyN1wiLFwiXFxcXHdlZGdlXCIpO2EoaSxzLHUsXCJcXHUyMjI4XCIsXCJcXFxcdmVlXCIpO2EoaSxzLHksXCJcXHUyMjFhXCIsXCJcXFxcc3VyZFwiKTthKGkscyxmLFwiKFwiLFwiKFwiKTthKGkscyxmLFwiW1wiLFwiW1wiKTthKGkscyxmLFwiXFx1MjdlOFwiLFwiXFxcXGxhbmdsZVwiKTthKGkscyxmLFwiXFx1MjIyM1wiLFwiXFxcXGx2ZXJ0XCIpO2EoaSxzLGYsXCJcXHUyMjI1XCIsXCJcXFxcbFZlcnRcIik7YShpLHMscCxcIilcIixcIilcIik7YShpLHMscCxcIl1cIixcIl1cIik7YShpLHMscCxcIj9cIixcIj9cIik7YShpLHMscCxcIiFcIixcIiFcIik7YShpLHMscCxcIlxcdTI3ZTlcIixcIlxcXFxyYW5nbGVcIik7YShpLHMscCxcIlxcdTIyMjNcIixcIlxcXFxydmVydFwiKTthKGkscyxwLFwiXFx1MjIyNVwiLFwiXFxcXHJWZXJ0XCIpO2EoaSxzLGQsXCI9XCIsXCI9XCIpO2EoaSxzLGQsXCI8XCIsXCI8XCIpO2EoaSxzLGQsXCI+XCIsXCI+XCIpO2EoaSxzLGQsXCI6XCIsXCI6XCIpO2EoaSxzLGQsXCJcXHUyMjQ4XCIsXCJcXFxcYXBwcm94XCIpO2EoaSxzLGQsXCJcXHUyMjQ1XCIsXCJcXFxcY29uZ1wiKTthKGkscyxkLFwiXFx1MjI2NVwiLFwiXFxcXGdlXCIpO2EoaSxzLGQsXCJcXHUyMjY1XCIsXCJcXFxcZ2VxXCIpO2EoaSxzLGQsXCJcXHUyMTkwXCIsXCJcXFxcZ2V0c1wiKTthKGkscyxkLFwiPlwiLFwiXFxcXGd0XCIpO2EoaSxzLGQsXCJcXHUyMjA4XCIsXCJcXFxcaW5cIik7YShpLHMsZCxcIlxcdTIyMDlcIixcIlxcXFxub3RpblwiKTthKGkscyxkLFwiXFx1MjI4MlwiLFwiXFxcXHN1YnNldFwiKTthKGkscyxkLFwiXFx1MjI4M1wiLFwiXFxcXHN1cHNldFwiKTthKGkscyxkLFwiXFx1MjI4NlwiLFwiXFxcXHN1YnNldGVxXCIpO2EoaSxzLGQsXCJcXHUyMjg3XCIsXCJcXFxcc3Vwc2V0ZXFcIik7YShpLGwsZCxcIlxcdTIyODhcIixcIlxcXFxuc3Vic2V0ZXFcIik7YShpLGwsZCxcIlxcdTIyODlcIixcIlxcXFxuc3Vwc2V0ZXFcIik7YShpLHMsZCxcIlxcdTIyYThcIixcIlxcXFxtb2RlbHNcIik7YShpLHMsZCxcIlxcdTIxOTBcIixcIlxcXFxsZWZ0YXJyb3dcIik7YShpLHMsZCxcIlxcdTIyNjRcIixcIlxcXFxsZVwiKTthKGkscyxkLFwiXFx1MjI2NFwiLFwiXFxcXGxlcVwiKTthKGkscyxkLFwiPFwiLFwiXFxcXGx0XCIpO2EoaSxzLGQsXCJcXHUyMjYwXCIsXCJcXFxcbmVcIik7YShpLHMsZCxcIlxcdTIyNjBcIixcIlxcXFxuZXFcIik7YShpLHMsZCxcIlxcdTIxOTJcIixcIlxcXFxyaWdodGFycm93XCIpO2EoaSxzLGQsXCJcXHUyMTkyXCIsXCJcXFxcdG9cIik7YShpLGwsZCxcIlxcdTIyNzFcIixcIlxcXFxuZ2VxXCIpO2EoaSxsLGQsXCJcXHUyMjcwXCIsXCJcXFxcbmxlcVwiKTthKGkscyxnLG51bGwsXCJcXFxcIVwiKTthKGkscyxnLFwiXFx4YTBcIixcIlxcXFwgXCIpO2EoaSxzLGcsXCJcXHhhMFwiLFwiflwiKTthKGkscyxnLG51bGwsXCJcXFxcLFwiKTthKGkscyxnLG51bGwsXCJcXFxcOlwiKTthKGkscyxnLG51bGwsXCJcXFxcO1wiKTthKGkscyxnLG51bGwsXCJcXFxcZW5zcGFjZVwiKTthKGkscyxnLG51bGwsXCJcXFxccXF1YWRcIik7YShpLHMsZyxudWxsLFwiXFxcXHF1YWRcIik7YShpLHMsZyxcIlxceGEwXCIsXCJcXFxcc3BhY2VcIik7YShpLHMsbSxcIixcIixcIixcIik7YShpLHMsbSxcIjtcIixcIjtcIik7YShpLHMsbSxcIjpcIixcIlxcXFxjb2xvblwiKTthKGksbCx1LFwiXFx1MjJiY1wiLFwiXFxcXGJhcndlZGdlXCIpO2EoaSxsLHUsXCJcXHUyMmJiXCIsXCJcXFxcdmVlYmFyXCIpO2EoaSxzLHUsXCJcXHUyMjk5XCIsXCJcXFxcb2RvdFwiKTthKGkscyx1LFwiXFx1MjI5NVwiLFwiXFxcXG9wbHVzXCIpO2EoaSxzLHUsXCJcXHUyMjk3XCIsXCJcXFxcb3RpbWVzXCIpO2EoaSxzLHksXCJcXHUyMjAyXCIsXCJcXFxccGFydGlhbFwiKTthKGkscyx1LFwiXFx1MjI5OFwiLFwiXFxcXG9zbGFzaFwiKTthKGksbCx1LFwiXFx1MjI5YVwiLFwiXFxcXGNpcmNsZWRjaXJjXCIpO2EoaSxsLHUsXCJcXHUyMmExXCIsXCJcXFxcYm94ZG90XCIpO2EoaSxzLHUsXCJcXHUyNWIzXCIsXCJcXFxcYmlndHJpYW5nbGV1cFwiKTthKGkscyx1LFwiXFx1MjViZFwiLFwiXFxcXGJpZ3RyaWFuZ2xlZG93blwiKTthKGkscyx1LFwiXFx1MjAyMFwiLFwiXFxcXGRhZ2dlclwiKTthKGkscyx1LFwiXFx1MjJjNFwiLFwiXFxcXGRpYW1vbmRcIik7YShpLHMsdSxcIlxcdTIyYzZcIixcIlxcXFxzdGFyXCIpO2EoaSxzLHUsXCJcXHUyNWMzXCIsXCJcXFxcdHJpYW5nbGVsZWZ0XCIpO2EoaSxzLHUsXCJcXHUyNWI5XCIsXCJcXFxcdHJpYW5nbGVyaWdodFwiKTthKGkscyxmLFwie1wiLFwiXFxcXHtcIik7YShpLHMscCxcIn1cIixcIlxcXFx9XCIpO2EoaSxzLGYsXCJ7XCIsXCJcXFxcbGJyYWNlXCIpO2EoaSxzLHAsXCJ9XCIsXCJcXFxccmJyYWNlXCIpO2EoaSxzLGYsXCJbXCIsXCJcXFxcbGJyYWNrXCIpO2EoaSxzLHAsXCJdXCIsXCJcXFxccmJyYWNrXCIpO2EoaSxzLGYsXCJcXHUyMzBhXCIsXCJcXFxcbGZsb29yXCIpO2EoaSxzLHAsXCJcXHUyMzBiXCIsXCJcXFxccmZsb29yXCIpO2EoaSxzLGYsXCJcXHUyMzA4XCIsXCJcXFxcbGNlaWxcIik7YShpLHMscCxcIlxcdTIzMDlcIixcIlxcXFxyY2VpbFwiKTthKGkscyx5LFwiXFxcXFwiLFwiXFxcXGJhY2tzbGFzaFwiKTthKGkscyx5LFwiXFx1MjIyM1wiLFwifFwiKTthKGkscyx5LFwiXFx1MjIyM1wiLFwiXFxcXHZlcnRcIik7YShpLHMseSxcIlxcdTIyMjVcIixcIlxcXFx8XCIpO2EoaSxzLHksXCJcXHUyMjI1XCIsXCJcXFxcVmVydFwiKTthKGkscyxkLFwiXFx1MjE5MVwiLFwiXFxcXHVwYXJyb3dcIik7YShpLHMsZCxcIlxcdTIxZDFcIixcIlxcXFxVcGFycm93XCIpO2EoaSxzLGQsXCJcXHUyMTkzXCIsXCJcXFxcZG93bmFycm93XCIpO2EoaSxzLGQsXCJcXHUyMWQzXCIsXCJcXFxcRG93bmFycm93XCIpO2EoaSxzLGQsXCJcXHUyMTk1XCIsXCJcXFxcdXBkb3duYXJyb3dcIik7YShpLHMsZCxcIlxcdTIxZDVcIixcIlxcXFxVcGRvd25hcnJvd1wiKTthKGksaSx2LFwiXFx1MjIxMFwiLFwiXFxcXGNvcHJvZFwiKTthKGksaSx2LFwiXFx1MjJjMVwiLFwiXFxcXGJpZ3ZlZVwiKTthKGksaSx2LFwiXFx1MjJjMFwiLFwiXFxcXGJpZ3dlZGdlXCIpO2EoaSxpLHYsXCJcXHUyYTA0XCIsXCJcXFxcYmlndXBsdXNcIik7YShpLGksdixcIlxcdTIyYzJcIixcIlxcXFxiaWdjYXBcIik7YShpLGksdixcIlxcdTIyYzNcIixcIlxcXFxiaWdjdXBcIik7YShpLGksdixcIlxcdTIyMmJcIixcIlxcXFxpbnRcIik7YShpLGksdixcIlxcdTIyMmJcIixcIlxcXFxpbnRvcFwiKTthKGksaSx2LFwiXFx1MjIyY1wiLFwiXFxcXGlpbnRcIik7YShpLGksdixcIlxcdTIyMmRcIixcIlxcXFxpaWludFwiKTthKGksaSx2LFwiXFx1MjIwZlwiLFwiXFxcXHByb2RcIik7YShpLGksdixcIlxcdTIyMTFcIixcIlxcXFxzdW1cIik7YShpLGksdixcIlxcdTJhMDJcIixcIlxcXFxiaWdvdGltZXNcIik7YShpLGksdixcIlxcdTJhMDFcIixcIlxcXFxiaWdvcGx1c1wiKTthKGksaSx2LFwiXFx1MmEwMFwiLFwiXFxcXGJpZ29kb3RcIik7YShpLGksdixcIlxcdTIyMmVcIixcIlxcXFxvaW50XCIpO2EoaSxpLHYsXCJcXHUyYTA2XCIsXCJcXFxcYmlnc3FjdXBcIik7YShpLGksdixcIlxcdTIyMmJcIixcIlxcXFxzbWFsbGludFwiKTthKGkscyxoLFwiXFx1MjAyNlwiLFwiXFxcXGxkb3RzXCIpO2EoaSxzLGgsXCJcXHUyMmVmXCIsXCJcXFxcY2RvdHNcIik7YShpLHMsaCxcIlxcdTIyZjFcIixcIlxcXFxkZG90c1wiKTthKGkscyx5LFwiXFx1MjJlZVwiLFwiXFxcXHZkb3RzXCIpO2EoaSxzLG8sXCJcXHhiNFwiLFwiXFxcXGFjdXRlXCIpO2EoaSxzLG8sXCJgXCIsXCJcXFxcZ3JhdmVcIik7YShpLHMsbyxcIlxceGE4XCIsXCJcXFxcZGRvdFwiKTthKGkscyxvLFwiflwiLFwiXFxcXHRpbGRlXCIpO2EoaSxzLG8sXCJcXHhhZlwiLFwiXFxcXGJhclwiKTthKGkscyxvLFwiXFx1MDJkOFwiLFwiXFxcXGJyZXZlXCIpO2EoaSxzLG8sXCJcXHUwMmM3XCIsXCJcXFxcY2hlY2tcIik7YShpLHMsbyxcIl5cIixcIlxcXFxoYXRcIik7YShpLHMsbyxcIlxcdTIwZDdcIixcIlxcXFx2ZWNcIik7YShpLHMsbyxcIlxcdTAyZDlcIixcIlxcXFxkb3RcIik7YShpLHMsYyxcIlxcdTAxMzFcIixcIlxcXFxpbWF0aFwiKTthKGkscyxjLFwiXFx1MDIzN1wiLFwiXFxcXGptYXRoXCIpO2EobixzLHksXCJcXHUyMDEzXCIsXCItLVwiKTthKG4scyx5LFwiXFx1MjAxNFwiLFwiLS0tXCIpO2EobixzLHksXCJcXHUyMDE4XCIsXCJgXCIpO2EobixzLHksXCJcXHUyMDE5XCIsXCInXCIpO2EobixzLHksXCJcXHUyMDFjXCIsXCJgYFwiKTthKG4scyx5LFwiXFx1MjAxZFwiLFwiJydcIik7YShpLHMseSxcIlxceGIwXCIsXCJcXFxcZGVncmVlXCIpO2EobixzLHksXCJcXHhiMFwiLFwiXFxcXGRlZ3JlZVwiKTthKGkscyxjLFwiXFx4YTNcIixcIlxcXFxwb3VuZHNcIik7YShpLGwseSxcIlxcdTI3MjBcIixcIlxcXFxtYWx0ZXNlXCIpO2EobixsLHksXCJcXHUyNzIwXCIsXCJcXFxcbWFsdGVzZVwiKTthKG4scyxnLFwiXFx4YTBcIixcIlxcXFwgXCIpO2EobixzLGcsXCJcXHhhMFwiLFwiIFwiKTthKG4scyxnLFwiXFx4YTBcIixcIn5cIik7dmFyIHg7dmFyIGI7dmFyIHc9JzAxMjM0NTY3ODkvQC5cIic7Zm9yKHg9MDt4PHcubGVuZ3RoO3grKyl7Yj13LmNoYXJBdCh4KTthKGkscyx5LGIsYil9dmFyIGs9JzAxMjM0NTY3ODkhQCooKS09K1tdXCI7Oj8vLiwnO2Zvcih4PTA7eDxrLmxlbmd0aDt4Kyspe2I9ay5jaGFyQXQoeCk7YShuLHMseSxiLGIpfXZhciB6PVwiYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXpBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWlwiO2Zvcih4PTA7eDx6Lmxlbmd0aDt4Kyspe2I9ei5jaGFyQXQoeCk7YShpLHMsYyxiLGIpO2EobixzLHksYixiKX1mb3IoeD0xOTI7eDw9MjE0O3grKyl7Yj1TdHJpbmcuZnJvbUNoYXJDb2RlKHgpO2EobixzLHksYixiKX1mb3IoeD0yMTY7eDw9MjQ2O3grKyl7Yj1TdHJpbmcuZnJvbUNoYXJDb2RlKHgpO2EobixzLHksYixiKX1mb3IoeD0yNDg7eDw9MjU1O3grKyl7Yj1TdHJpbmcuZnJvbUNoYXJDb2RlKHgpO2EobixzLHksYixiKX1mb3IoeD0xMDQwO3g8PTExMDM7eCsrKXtiPVN0cmluZy5mcm9tQ2hhckNvZGUoeCk7YShuLHMseSxiLGIpfX0se31dLDI0OltmdW5jdGlvbihlLHQscil7dmFyIGE9L1tcXHVBQzAwLVxcdUQ3QUZdLzt2YXIgaT0vW1xcdTMwNDAtXFx1MzA5Rl18W1xcdTMwQTAtXFx1MzBGRl18W1xcdTRFMDAtXFx1OUZBRl18W1xcdUFDMDAtXFx1RDdBRl0vO3QuZXhwb3J0cz17Y2prUmVnZXg6aSxoYW5ndWxSZWdleDphfX0se31dLDI1OltmdW5jdGlvbihlLHQscil7dmFyIGE9QXJyYXkucHJvdG90eXBlLmluZGV4T2Y7dmFyIGk9ZnVuY3Rpb24oZSx0KXtpZihlPT1udWxsKXtyZXR1cm4tMX1pZihhJiZlLmluZGV4T2Y9PT1hKXtyZXR1cm4gZS5pbmRleE9mKHQpfXZhciByPTA7dmFyIGk9ZS5sZW5ndGg7Zm9yKDtyPGk7cisrKXtpZihlW3JdPT09dCl7cmV0dXJuIHJ9fXJldHVybi0xfTt2YXIgbj1mdW5jdGlvbihlLHQpe3JldHVybiBpKGUsdCkhPT0tMX07dmFyIHM9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZT09PXVuZGVmaW5lZD90OmV9O3ZhciBsPS8oW0EtWl0pL2c7dmFyIG89ZnVuY3Rpb24oZSl7cmV0dXJuIGUucmVwbGFjZShsLFwiLSQxXCIpLnRvTG93ZXJDYXNlKCl9O3ZhciB1PXtcIiZcIjpcIiZhbXA7XCIsXCI+XCI6XCImZ3Q7XCIsXCI8XCI6XCImbHQ7XCIsJ1wiJzpcIiZxdW90O1wiLFwiJ1wiOlwiJiN4Mjc7XCJ9O3ZhciBwPS9bJj48XCInXS9nO2Z1bmN0aW9uIGgoZSl7cmV0dXJuIHVbZV19ZnVuY3Rpb24gYyhlKXtyZXR1cm4oXCJcIitlKS5yZXBsYWNlKHAsaCl9dmFyIHY7aWYodHlwZW9mIGRvY3VtZW50IT09XCJ1bmRlZmluZWRcIil7dmFyIGY9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNwYW5cIik7aWYoXCJ0ZXh0Q29udGVudFwiaW4gZil7dj1mdW5jdGlvbihlLHQpe2UudGV4dENvbnRlbnQ9dH19ZWxzZXt2PWZ1bmN0aW9uKGUsdCl7ZS5pbm5lclRleHQ9dH19fWZ1bmN0aW9uIG0oZSl7dihlLFwiXCIpfXQuZXhwb3J0cz17Y29udGFpbnM6bixkZWZsdDpzLGVzY2FwZTpjLGh5cGhlbmF0ZTpvLGluZGV4T2Y6aSxzZXRUZXh0Q29udGVudDp2LGNsZWFyTm9kZTptfX0se31dfSx7fSxbMV0pKDEpfSk7XG4iLCIvKmdsb2JhbCBkZWZpbmU6ZmFsc2UgKi9cbi8qKlxuICogQ29weXJpZ2h0IDIwMTYgQ3JhaWcgQ2FtcGJlbGxcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqXG4gKiBNb3VzZXRyYXAgaXMgYSBzaW1wbGUga2V5Ym9hcmQgc2hvcnRjdXQgbGlicmFyeSBmb3IgSmF2YXNjcmlwdCB3aXRoXG4gKiBubyBleHRlcm5hbCBkZXBlbmRlbmNpZXNcbiAqXG4gKiBAdmVyc2lvbiAxLjYuMFxuICogQHVybCBjcmFpZy5pcy9raWxsaW5nL21pY2VcbiAqL1xuKGZ1bmN0aW9uKHdpbmRvdywgZG9jdW1lbnQsIHVuZGVmaW5lZCkge1xuXG4gICAgLy8gQ2hlY2sgaWYgbW91c2V0cmFwIGlzIHVzZWQgaW5zaWRlIGJyb3dzZXIsIGlmIG5vdCwgcmV0dXJuXG4gICAgaWYgKCF3aW5kb3cpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIG1hcHBpbmcgb2Ygc3BlY2lhbCBrZXljb2RlcyB0byB0aGVpciBjb3JyZXNwb25kaW5nIGtleXNcbiAgICAgKlxuICAgICAqIGV2ZXJ5dGhpbmcgaW4gdGhpcyBkaWN0aW9uYXJ5IGNhbm5vdCB1c2Uga2V5cHJlc3MgZXZlbnRzXG4gICAgICogc28gaXQgaGFzIHRvIGJlIGhlcmUgdG8gbWFwIHRvIHRoZSBjb3JyZWN0IGtleWNvZGVzIGZvclxuICAgICAqIGtleXVwL2tleWRvd24gZXZlbnRzXG4gICAgICpcbiAgICAgKiBAdHlwZSB7T2JqZWN0fVxuICAgICAqL1xuICAgIHZhciBfTUFQID0ge1xuICAgICAgICA4OiAnYmFja3NwYWNlJyxcbiAgICAgICAgOTogJ3RhYicsXG4gICAgICAgIDEzOiAnZW50ZXInLFxuICAgICAgICAxNjogJ3NoaWZ0JyxcbiAgICAgICAgMTc6ICdjdHJsJyxcbiAgICAgICAgMTg6ICdhbHQnLFxuICAgICAgICAyMDogJ2NhcHNsb2NrJyxcbiAgICAgICAgMjc6ICdlc2MnLFxuICAgICAgICAzMjogJ3NwYWNlJyxcbiAgICAgICAgMzM6ICdwYWdldXAnLFxuICAgICAgICAzNDogJ3BhZ2Vkb3duJyxcbiAgICAgICAgMzU6ICdlbmQnLFxuICAgICAgICAzNjogJ2hvbWUnLFxuICAgICAgICAzNzogJ2xlZnQnLFxuICAgICAgICAzODogJ3VwJyxcbiAgICAgICAgMzk6ICdyaWdodCcsXG4gICAgICAgIDQwOiAnZG93bicsXG4gICAgICAgIDQ1OiAnaW5zJyxcbiAgICAgICAgNDY6ICdkZWwnLFxuICAgICAgICA5MTogJ21ldGEnLFxuICAgICAgICA5MzogJ21ldGEnLFxuICAgICAgICAyMjQ6ICdtZXRhJ1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBtYXBwaW5nIGZvciBzcGVjaWFsIGNoYXJhY3RlcnMgc28gdGhleSBjYW4gc3VwcG9ydFxuICAgICAqXG4gICAgICogdGhpcyBkaWN0aW9uYXJ5IGlzIG9ubHkgdXNlZCBpbmNhc2UgeW91IHdhbnQgdG8gYmluZCBhXG4gICAgICoga2V5dXAgb3Iga2V5ZG93biBldmVudCB0byBvbmUgb2YgdGhlc2Uga2V5c1xuICAgICAqXG4gICAgICogQHR5cGUge09iamVjdH1cbiAgICAgKi9cbiAgICB2YXIgX0tFWUNPREVfTUFQID0ge1xuICAgICAgICAxMDY6ICcqJyxcbiAgICAgICAgMTA3OiAnKycsXG4gICAgICAgIDEwOTogJy0nLFxuICAgICAgICAxMTA6ICcuJyxcbiAgICAgICAgMTExIDogJy8nLFxuICAgICAgICAxODY6ICc7JyxcbiAgICAgICAgMTg3OiAnPScsXG4gICAgICAgIDE4ODogJywnLFxuICAgICAgICAxODk6ICctJyxcbiAgICAgICAgMTkwOiAnLicsXG4gICAgICAgIDE5MTogJy8nLFxuICAgICAgICAxOTI6ICdgJyxcbiAgICAgICAgMjE5OiAnWycsXG4gICAgICAgIDIyMDogJ1xcXFwnLFxuICAgICAgICAyMjE6ICddJyxcbiAgICAgICAgMjIyOiAnXFwnJ1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiB0aGlzIGlzIGEgbWFwcGluZyBvZiBrZXlzIHRoYXQgcmVxdWlyZSBzaGlmdCBvbiBhIFVTIGtleXBhZFxuICAgICAqIGJhY2sgdG8gdGhlIG5vbiBzaGlmdCBlcXVpdmVsZW50c1xuICAgICAqXG4gICAgICogdGhpcyBpcyBzbyB5b3UgY2FuIHVzZSBrZXl1cCBldmVudHMgd2l0aCB0aGVzZSBrZXlzXG4gICAgICpcbiAgICAgKiBub3RlIHRoYXQgdGhpcyB3aWxsIG9ubHkgd29yayByZWxpYWJseSBvbiBVUyBrZXlib2FyZHNcbiAgICAgKlxuICAgICAqIEB0eXBlIHtPYmplY3R9XG4gICAgICovXG4gICAgdmFyIF9TSElGVF9NQVAgPSB7XG4gICAgICAgICd+JzogJ2AnLFxuICAgICAgICAnISc6ICcxJyxcbiAgICAgICAgJ0AnOiAnMicsXG4gICAgICAgICcjJzogJzMnLFxuICAgICAgICAnJCc6ICc0JyxcbiAgICAgICAgJyUnOiAnNScsXG4gICAgICAgICdeJzogJzYnLFxuICAgICAgICAnJic6ICc3JyxcbiAgICAgICAgJyonOiAnOCcsXG4gICAgICAgICcoJzogJzknLFxuICAgICAgICAnKSc6ICcwJyxcbiAgICAgICAgJ18nOiAnLScsXG4gICAgICAgICcrJzogJz0nLFxuICAgICAgICAnOic6ICc7JyxcbiAgICAgICAgJ1xcXCInOiAnXFwnJyxcbiAgICAgICAgJzwnOiAnLCcsXG4gICAgICAgICc+JzogJy4nLFxuICAgICAgICAnPyc6ICcvJyxcbiAgICAgICAgJ3wnOiAnXFxcXCdcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogdGhpcyBpcyBhIGxpc3Qgb2Ygc3BlY2lhbCBzdHJpbmdzIHlvdSBjYW4gdXNlIHRvIG1hcFxuICAgICAqIHRvIG1vZGlmaWVyIGtleXMgd2hlbiB5b3Ugc3BlY2lmeSB5b3VyIGtleWJvYXJkIHNob3J0Y3V0c1xuICAgICAqXG4gICAgICogQHR5cGUge09iamVjdH1cbiAgICAgKi9cbiAgICB2YXIgX1NQRUNJQUxfQUxJQVNFUyA9IHtcbiAgICAgICAgJ29wdGlvbic6ICdhbHQnLFxuICAgICAgICAnY29tbWFuZCc6ICdtZXRhJyxcbiAgICAgICAgJ3JldHVybic6ICdlbnRlcicsXG4gICAgICAgICdlc2NhcGUnOiAnZXNjJyxcbiAgICAgICAgJ3BsdXMnOiAnKycsXG4gICAgICAgICdtb2QnOiAvTWFjfGlQb2R8aVBob25lfGlQYWQvLnRlc3QobmF2aWdhdG9yLnBsYXRmb3JtKSA/ICdtZXRhJyA6ICdjdHJsJ1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiB2YXJpYWJsZSB0byBzdG9yZSB0aGUgZmxpcHBlZCB2ZXJzaW9uIG9mIF9NQVAgZnJvbSBhYm92ZVxuICAgICAqIG5lZWRlZCB0byBjaGVjayBpZiB3ZSBzaG91bGQgdXNlIGtleXByZXNzIG9yIG5vdCB3aGVuIG5vIGFjdGlvblxuICAgICAqIGlzIHNwZWNpZmllZFxuICAgICAqXG4gICAgICogQHR5cGUge09iamVjdHx1bmRlZmluZWR9XG4gICAgICovXG4gICAgdmFyIF9SRVZFUlNFX01BUDtcblxuICAgIC8qKlxuICAgICAqIGxvb3AgdGhyb3VnaCB0aGUgZiBrZXlzLCBmMSB0byBmMTkgYW5kIGFkZCB0aGVtIHRvIHRoZSBtYXBcbiAgICAgKiBwcm9ncmFtYXRpY2FsbHlcbiAgICAgKi9cbiAgICBmb3IgKHZhciBpID0gMTsgaSA8IDIwOyArK2kpIHtcbiAgICAgICAgX01BUFsxMTEgKyBpXSA9ICdmJyArIGk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogbG9vcCB0aHJvdWdoIHRvIG1hcCBudW1iZXJzIG9uIHRoZSBudW1lcmljIGtleXBhZFxuICAgICAqL1xuICAgIGZvciAoaSA9IDA7IGkgPD0gOTsgKytpKSB7XG4gICAgICAgIF9NQVBbaSArIDk2XSA9IGk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogY3Jvc3MgYnJvd3NlciBhZGQgZXZlbnQgbWV0aG9kXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge0VsZW1lbnR8SFRNTERvY3VtZW50fSBvYmplY3RcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gdHlwZVxuICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrXG4gICAgICogQHJldHVybnMgdm9pZFxuICAgICAqL1xuICAgIGZ1bmN0aW9uIF9hZGRFdmVudChvYmplY3QsIHR5cGUsIGNhbGxiYWNrKSB7XG4gICAgICAgIGlmIChvYmplY3QuYWRkRXZlbnRMaXN0ZW5lcikge1xuICAgICAgICAgICAgb2JqZWN0LmFkZEV2ZW50TGlzdGVuZXIodHlwZSwgY2FsbGJhY2ssIGZhbHNlKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIG9iamVjdC5hdHRhY2hFdmVudCgnb24nICsgdHlwZSwgY2FsbGJhY2spO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIHRha2VzIHRoZSBldmVudCBhbmQgcmV0dXJucyB0aGUga2V5IGNoYXJhY3RlclxuICAgICAqXG4gICAgICogQHBhcmFtIHtFdmVudH0gZVxuICAgICAqIEByZXR1cm4ge3N0cmluZ31cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBfY2hhcmFjdGVyRnJvbUV2ZW50KGUpIHtcblxuICAgICAgICAvLyBmb3Iga2V5cHJlc3MgZXZlbnRzIHdlIHNob3VsZCByZXR1cm4gdGhlIGNoYXJhY3RlciBhcyBpc1xuICAgICAgICBpZiAoZS50eXBlID09ICdrZXlwcmVzcycpIHtcbiAgICAgICAgICAgIHZhciBjaGFyYWN0ZXIgPSBTdHJpbmcuZnJvbUNoYXJDb2RlKGUud2hpY2gpO1xuXG4gICAgICAgICAgICAvLyBpZiB0aGUgc2hpZnQga2V5IGlzIG5vdCBwcmVzc2VkIHRoZW4gaXQgaXMgc2FmZSB0byBhc3N1bWVcbiAgICAgICAgICAgIC8vIHRoYXQgd2Ugd2FudCB0aGUgY2hhcmFjdGVyIHRvIGJlIGxvd2VyY2FzZS4gIHRoaXMgbWVhbnMgaWZcbiAgICAgICAgICAgIC8vIHlvdSBhY2NpZGVudGFsbHkgaGF2ZSBjYXBzIGxvY2sgb24gdGhlbiB5b3VyIGtleSBiaW5kaW5nc1xuICAgICAgICAgICAgLy8gd2lsbCBjb250aW51ZSB0byB3b3JrXG4gICAgICAgICAgICAvL1xuICAgICAgICAgICAgLy8gdGhlIG9ubHkgc2lkZSBlZmZlY3QgdGhhdCBtaWdodCBub3QgYmUgZGVzaXJlZCBpcyBpZiB5b3VcbiAgICAgICAgICAgIC8vIGJpbmQgc29tZXRoaW5nIGxpa2UgJ0EnIGNhdXNlIHlvdSB3YW50IHRvIHRyaWdnZXIgYW5cbiAgICAgICAgICAgIC8vIGV2ZW50IHdoZW4gY2FwaXRhbCBBIGlzIHByZXNzZWQgY2FwcyBsb2NrIHdpbGwgbm8gbG9uZ2VyXG4gICAgICAgICAgICAvLyB0cmlnZ2VyIHRoZSBldmVudC4gIHNoaWZ0K2Egd2lsbCB0aG91Z2guXG4gICAgICAgICAgICBpZiAoIWUuc2hpZnRLZXkpIHtcbiAgICAgICAgICAgICAgICBjaGFyYWN0ZXIgPSBjaGFyYWN0ZXIudG9Mb3dlckNhc2UoKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIGNoYXJhY3RlcjtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIGZvciBub24ga2V5cHJlc3MgZXZlbnRzIHRoZSBzcGVjaWFsIG1hcHMgYXJlIG5lZWRlZFxuICAgICAgICBpZiAoX01BUFtlLndoaWNoXSkge1xuICAgICAgICAgICAgcmV0dXJuIF9NQVBbZS53aGljaF07XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoX0tFWUNPREVfTUFQW2Uud2hpY2hdKSB7XG4gICAgICAgICAgICByZXR1cm4gX0tFWUNPREVfTUFQW2Uud2hpY2hdO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gaWYgaXQgaXMgbm90IGluIHRoZSBzcGVjaWFsIG1hcFxuXG4gICAgICAgIC8vIHdpdGgga2V5ZG93biBhbmQga2V5dXAgZXZlbnRzIHRoZSBjaGFyYWN0ZXIgc2VlbXMgdG8gYWx3YXlzXG4gICAgICAgIC8vIGNvbWUgaW4gYXMgYW4gdXBwZXJjYXNlIGNoYXJhY3RlciB3aGV0aGVyIHlvdSBhcmUgcHJlc3Npbmcgc2hpZnRcbiAgICAgICAgLy8gb3Igbm90LiAgd2Ugc2hvdWxkIG1ha2Ugc3VyZSBpdCBpcyBhbHdheXMgbG93ZXJjYXNlIGZvciBjb21wYXJpc29uc1xuICAgICAgICByZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZShlLndoaWNoKS50b0xvd2VyQ2FzZSgpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIGNoZWNrcyBpZiB0d28gYXJyYXlzIGFyZSBlcXVhbFxuICAgICAqXG4gICAgICogQHBhcmFtIHtBcnJheX0gbW9kaWZpZXJzMVxuICAgICAqIEBwYXJhbSB7QXJyYXl9IG1vZGlmaWVyczJcbiAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn1cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBfbW9kaWZpZXJzTWF0Y2gobW9kaWZpZXJzMSwgbW9kaWZpZXJzMikge1xuICAgICAgICByZXR1cm4gbW9kaWZpZXJzMS5zb3J0KCkuam9pbignLCcpID09PSBtb2RpZmllcnMyLnNvcnQoKS5qb2luKCcsJyk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogdGFrZXMgYSBrZXkgZXZlbnQgYW5kIGZpZ3VyZXMgb3V0IHdoYXQgdGhlIG1vZGlmaWVycyBhcmVcbiAgICAgKlxuICAgICAqIEBwYXJhbSB7RXZlbnR9IGVcbiAgICAgKiBAcmV0dXJucyB7QXJyYXl9XG4gICAgICovXG4gICAgZnVuY3Rpb24gX2V2ZW50TW9kaWZpZXJzKGUpIHtcbiAgICAgICAgdmFyIG1vZGlmaWVycyA9IFtdO1xuXG4gICAgICAgIGlmIChlLnNoaWZ0S2V5KSB7XG4gICAgICAgICAgICBtb2RpZmllcnMucHVzaCgnc2hpZnQnKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChlLmFsdEtleSkge1xuICAgICAgICAgICAgbW9kaWZpZXJzLnB1c2goJ2FsdCcpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGUuY3RybEtleSkge1xuICAgICAgICAgICAgbW9kaWZpZXJzLnB1c2goJ2N0cmwnKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChlLm1ldGFLZXkpIHtcbiAgICAgICAgICAgIG1vZGlmaWVycy5wdXNoKCdtZXRhJyk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gbW9kaWZpZXJzO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIHByZXZlbnRzIGRlZmF1bHQgZm9yIHRoaXMgZXZlbnRcbiAgICAgKlxuICAgICAqIEBwYXJhbSB7RXZlbnR9IGVcbiAgICAgKiBAcmV0dXJucyB2b2lkXG4gICAgICovXG4gICAgZnVuY3Rpb24gX3ByZXZlbnREZWZhdWx0KGUpIHtcbiAgICAgICAgaWYgKGUucHJldmVudERlZmF1bHQpIHtcbiAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGUucmV0dXJuVmFsdWUgPSBmYWxzZTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBzdG9wcyBwcm9wb2dhdGlvbiBmb3IgdGhpcyBldmVudFxuICAgICAqXG4gICAgICogQHBhcmFtIHtFdmVudH0gZVxuICAgICAqIEByZXR1cm5zIHZvaWRcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBfc3RvcFByb3BhZ2F0aW9uKGUpIHtcbiAgICAgICAgaWYgKGUuc3RvcFByb3BhZ2F0aW9uKSB7XG4gICAgICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgZS5jYW5jZWxCdWJibGUgPSB0cnVlO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIGRldGVybWluZXMgaWYgdGhlIGtleWNvZGUgc3BlY2lmaWVkIGlzIGEgbW9kaWZpZXIga2V5IG9yIG5vdFxuICAgICAqXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGtleVxuICAgICAqIEByZXR1cm5zIHtib29sZWFufVxuICAgICAqL1xuICAgIGZ1bmN0aW9uIF9pc01vZGlmaWVyKGtleSkge1xuICAgICAgICByZXR1cm4ga2V5ID09ICdzaGlmdCcgfHwga2V5ID09ICdjdHJsJyB8fCBrZXkgPT0gJ2FsdCcgfHwga2V5ID09ICdtZXRhJztcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiByZXZlcnNlcyB0aGUgbWFwIGxvb2t1cCBzbyB0aGF0IHdlIGNhbiBsb29rIGZvciBzcGVjaWZpYyBrZXlzXG4gICAgICogdG8gc2VlIHdoYXQgY2FuIGFuZCBjYW4ndCB1c2Uga2V5cHJlc3NcbiAgICAgKlxuICAgICAqIEByZXR1cm4ge09iamVjdH1cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBfZ2V0UmV2ZXJzZU1hcCgpIHtcbiAgICAgICAgaWYgKCFfUkVWRVJTRV9NQVApIHtcbiAgICAgICAgICAgIF9SRVZFUlNFX01BUCA9IHt9O1xuICAgICAgICAgICAgZm9yICh2YXIga2V5IGluIF9NQVApIHtcblxuICAgICAgICAgICAgICAgIC8vIHB1bGwgb3V0IHRoZSBudW1lcmljIGtleXBhZCBmcm9tIGhlcmUgY2F1c2Uga2V5cHJlc3Mgc2hvdWxkXG4gICAgICAgICAgICAgICAgLy8gYmUgYWJsZSB0byBkZXRlY3QgdGhlIGtleXMgZnJvbSB0aGUgY2hhcmFjdGVyXG4gICAgICAgICAgICAgICAgaWYgKGtleSA+IDk1ICYmIGtleSA8IDExMikge1xuICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBpZiAoX01BUC5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XG4gICAgICAgICAgICAgICAgICAgIF9SRVZFUlNFX01BUFtfTUFQW2tleV1dID0ga2V5O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gX1JFVkVSU0VfTUFQO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIHBpY2tzIHRoZSBiZXN0IGFjdGlvbiBiYXNlZCBvbiB0aGUga2V5IGNvbWJpbmF0aW9uXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30ga2V5IC0gY2hhcmFjdGVyIGZvciBrZXlcbiAgICAgKiBAcGFyYW0ge0FycmF5fSBtb2RpZmllcnNcbiAgICAgKiBAcGFyYW0ge3N0cmluZz19IGFjdGlvbiBwYXNzZWQgaW5cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBfcGlja0Jlc3RBY3Rpb24oa2V5LCBtb2RpZmllcnMsIGFjdGlvbikge1xuXG4gICAgICAgIC8vIGlmIG5vIGFjdGlvbiB3YXMgcGlja2VkIGluIHdlIHNob3VsZCB0cnkgdG8gcGljayB0aGUgb25lXG4gICAgICAgIC8vIHRoYXQgd2UgdGhpbmsgd291bGQgd29yayBiZXN0IGZvciB0aGlzIGtleVxuICAgICAgICBpZiAoIWFjdGlvbikge1xuICAgICAgICAgICAgYWN0aW9uID0gX2dldFJldmVyc2VNYXAoKVtrZXldID8gJ2tleWRvd24nIDogJ2tleXByZXNzJztcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIG1vZGlmaWVyIGtleXMgZG9uJ3Qgd29yayBhcyBleHBlY3RlZCB3aXRoIGtleXByZXNzLFxuICAgICAgICAvLyBzd2l0Y2ggdG8ga2V5ZG93blxuICAgICAgICBpZiAoYWN0aW9uID09ICdrZXlwcmVzcycgJiYgbW9kaWZpZXJzLmxlbmd0aCkge1xuICAgICAgICAgICAgYWN0aW9uID0gJ2tleWRvd24nO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGFjdGlvbjtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBDb252ZXJ0cyBmcm9tIGEgc3RyaW5nIGtleSBjb21iaW5hdGlvbiB0byBhbiBhcnJheVxuICAgICAqXG4gICAgICogQHBhcmFtICB7c3RyaW5nfSBjb21iaW5hdGlvbiBsaWtlIFwiY29tbWFuZCtzaGlmdCtsXCJcbiAgICAgKiBAcmV0dXJuIHtBcnJheX1cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBfa2V5c0Zyb21TdHJpbmcoY29tYmluYXRpb24pIHtcbiAgICAgICAgaWYgKGNvbWJpbmF0aW9uID09PSAnKycpIHtcbiAgICAgICAgICAgIHJldHVybiBbJysnXTtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbWJpbmF0aW9uID0gY29tYmluYXRpb24ucmVwbGFjZSgvXFwrezJ9L2csICcrcGx1cycpO1xuICAgICAgICByZXR1cm4gY29tYmluYXRpb24uc3BsaXQoJysnKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBHZXRzIGluZm8gZm9yIGEgc3BlY2lmaWMga2V5IGNvbWJpbmF0aW9uXG4gICAgICpcbiAgICAgKiBAcGFyYW0gIHtzdHJpbmd9IGNvbWJpbmF0aW9uIGtleSBjb21iaW5hdGlvbiAoXCJjb21tYW5kK3NcIiBvciBcImFcIiBvciBcIipcIilcbiAgICAgKiBAcGFyYW0gIHtzdHJpbmc9fSBhY3Rpb25cbiAgICAgKiBAcmV0dXJucyB7T2JqZWN0fVxuICAgICAqL1xuICAgIGZ1bmN0aW9uIF9nZXRLZXlJbmZvKGNvbWJpbmF0aW9uLCBhY3Rpb24pIHtcbiAgICAgICAgdmFyIGtleXM7XG4gICAgICAgIHZhciBrZXk7XG4gICAgICAgIHZhciBpO1xuICAgICAgICB2YXIgbW9kaWZpZXJzID0gW107XG5cbiAgICAgICAgLy8gdGFrZSB0aGUga2V5cyBmcm9tIHRoaXMgcGF0dGVybiBhbmQgZmlndXJlIG91dCB3aGF0IHRoZSBhY3R1YWxcbiAgICAgICAgLy8gcGF0dGVybiBpcyBhbGwgYWJvdXRcbiAgICAgICAga2V5cyA9IF9rZXlzRnJvbVN0cmluZyhjb21iaW5hdGlvbik7XG5cbiAgICAgICAgZm9yIChpID0gMDsgaSA8IGtleXMubGVuZ3RoOyArK2kpIHtcbiAgICAgICAgICAgIGtleSA9IGtleXNbaV07XG5cbiAgICAgICAgICAgIC8vIG5vcm1hbGl6ZSBrZXkgbmFtZXNcbiAgICAgICAgICAgIGlmIChfU1BFQ0lBTF9BTElBU0VTW2tleV0pIHtcbiAgICAgICAgICAgICAgICBrZXkgPSBfU1BFQ0lBTF9BTElBU0VTW2tleV07XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIGlmIHRoaXMgaXMgbm90IGEga2V5cHJlc3MgZXZlbnQgdGhlbiB3ZSBzaG91bGRcbiAgICAgICAgICAgIC8vIGJlIHNtYXJ0IGFib3V0IHVzaW5nIHNoaWZ0IGtleXNcbiAgICAgICAgICAgIC8vIHRoaXMgd2lsbCBvbmx5IHdvcmsgZm9yIFVTIGtleWJvYXJkcyBob3dldmVyXG4gICAgICAgICAgICBpZiAoYWN0aW9uICYmIGFjdGlvbiAhPSAna2V5cHJlc3MnICYmIF9TSElGVF9NQVBba2V5XSkge1xuICAgICAgICAgICAgICAgIGtleSA9IF9TSElGVF9NQVBba2V5XTtcbiAgICAgICAgICAgICAgICBtb2RpZmllcnMucHVzaCgnc2hpZnQnKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8gaWYgdGhpcyBrZXkgaXMgYSBtb2RpZmllciB0aGVuIGFkZCBpdCB0byB0aGUgbGlzdCBvZiBtb2RpZmllcnNcbiAgICAgICAgICAgIGlmIChfaXNNb2RpZmllcihrZXkpKSB7XG4gICAgICAgICAgICAgICAgbW9kaWZpZXJzLnB1c2goa2V5KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8vIGRlcGVuZGluZyBvbiB3aGF0IHRoZSBrZXkgY29tYmluYXRpb24gaXNcbiAgICAgICAgLy8gd2Ugd2lsbCB0cnkgdG8gcGljayB0aGUgYmVzdCBldmVudCBmb3IgaXRcbiAgICAgICAgYWN0aW9uID0gX3BpY2tCZXN0QWN0aW9uKGtleSwgbW9kaWZpZXJzLCBhY3Rpb24pO1xuXG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBrZXk6IGtleSxcbiAgICAgICAgICAgIG1vZGlmaWVyczogbW9kaWZpZXJzLFxuICAgICAgICAgICAgYWN0aW9uOiBhY3Rpb25cbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBfYmVsb25nc1RvKGVsZW1lbnQsIGFuY2VzdG9yKSB7XG4gICAgICAgIGlmIChlbGVtZW50ID09PSBudWxsIHx8IGVsZW1lbnQgPT09IGRvY3VtZW50KSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoZWxlbWVudCA9PT0gYW5jZXN0b3IpIHtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIF9iZWxvbmdzVG8oZWxlbWVudC5wYXJlbnROb2RlLCBhbmNlc3Rvcik7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gTW91c2V0cmFwKHRhcmdldEVsZW1lbnQpIHtcbiAgICAgICAgdmFyIHNlbGYgPSB0aGlzO1xuXG4gICAgICAgIHRhcmdldEVsZW1lbnQgPSB0YXJnZXRFbGVtZW50IHx8IGRvY3VtZW50O1xuXG4gICAgICAgIGlmICghKHNlbGYgaW5zdGFuY2VvZiBNb3VzZXRyYXApKSB7XG4gICAgICAgICAgICByZXR1cm4gbmV3IE1vdXNldHJhcCh0YXJnZXRFbGVtZW50KTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBlbGVtZW50IHRvIGF0dGFjaCBrZXkgZXZlbnRzIHRvXG4gICAgICAgICAqXG4gICAgICAgICAqIEB0eXBlIHtFbGVtZW50fVxuICAgICAgICAgKi9cbiAgICAgICAgc2VsZi50YXJnZXQgPSB0YXJnZXRFbGVtZW50O1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBhIGxpc3Qgb2YgYWxsIHRoZSBjYWxsYmFja3Mgc2V0dXAgdmlhIE1vdXNldHJhcC5iaW5kKClcbiAgICAgICAgICpcbiAgICAgICAgICogQHR5cGUge09iamVjdH1cbiAgICAgICAgICovXG4gICAgICAgIHNlbGYuX2NhbGxiYWNrcyA9IHt9O1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBkaXJlY3QgbWFwIG9mIHN0cmluZyBjb21iaW5hdGlvbnMgdG8gY2FsbGJhY2tzIHVzZWQgZm9yIHRyaWdnZXIoKVxuICAgICAgICAgKlxuICAgICAgICAgKiBAdHlwZSB7T2JqZWN0fVxuICAgICAgICAgKi9cbiAgICAgICAgc2VsZi5fZGlyZWN0TWFwID0ge307XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIGtlZXBzIHRyYWNrIG9mIHdoYXQgbGV2ZWwgZWFjaCBzZXF1ZW5jZSBpcyBhdCBzaW5jZSBtdWx0aXBsZVxuICAgICAgICAgKiBzZXF1ZW5jZXMgY2FuIHN0YXJ0IG91dCB3aXRoIHRoZSBzYW1lIHNlcXVlbmNlXG4gICAgICAgICAqXG4gICAgICAgICAqIEB0eXBlIHtPYmplY3R9XG4gICAgICAgICAqL1xuICAgICAgICB2YXIgX3NlcXVlbmNlTGV2ZWxzID0ge307XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIHZhcmlhYmxlIHRvIHN0b3JlIHRoZSBzZXRUaW1lb3V0IGNhbGxcbiAgICAgICAgICpcbiAgICAgICAgICogQHR5cGUge251bGx8bnVtYmVyfVxuICAgICAgICAgKi9cbiAgICAgICAgdmFyIF9yZXNldFRpbWVyO1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiB0ZW1wb3Jhcnkgc3RhdGUgd2hlcmUgd2Ugd2lsbCBpZ25vcmUgdGhlIG5leHQga2V5dXBcbiAgICAgICAgICpcbiAgICAgICAgICogQHR5cGUge2Jvb2xlYW58c3RyaW5nfVxuICAgICAgICAgKi9cbiAgICAgICAgdmFyIF9pZ25vcmVOZXh0S2V5dXAgPSBmYWxzZTtcblxuICAgICAgICAvKipcbiAgICAgICAgICogdGVtcG9yYXJ5IHN0YXRlIHdoZXJlIHdlIHdpbGwgaWdub3JlIHRoZSBuZXh0IGtleXByZXNzXG4gICAgICAgICAqXG4gICAgICAgICAqIEB0eXBlIHtib29sZWFufVxuICAgICAgICAgKi9cbiAgICAgICAgdmFyIF9pZ25vcmVOZXh0S2V5cHJlc3MgPSBmYWxzZTtcblxuICAgICAgICAvKipcbiAgICAgICAgICogYXJlIHdlIGN1cnJlbnRseSBpbnNpZGUgb2YgYSBzZXF1ZW5jZT9cbiAgICAgICAgICogdHlwZSBvZiBhY3Rpb24gKFwia2V5dXBcIiBvciBcImtleWRvd25cIiBvciBcImtleXByZXNzXCIpIG9yIGZhbHNlXG4gICAgICAgICAqXG4gICAgICAgICAqIEB0eXBlIHtib29sZWFufHN0cmluZ31cbiAgICAgICAgICovXG4gICAgICAgIHZhciBfbmV4dEV4cGVjdGVkQWN0aW9uID0gZmFsc2U7XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIHJlc2V0cyBhbGwgc2VxdWVuY2UgY291bnRlcnMgZXhjZXB0IGZvciB0aGUgb25lcyBwYXNzZWQgaW5cbiAgICAgICAgICpcbiAgICAgICAgICogQHBhcmFtIHtPYmplY3R9IGRvTm90UmVzZXRcbiAgICAgICAgICogQHJldHVybnMgdm9pZFxuICAgICAgICAgKi9cbiAgICAgICAgZnVuY3Rpb24gX3Jlc2V0U2VxdWVuY2VzKGRvTm90UmVzZXQpIHtcbiAgICAgICAgICAgIGRvTm90UmVzZXQgPSBkb05vdFJlc2V0IHx8IHt9O1xuXG4gICAgICAgICAgICB2YXIgYWN0aXZlU2VxdWVuY2VzID0gZmFsc2UsXG4gICAgICAgICAgICAgICAga2V5O1xuXG4gICAgICAgICAgICBmb3IgKGtleSBpbiBfc2VxdWVuY2VMZXZlbHMpIHtcbiAgICAgICAgICAgICAgICBpZiAoZG9Ob3RSZXNldFtrZXldKSB7XG4gICAgICAgICAgICAgICAgICAgIGFjdGl2ZVNlcXVlbmNlcyA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBfc2VxdWVuY2VMZXZlbHNba2V5XSA9IDA7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmICghYWN0aXZlU2VxdWVuY2VzKSB7XG4gICAgICAgICAgICAgICAgX25leHRFeHBlY3RlZEFjdGlvbiA9IGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIGZpbmRzIGFsbCBjYWxsYmFja3MgdGhhdCBtYXRjaCBiYXNlZCBvbiB0aGUga2V5Y29kZSwgbW9kaWZpZXJzLFxuICAgICAgICAgKiBhbmQgYWN0aW9uXG4gICAgICAgICAqXG4gICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBjaGFyYWN0ZXJcbiAgICAgICAgICogQHBhcmFtIHtBcnJheX0gbW9kaWZpZXJzXG4gICAgICAgICAqIEBwYXJhbSB7RXZlbnR8T2JqZWN0fSBlXG4gICAgICAgICAqIEBwYXJhbSB7c3RyaW5nPX0gc2VxdWVuY2VOYW1lIC0gbmFtZSBvZiB0aGUgc2VxdWVuY2Ugd2UgYXJlIGxvb2tpbmcgZm9yXG4gICAgICAgICAqIEBwYXJhbSB7c3RyaW5nPX0gY29tYmluYXRpb25cbiAgICAgICAgICogQHBhcmFtIHtudW1iZXI9fSBsZXZlbFxuICAgICAgICAgKiBAcmV0dXJucyB7QXJyYXl9XG4gICAgICAgICAqL1xuICAgICAgICBmdW5jdGlvbiBfZ2V0TWF0Y2hlcyhjaGFyYWN0ZXIsIG1vZGlmaWVycywgZSwgc2VxdWVuY2VOYW1lLCBjb21iaW5hdGlvbiwgbGV2ZWwpIHtcbiAgICAgICAgICAgIHZhciBpO1xuICAgICAgICAgICAgdmFyIGNhbGxiYWNrO1xuICAgICAgICAgICAgdmFyIG1hdGNoZXMgPSBbXTtcbiAgICAgICAgICAgIHZhciBhY3Rpb24gPSBlLnR5cGU7XG5cbiAgICAgICAgICAgIC8vIGlmIHRoZXJlIGFyZSBubyBldmVudHMgcmVsYXRlZCB0byB0aGlzIGtleWNvZGVcbiAgICAgICAgICAgIGlmICghc2VsZi5fY2FsbGJhY2tzW2NoYXJhY3Rlcl0pIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gW107XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIGlmIGEgbW9kaWZpZXIga2V5IGlzIGNvbWluZyB1cCBvbiBpdHMgb3duIHdlIHNob3VsZCBhbGxvdyBpdFxuICAgICAgICAgICAgaWYgKGFjdGlvbiA9PSAna2V5dXAnICYmIF9pc01vZGlmaWVyKGNoYXJhY3RlcikpIHtcbiAgICAgICAgICAgICAgICBtb2RpZmllcnMgPSBbY2hhcmFjdGVyXTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8gbG9vcCB0aHJvdWdoIGFsbCBjYWxsYmFja3MgZm9yIHRoZSBrZXkgdGhhdCB3YXMgcHJlc3NlZFxuICAgICAgICAgICAgLy8gYW5kIHNlZSBpZiBhbnkgb2YgdGhlbSBtYXRjaFxuICAgICAgICAgICAgZm9yIChpID0gMDsgaSA8IHNlbGYuX2NhbGxiYWNrc1tjaGFyYWN0ZXJdLmxlbmd0aDsgKytpKSB7XG4gICAgICAgICAgICAgICAgY2FsbGJhY2sgPSBzZWxmLl9jYWxsYmFja3NbY2hhcmFjdGVyXVtpXTtcblxuICAgICAgICAgICAgICAgIC8vIGlmIGEgc2VxdWVuY2UgbmFtZSBpcyBub3Qgc3BlY2lmaWVkLCBidXQgdGhpcyBpcyBhIHNlcXVlbmNlIGF0XG4gICAgICAgICAgICAgICAgLy8gdGhlIHdyb25nIGxldmVsIHRoZW4gbW92ZSBvbnRvIHRoZSBuZXh0IG1hdGNoXG4gICAgICAgICAgICAgICAgaWYgKCFzZXF1ZW5jZU5hbWUgJiYgY2FsbGJhY2suc2VxICYmIF9zZXF1ZW5jZUxldmVsc1tjYWxsYmFjay5zZXFdICE9IGNhbGxiYWNrLmxldmVsKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIC8vIGlmIHRoZSBhY3Rpb24gd2UgYXJlIGxvb2tpbmcgZm9yIGRvZXNuJ3QgbWF0Y2ggdGhlIGFjdGlvbiB3ZSBnb3RcbiAgICAgICAgICAgICAgICAvLyB0aGVuIHdlIHNob3VsZCBrZWVwIGdvaW5nXG4gICAgICAgICAgICAgICAgaWYgKGFjdGlvbiAhPSBjYWxsYmFjay5hY3Rpb24pIHtcbiAgICAgICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgLy8gaWYgdGhpcyBpcyBhIGtleXByZXNzIGV2ZW50IGFuZCB0aGUgbWV0YSBrZXkgYW5kIGNvbnRyb2wga2V5XG4gICAgICAgICAgICAgICAgLy8gYXJlIG5vdCBwcmVzc2VkIHRoYXQgbWVhbnMgdGhhdCB3ZSBuZWVkIHRvIG9ubHkgbG9vayBhdCB0aGVcbiAgICAgICAgICAgICAgICAvLyBjaGFyYWN0ZXIsIG90aGVyd2lzZSBjaGVjayB0aGUgbW9kaWZpZXJzIGFzIHdlbGxcbiAgICAgICAgICAgICAgICAvL1xuICAgICAgICAgICAgICAgIC8vIGNocm9tZSB3aWxsIG5vdCBmaXJlIGEga2V5cHJlc3MgaWYgbWV0YSBvciBjb250cm9sIGlzIGRvd25cbiAgICAgICAgICAgICAgICAvLyBzYWZhcmkgd2lsbCBmaXJlIGEga2V5cHJlc3MgaWYgbWV0YSBvciBtZXRhK3NoaWZ0IGlzIGRvd25cbiAgICAgICAgICAgICAgICAvLyBmaXJlZm94IHdpbGwgZmlyZSBhIGtleXByZXNzIGlmIG1ldGEgb3IgY29udHJvbCBpcyBkb3duXG4gICAgICAgICAgICAgICAgaWYgKChhY3Rpb24gPT0gJ2tleXByZXNzJyAmJiAhZS5tZXRhS2V5ICYmICFlLmN0cmxLZXkpIHx8IF9tb2RpZmllcnNNYXRjaChtb2RpZmllcnMsIGNhbGxiYWNrLm1vZGlmaWVycykpIHtcblxuICAgICAgICAgICAgICAgICAgICAvLyB3aGVuIHlvdSBiaW5kIGEgY29tYmluYXRpb24gb3Igc2VxdWVuY2UgYSBzZWNvbmQgdGltZSBpdFxuICAgICAgICAgICAgICAgICAgICAvLyBzaG91bGQgb3ZlcndyaXRlIHRoZSBmaXJzdCBvbmUuICBpZiBhIHNlcXVlbmNlTmFtZSBvclxuICAgICAgICAgICAgICAgICAgICAvLyBjb21iaW5hdGlvbiBpcyBzcGVjaWZpZWQgaW4gdGhpcyBjYWxsIGl0IGRvZXMganVzdCB0aGF0XG4gICAgICAgICAgICAgICAgICAgIC8vXG4gICAgICAgICAgICAgICAgICAgIC8vIEB0b2RvIG1ha2UgZGVsZXRpbmcgaXRzIG93biBtZXRob2Q/XG4gICAgICAgICAgICAgICAgICAgIHZhciBkZWxldGVDb21ibyA9ICFzZXF1ZW5jZU5hbWUgJiYgY2FsbGJhY2suY29tYm8gPT0gY29tYmluYXRpb247XG4gICAgICAgICAgICAgICAgICAgIHZhciBkZWxldGVTZXF1ZW5jZSA9IHNlcXVlbmNlTmFtZSAmJiBjYWxsYmFjay5zZXEgPT0gc2VxdWVuY2VOYW1lICYmIGNhbGxiYWNrLmxldmVsID09IGxldmVsO1xuICAgICAgICAgICAgICAgICAgICBpZiAoZGVsZXRlQ29tYm8gfHwgZGVsZXRlU2VxdWVuY2UpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYuX2NhbGxiYWNrc1tjaGFyYWN0ZXJdLnNwbGljZShpLCAxKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgIG1hdGNoZXMucHVzaChjYWxsYmFjayk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4gbWF0Y2hlcztcbiAgICAgICAgfVxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBhY3R1YWxseSBjYWxscyB0aGUgY2FsbGJhY2sgZnVuY3Rpb25cbiAgICAgICAgICpcbiAgICAgICAgICogaWYgeW91ciBjYWxsYmFjayBmdW5jdGlvbiByZXR1cm5zIGZhbHNlIHRoaXMgd2lsbCB1c2UgdGhlIGpxdWVyeVxuICAgICAgICAgKiBjb252ZW50aW9uIC0gcHJldmVudCBkZWZhdWx0IGFuZCBzdG9wIHByb3BvZ2F0aW9uIG9uIHRoZSBldmVudFxuICAgICAgICAgKlxuICAgICAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFja1xuICAgICAgICAgKiBAcGFyYW0ge0V2ZW50fSBlXG4gICAgICAgICAqIEByZXR1cm5zIHZvaWRcbiAgICAgICAgICovXG4gICAgICAgIGZ1bmN0aW9uIF9maXJlQ2FsbGJhY2soY2FsbGJhY2ssIGUsIGNvbWJvLCBzZXF1ZW5jZSkge1xuXG4gICAgICAgICAgICAvLyBpZiB0aGlzIGV2ZW50IHNob3VsZCBub3QgaGFwcGVuIHN0b3AgaGVyZVxuICAgICAgICAgICAgaWYgKHNlbGYuc3RvcENhbGxiYWNrKGUsIGUudGFyZ2V0IHx8IGUuc3JjRWxlbWVudCwgY29tYm8sIHNlcXVlbmNlKSkge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKGNhbGxiYWNrKGUsIGNvbWJvKSA9PT0gZmFsc2UpIHtcbiAgICAgICAgICAgICAgICBfcHJldmVudERlZmF1bHQoZSk7XG4gICAgICAgICAgICAgICAgX3N0b3BQcm9wYWdhdGlvbihlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBoYW5kbGVzIGEgY2hhcmFjdGVyIGtleSBldmVudFxuICAgICAgICAgKlxuICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gY2hhcmFjdGVyXG4gICAgICAgICAqIEBwYXJhbSB7QXJyYXl9IG1vZGlmaWVyc1xuICAgICAgICAgKiBAcGFyYW0ge0V2ZW50fSBlXG4gICAgICAgICAqIEByZXR1cm5zIHZvaWRcbiAgICAgICAgICovXG4gICAgICAgIHNlbGYuX2hhbmRsZUtleSA9IGZ1bmN0aW9uKGNoYXJhY3RlciwgbW9kaWZpZXJzLCBlKSB7XG4gICAgICAgICAgICB2YXIgY2FsbGJhY2tzID0gX2dldE1hdGNoZXMoY2hhcmFjdGVyLCBtb2RpZmllcnMsIGUpO1xuICAgICAgICAgICAgdmFyIGk7XG4gICAgICAgICAgICB2YXIgZG9Ob3RSZXNldCA9IHt9O1xuICAgICAgICAgICAgdmFyIG1heExldmVsID0gMDtcbiAgICAgICAgICAgIHZhciBwcm9jZXNzZWRTZXF1ZW5jZUNhbGxiYWNrID0gZmFsc2U7XG5cbiAgICAgICAgICAgIC8vIENhbGN1bGF0ZSB0aGUgbWF4TGV2ZWwgZm9yIHNlcXVlbmNlcyBzbyB3ZSBjYW4gb25seSBleGVjdXRlIHRoZSBsb25nZXN0IGNhbGxiYWNrIHNlcXVlbmNlXG4gICAgICAgICAgICBmb3IgKGkgPSAwOyBpIDwgY2FsbGJhY2tzLmxlbmd0aDsgKytpKSB7XG4gICAgICAgICAgICAgICAgaWYgKGNhbGxiYWNrc1tpXS5zZXEpIHtcbiAgICAgICAgICAgICAgICAgICAgbWF4TGV2ZWwgPSBNYXRoLm1heChtYXhMZXZlbCwgY2FsbGJhY2tzW2ldLmxldmVsKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIGxvb3AgdGhyb3VnaCBtYXRjaGluZyBjYWxsYmFja3MgZm9yIHRoaXMga2V5IGV2ZW50XG4gICAgICAgICAgICBmb3IgKGkgPSAwOyBpIDwgY2FsbGJhY2tzLmxlbmd0aDsgKytpKSB7XG5cbiAgICAgICAgICAgICAgICAvLyBmaXJlIGZvciBhbGwgc2VxdWVuY2UgY2FsbGJhY2tzXG4gICAgICAgICAgICAgICAgLy8gdGhpcyBpcyBiZWNhdXNlIGlmIGZvciBleGFtcGxlIHlvdSBoYXZlIG11bHRpcGxlIHNlcXVlbmNlc1xuICAgICAgICAgICAgICAgIC8vIGJvdW5kIHN1Y2ggYXMgXCJnIGlcIiBhbmQgXCJnIHRcIiB0aGV5IGJvdGggbmVlZCB0byBmaXJlIHRoZVxuICAgICAgICAgICAgICAgIC8vIGNhbGxiYWNrIGZvciBtYXRjaGluZyBnIGNhdXNlIG90aGVyd2lzZSB5b3UgY2FuIG9ubHkgZXZlclxuICAgICAgICAgICAgICAgIC8vIG1hdGNoIHRoZSBmaXJzdCBvbmVcbiAgICAgICAgICAgICAgICBpZiAoY2FsbGJhY2tzW2ldLnNlcSkge1xuXG4gICAgICAgICAgICAgICAgICAgIC8vIG9ubHkgZmlyZSBjYWxsYmFja3MgZm9yIHRoZSBtYXhMZXZlbCB0byBwcmV2ZW50XG4gICAgICAgICAgICAgICAgICAgIC8vIHN1YnNlcXVlbmNlcyBmcm9tIGFsc28gZmlyaW5nXG4gICAgICAgICAgICAgICAgICAgIC8vXG4gICAgICAgICAgICAgICAgICAgIC8vIGZvciBleGFtcGxlICdhIG9wdGlvbiBiJyBzaG91bGQgbm90IGNhdXNlICdvcHRpb24gYicgdG8gZmlyZVxuICAgICAgICAgICAgICAgICAgICAvLyBldmVuIHRob3VnaCAnb3B0aW9uIGInIGlzIHBhcnQgb2YgdGhlIG90aGVyIHNlcXVlbmNlXG4gICAgICAgICAgICAgICAgICAgIC8vXG4gICAgICAgICAgICAgICAgICAgIC8vIGFueSBzZXF1ZW5jZXMgdGhhdCBkbyBub3QgbWF0Y2ggaGVyZSB3aWxsIGJlIGRpc2NhcmRlZFxuICAgICAgICAgICAgICAgICAgICAvLyBiZWxvdyBieSB0aGUgX3Jlc2V0U2VxdWVuY2VzIGNhbGxcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNhbGxiYWNrc1tpXS5sZXZlbCAhPSBtYXhMZXZlbCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICBwcm9jZXNzZWRTZXF1ZW5jZUNhbGxiYWNrID0gdHJ1ZTtcblxuICAgICAgICAgICAgICAgICAgICAvLyBrZWVwIGEgbGlzdCBvZiB3aGljaCBzZXF1ZW5jZXMgd2VyZSBtYXRjaGVzIGZvciBsYXRlclxuICAgICAgICAgICAgICAgICAgICBkb05vdFJlc2V0W2NhbGxiYWNrc1tpXS5zZXFdID0gMTtcbiAgICAgICAgICAgICAgICAgICAgX2ZpcmVDYWxsYmFjayhjYWxsYmFja3NbaV0uY2FsbGJhY2ssIGUsIGNhbGxiYWNrc1tpXS5jb21ibywgY2FsbGJhY2tzW2ldLnNlcSk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIC8vIGlmIHRoZXJlIHdlcmUgbm8gc2VxdWVuY2UgbWF0Y2hlcyBidXQgd2UgYXJlIHN0aWxsIGhlcmVcbiAgICAgICAgICAgICAgICAvLyB0aGF0IG1lYW5zIHRoaXMgaXMgYSByZWd1bGFyIG1hdGNoIHNvIHdlIHNob3VsZCBmaXJlIHRoYXRcbiAgICAgICAgICAgICAgICBpZiAoIXByb2Nlc3NlZFNlcXVlbmNlQ2FsbGJhY2spIHtcbiAgICAgICAgICAgICAgICAgICAgX2ZpcmVDYWxsYmFjayhjYWxsYmFja3NbaV0uY2FsbGJhY2ssIGUsIGNhbGxiYWNrc1tpXS5jb21ibyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvLyBpZiB0aGUga2V5IHlvdSBwcmVzc2VkIG1hdGNoZXMgdGhlIHR5cGUgb2Ygc2VxdWVuY2Ugd2l0aG91dFxuICAgICAgICAgICAgLy8gYmVpbmcgYSBtb2RpZmllciAoaWUgXCJrZXl1cFwiIG9yIFwia2V5cHJlc3NcIikgdGhlbiB3ZSBzaG91bGRcbiAgICAgICAgICAgIC8vIHJlc2V0IGFsbCBzZXF1ZW5jZXMgdGhhdCB3ZXJlIG5vdCBtYXRjaGVkIGJ5IHRoaXMgZXZlbnRcbiAgICAgICAgICAgIC8vXG4gICAgICAgICAgICAvLyB0aGlzIGlzIHNvLCBmb3IgZXhhbXBsZSwgaWYgeW91IGhhdmUgdGhlIHNlcXVlbmNlIFwiaCBhIHRcIiBhbmQgeW91XG4gICAgICAgICAgICAvLyB0eXBlIFwiaCBlIGEgciB0XCIgaXQgZG9lcyBub3QgbWF0Y2guICBpbiB0aGlzIGNhc2UgdGhlIFwiZVwiIHdpbGxcbiAgICAgICAgICAgIC8vIGNhdXNlIHRoZSBzZXF1ZW5jZSB0byByZXNldFxuICAgICAgICAgICAgLy9cbiAgICAgICAgICAgIC8vIG1vZGlmaWVyIGtleXMgYXJlIGlnbm9yZWQgYmVjYXVzZSB5b3UgY2FuIGhhdmUgYSBzZXF1ZW5jZVxuICAgICAgICAgICAgLy8gdGhhdCBjb250YWlucyBtb2RpZmllcnMgc3VjaCBhcyBcImVudGVyIGN0cmwrc3BhY2VcIiBhbmQgaW4gbW9zdFxuICAgICAgICAgICAgLy8gY2FzZXMgdGhlIG1vZGlmaWVyIGtleSB3aWxsIGJlIHByZXNzZWQgYmVmb3JlIHRoZSBuZXh0IGtleVxuICAgICAgICAgICAgLy9cbiAgICAgICAgICAgIC8vIGFsc28gaWYgeW91IGhhdmUgYSBzZXF1ZW5jZSBzdWNoIGFzIFwiY3RybCtiIGFcIiB0aGVuIHByZXNzaW5nIHRoZVxuICAgICAgICAgICAgLy8gXCJiXCIga2V5IHdpbGwgdHJpZ2dlciBhIFwia2V5cHJlc3NcIiBhbmQgYSBcImtleWRvd25cIlxuICAgICAgICAgICAgLy9cbiAgICAgICAgICAgIC8vIHRoZSBcImtleWRvd25cIiBpcyBleHBlY3RlZCB3aGVuIHRoZXJlIGlzIGEgbW9kaWZpZXIsIGJ1dCB0aGVcbiAgICAgICAgICAgIC8vIFwia2V5cHJlc3NcIiBlbmRzIHVwIG1hdGNoaW5nIHRoZSBfbmV4dEV4cGVjdGVkQWN0aW9uIHNpbmNlIGl0IG9jY3Vyc1xuICAgICAgICAgICAgLy8gYWZ0ZXIgYW5kIHRoYXQgY2F1c2VzIHRoZSBzZXF1ZW5jZSB0byByZXNldFxuICAgICAgICAgICAgLy9cbiAgICAgICAgICAgIC8vIHdlIGlnbm9yZSBrZXlwcmVzc2VzIGluIGEgc2VxdWVuY2UgdGhhdCBkaXJlY3RseSBmb2xsb3cgYSBrZXlkb3duXG4gICAgICAgICAgICAvLyBmb3IgdGhlIHNhbWUgY2hhcmFjdGVyXG4gICAgICAgICAgICB2YXIgaWdub3JlVGhpc0tleXByZXNzID0gZS50eXBlID09ICdrZXlwcmVzcycgJiYgX2lnbm9yZU5leHRLZXlwcmVzcztcbiAgICAgICAgICAgIGlmIChlLnR5cGUgPT0gX25leHRFeHBlY3RlZEFjdGlvbiAmJiAhX2lzTW9kaWZpZXIoY2hhcmFjdGVyKSAmJiAhaWdub3JlVGhpc0tleXByZXNzKSB7XG4gICAgICAgICAgICAgICAgX3Jlc2V0U2VxdWVuY2VzKGRvTm90UmVzZXQpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBfaWdub3JlTmV4dEtleXByZXNzID0gcHJvY2Vzc2VkU2VxdWVuY2VDYWxsYmFjayAmJiBlLnR5cGUgPT0gJ2tleWRvd24nO1xuICAgICAgICB9O1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBoYW5kbGVzIGEga2V5ZG93biBldmVudFxuICAgICAgICAgKlxuICAgICAgICAgKiBAcGFyYW0ge0V2ZW50fSBlXG4gICAgICAgICAqIEByZXR1cm5zIHZvaWRcbiAgICAgICAgICovXG4gICAgICAgIGZ1bmN0aW9uIF9oYW5kbGVLZXlFdmVudChlKSB7XG5cbiAgICAgICAgICAgIC8vIG5vcm1hbGl6ZSBlLndoaWNoIGZvciBrZXkgZXZlbnRzXG4gICAgICAgICAgICAvLyBAc2VlIGh0dHA6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvNDI4NTYyNy9qYXZhc2NyaXB0LWtleWNvZGUtdnMtY2hhcmNvZGUtdXR0ZXItY29uZnVzaW9uXG4gICAgICAgICAgICBpZiAodHlwZW9mIGUud2hpY2ggIT09ICdudW1iZXInKSB7XG4gICAgICAgICAgICAgICAgZS53aGljaCA9IGUua2V5Q29kZTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdmFyIGNoYXJhY3RlciA9IF9jaGFyYWN0ZXJGcm9tRXZlbnQoZSk7XG5cbiAgICAgICAgICAgIC8vIG5vIGNoYXJhY3RlciBmb3VuZCB0aGVuIHN0b3BcbiAgICAgICAgICAgIGlmICghY2hhcmFjdGVyKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvLyBuZWVkIHRvIHVzZSA9PT0gZm9yIHRoZSBjaGFyYWN0ZXIgY2hlY2sgYmVjYXVzZSB0aGUgY2hhcmFjdGVyIGNhbiBiZSAwXG4gICAgICAgICAgICBpZiAoZS50eXBlID09ICdrZXl1cCcgJiYgX2lnbm9yZU5leHRLZXl1cCA9PT0gY2hhcmFjdGVyKSB7XG4gICAgICAgICAgICAgICAgX2lnbm9yZU5leHRLZXl1cCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgc2VsZi5oYW5kbGVLZXkoY2hhcmFjdGVyLCBfZXZlbnRNb2RpZmllcnMoZSksIGUpO1xuICAgICAgICB9XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIGNhbGxlZCB0byBzZXQgYSAxIHNlY29uZCB0aW1lb3V0IG9uIHRoZSBzcGVjaWZpZWQgc2VxdWVuY2VcbiAgICAgICAgICpcbiAgICAgICAgICogdGhpcyBpcyBzbyBhZnRlciBlYWNoIGtleSBwcmVzcyBpbiB0aGUgc2VxdWVuY2UgeW91IGhhdmUgMSBzZWNvbmRcbiAgICAgICAgICogdG8gcHJlc3MgdGhlIG5leHQga2V5IGJlZm9yZSB5b3UgaGF2ZSB0byBzdGFydCBvdmVyXG4gICAgICAgICAqXG4gICAgICAgICAqIEByZXR1cm5zIHZvaWRcbiAgICAgICAgICovXG4gICAgICAgIGZ1bmN0aW9uIF9yZXNldFNlcXVlbmNlVGltZXIoKSB7XG4gICAgICAgICAgICBjbGVhclRpbWVvdXQoX3Jlc2V0VGltZXIpO1xuICAgICAgICAgICAgX3Jlc2V0VGltZXIgPSBzZXRUaW1lb3V0KF9yZXNldFNlcXVlbmNlcywgMTAwMCk7XG4gICAgICAgIH1cblxuICAgICAgICAvKipcbiAgICAgICAgICogYmluZHMgYSBrZXkgc2VxdWVuY2UgdG8gYW4gZXZlbnRcbiAgICAgICAgICpcbiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IGNvbWJvIC0gY29tYm8gc3BlY2lmaWVkIGluIGJpbmQgY2FsbFxuICAgICAgICAgKiBAcGFyYW0ge0FycmF5fSBrZXlzXG4gICAgICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrXG4gICAgICAgICAqIEBwYXJhbSB7c3RyaW5nPX0gYWN0aW9uXG4gICAgICAgICAqIEByZXR1cm5zIHZvaWRcbiAgICAgICAgICovXG4gICAgICAgIGZ1bmN0aW9uIF9iaW5kU2VxdWVuY2UoY29tYm8sIGtleXMsIGNhbGxiYWNrLCBhY3Rpb24pIHtcblxuICAgICAgICAgICAgLy8gc3RhcnQgb2ZmIGJ5IGFkZGluZyBhIHNlcXVlbmNlIGxldmVsIHJlY29yZCBmb3IgdGhpcyBjb21iaW5hdGlvblxuICAgICAgICAgICAgLy8gYW5kIHNldHRpbmcgdGhlIGxldmVsIHRvIDBcbiAgICAgICAgICAgIF9zZXF1ZW5jZUxldmVsc1tjb21ib10gPSAwO1xuXG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIGNhbGxiYWNrIHRvIGluY3JlYXNlIHRoZSBzZXF1ZW5jZSBsZXZlbCBmb3IgdGhpcyBzZXF1ZW5jZSBhbmQgcmVzZXRcbiAgICAgICAgICAgICAqIGFsbCBvdGhlciBzZXF1ZW5jZXMgdGhhdCB3ZXJlIGFjdGl2ZVxuICAgICAgICAgICAgICpcbiAgICAgICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBuZXh0QWN0aW9uXG4gICAgICAgICAgICAgKiBAcmV0dXJucyB7RnVuY3Rpb259XG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgIGZ1bmN0aW9uIF9pbmNyZWFzZVNlcXVlbmNlKG5leHRBY3Rpb24pIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgIF9uZXh0RXhwZWN0ZWRBY3Rpb24gPSBuZXh0QWN0aW9uO1xuICAgICAgICAgICAgICAgICAgICArK19zZXF1ZW5jZUxldmVsc1tjb21ib107XG4gICAgICAgICAgICAgICAgICAgIF9yZXNldFNlcXVlbmNlVGltZXIoKTtcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIHdyYXBzIHRoZSBzcGVjaWZpZWQgY2FsbGJhY2sgaW5zaWRlIG9mIGFub3RoZXIgZnVuY3Rpb24gaW4gb3JkZXJcbiAgICAgICAgICAgICAqIHRvIHJlc2V0IGFsbCBzZXF1ZW5jZSBjb3VudGVycyBhcyBzb29uIGFzIHRoaXMgc2VxdWVuY2UgaXMgZG9uZVxuICAgICAgICAgICAgICpcbiAgICAgICAgICAgICAqIEBwYXJhbSB7RXZlbnR9IGVcbiAgICAgICAgICAgICAqIEByZXR1cm5zIHZvaWRcbiAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgZnVuY3Rpb24gX2NhbGxiYWNrQW5kUmVzZXQoZSkge1xuICAgICAgICAgICAgICAgIF9maXJlQ2FsbGJhY2soY2FsbGJhY2ssIGUsIGNvbWJvKTtcblxuICAgICAgICAgICAgICAgIC8vIHdlIHNob3VsZCBpZ25vcmUgdGhlIG5leHQga2V5IHVwIGlmIHRoZSBhY3Rpb24gaXMga2V5IGRvd25cbiAgICAgICAgICAgICAgICAvLyBvciBrZXlwcmVzcy4gIHRoaXMgaXMgc28gaWYgeW91IGZpbmlzaCBhIHNlcXVlbmNlIGFuZFxuICAgICAgICAgICAgICAgIC8vIHJlbGVhc2UgdGhlIGtleSB0aGUgZmluYWwga2V5IHdpbGwgbm90IHRyaWdnZXIgYSBrZXl1cFxuICAgICAgICAgICAgICAgIGlmIChhY3Rpb24gIT09ICdrZXl1cCcpIHtcbiAgICAgICAgICAgICAgICAgICAgX2lnbm9yZU5leHRLZXl1cCA9IF9jaGFyYWN0ZXJGcm9tRXZlbnQoZSk7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgLy8gd2VpcmQgcmFjZSBjb25kaXRpb24gaWYgYSBzZXF1ZW5jZSBlbmRzIHdpdGggdGhlIGtleVxuICAgICAgICAgICAgICAgIC8vIGFub3RoZXIgc2VxdWVuY2UgYmVnaW5zIHdpdGhcbiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KF9yZXNldFNlcXVlbmNlcywgMTApO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvLyBsb29wIHRocm91Z2gga2V5cyBvbmUgYXQgYSB0aW1lIGFuZCBiaW5kIHRoZSBhcHByb3ByaWF0ZSBjYWxsYmFja1xuICAgICAgICAgICAgLy8gZnVuY3Rpb24uICBmb3IgYW55IGtleSBsZWFkaW5nIHVwIHRvIHRoZSBmaW5hbCBvbmUgaXQgc2hvdWxkXG4gICAgICAgICAgICAvLyBpbmNyZWFzZSB0aGUgc2VxdWVuY2UuIGFmdGVyIHRoZSBmaW5hbCwgaXQgc2hvdWxkIHJlc2V0IGFsbCBzZXF1ZW5jZXNcbiAgICAgICAgICAgIC8vXG4gICAgICAgICAgICAvLyBpZiBhbiBhY3Rpb24gaXMgc3BlY2lmaWVkIGluIHRoZSBvcmlnaW5hbCBiaW5kIGNhbGwgdGhlbiB0aGF0IHdpbGxcbiAgICAgICAgICAgIC8vIGJlIHVzZWQgdGhyb3VnaG91dC4gIG90aGVyd2lzZSB3ZSB3aWxsIHBhc3MgdGhlIGFjdGlvbiB0aGF0IHRoZVxuICAgICAgICAgICAgLy8gbmV4dCBrZXkgaW4gdGhlIHNlcXVlbmNlIHNob3VsZCBtYXRjaC4gIHRoaXMgYWxsb3dzIGEgc2VxdWVuY2VcbiAgICAgICAgICAgIC8vIHRvIG1peCBhbmQgbWF0Y2gga2V5cHJlc3MgYW5kIGtleWRvd24gZXZlbnRzIGRlcGVuZGluZyBvbiB3aGljaFxuICAgICAgICAgICAgLy8gb25lcyBhcmUgYmV0dGVyIHN1aXRlZCB0byB0aGUga2V5IHByb3ZpZGVkXG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGtleXMubGVuZ3RoOyArK2kpIHtcbiAgICAgICAgICAgICAgICB2YXIgaXNGaW5hbCA9IGkgKyAxID09PSBrZXlzLmxlbmd0aDtcbiAgICAgICAgICAgICAgICB2YXIgd3JhcHBlZENhbGxiYWNrID0gaXNGaW5hbCA/IF9jYWxsYmFja0FuZFJlc2V0IDogX2luY3JlYXNlU2VxdWVuY2UoYWN0aW9uIHx8IF9nZXRLZXlJbmZvKGtleXNbaSArIDFdKS5hY3Rpb24pO1xuICAgICAgICAgICAgICAgIF9iaW5kU2luZ2xlKGtleXNbaV0sIHdyYXBwZWRDYWxsYmFjaywgYWN0aW9uLCBjb21ibywgaSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAvKipcbiAgICAgICAgICogYmluZHMgYSBzaW5nbGUga2V5Ym9hcmQgY29tYmluYXRpb25cbiAgICAgICAgICpcbiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IGNvbWJpbmF0aW9uXG4gICAgICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrXG4gICAgICAgICAqIEBwYXJhbSB7c3RyaW5nPX0gYWN0aW9uXG4gICAgICAgICAqIEBwYXJhbSB7c3RyaW5nPX0gc2VxdWVuY2VOYW1lIC0gbmFtZSBvZiBzZXF1ZW5jZSBpZiBwYXJ0IG9mIHNlcXVlbmNlXG4gICAgICAgICAqIEBwYXJhbSB7bnVtYmVyPX0gbGV2ZWwgLSB3aGF0IHBhcnQgb2YgdGhlIHNlcXVlbmNlIHRoZSBjb21tYW5kIGlzXG4gICAgICAgICAqIEByZXR1cm5zIHZvaWRcbiAgICAgICAgICovXG4gICAgICAgIGZ1bmN0aW9uIF9iaW5kU2luZ2xlKGNvbWJpbmF0aW9uLCBjYWxsYmFjaywgYWN0aW9uLCBzZXF1ZW5jZU5hbWUsIGxldmVsKSB7XG5cbiAgICAgICAgICAgIC8vIHN0b3JlIGEgZGlyZWN0IG1hcHBlZCByZWZlcmVuY2UgZm9yIHVzZSB3aXRoIE1vdXNldHJhcC50cmlnZ2VyXG4gICAgICAgICAgICBzZWxmLl9kaXJlY3RNYXBbY29tYmluYXRpb24gKyAnOicgKyBhY3Rpb25dID0gY2FsbGJhY2s7XG5cbiAgICAgICAgICAgIC8vIG1ha2Ugc3VyZSBtdWx0aXBsZSBzcGFjZXMgaW4gYSByb3cgYmVjb21lIGEgc2luZ2xlIHNwYWNlXG4gICAgICAgICAgICBjb21iaW5hdGlvbiA9IGNvbWJpbmF0aW9uLnJlcGxhY2UoL1xccysvZywgJyAnKTtcblxuICAgICAgICAgICAgdmFyIHNlcXVlbmNlID0gY29tYmluYXRpb24uc3BsaXQoJyAnKTtcbiAgICAgICAgICAgIHZhciBpbmZvO1xuXG4gICAgICAgICAgICAvLyBpZiB0aGlzIHBhdHRlcm4gaXMgYSBzZXF1ZW5jZSBvZiBrZXlzIHRoZW4gcnVuIHRocm91Z2ggdGhpcyBtZXRob2RcbiAgICAgICAgICAgIC8vIHRvIHJlcHJvY2VzcyBlYWNoIHBhdHRlcm4gb25lIGtleSBhdCBhIHRpbWVcbiAgICAgICAgICAgIGlmIChzZXF1ZW5jZS5sZW5ndGggPiAxKSB7XG4gICAgICAgICAgICAgICAgX2JpbmRTZXF1ZW5jZShjb21iaW5hdGlvbiwgc2VxdWVuY2UsIGNhbGxiYWNrLCBhY3Rpb24pO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaW5mbyA9IF9nZXRLZXlJbmZvKGNvbWJpbmF0aW9uLCBhY3Rpb24pO1xuXG4gICAgICAgICAgICAvLyBtYWtlIHN1cmUgdG8gaW5pdGlhbGl6ZSBhcnJheSBpZiB0aGlzIGlzIHRoZSBmaXJzdCB0aW1lXG4gICAgICAgICAgICAvLyBhIGNhbGxiYWNrIGlzIGFkZGVkIGZvciB0aGlzIGtleVxuICAgICAgICAgICAgc2VsZi5fY2FsbGJhY2tzW2luZm8ua2V5XSA9IHNlbGYuX2NhbGxiYWNrc1tpbmZvLmtleV0gfHwgW107XG5cbiAgICAgICAgICAgIC8vIHJlbW92ZSBhbiBleGlzdGluZyBtYXRjaCBpZiB0aGVyZSBpcyBvbmVcbiAgICAgICAgICAgIF9nZXRNYXRjaGVzKGluZm8ua2V5LCBpbmZvLm1vZGlmaWVycywge3R5cGU6IGluZm8uYWN0aW9ufSwgc2VxdWVuY2VOYW1lLCBjb21iaW5hdGlvbiwgbGV2ZWwpO1xuXG4gICAgICAgICAgICAvLyBhZGQgdGhpcyBjYWxsIGJhY2sgdG8gdGhlIGFycmF5XG4gICAgICAgICAgICAvLyBpZiBpdCBpcyBhIHNlcXVlbmNlIHB1dCBpdCBhdCB0aGUgYmVnaW5uaW5nXG4gICAgICAgICAgICAvLyBpZiBub3QgcHV0IGl0IGF0IHRoZSBlbmRcbiAgICAgICAgICAgIC8vXG4gICAgICAgICAgICAvLyB0aGlzIGlzIGltcG9ydGFudCBiZWNhdXNlIHRoZSB3YXkgdGhlc2UgYXJlIHByb2Nlc3NlZCBleHBlY3RzXG4gICAgICAgICAgICAvLyB0aGUgc2VxdWVuY2Ugb25lcyB0byBjb21lIGZpcnN0XG4gICAgICAgICAgICBzZWxmLl9jYWxsYmFja3NbaW5mby5rZXldW3NlcXVlbmNlTmFtZSA/ICd1bnNoaWZ0JyA6ICdwdXNoJ10oe1xuICAgICAgICAgICAgICAgIGNhbGxiYWNrOiBjYWxsYmFjayxcbiAgICAgICAgICAgICAgICBtb2RpZmllcnM6IGluZm8ubW9kaWZpZXJzLFxuICAgICAgICAgICAgICAgIGFjdGlvbjogaW5mby5hY3Rpb24sXG4gICAgICAgICAgICAgICAgc2VxOiBzZXF1ZW5jZU5hbWUsXG4gICAgICAgICAgICAgICAgbGV2ZWw6IGxldmVsLFxuICAgICAgICAgICAgICAgIGNvbWJvOiBjb21iaW5hdGlvblxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICAvKipcbiAgICAgICAgICogYmluZHMgbXVsdGlwbGUgY29tYmluYXRpb25zIHRvIHRoZSBzYW1lIGNhbGxiYWNrXG4gICAgICAgICAqXG4gICAgICAgICAqIEBwYXJhbSB7QXJyYXl9IGNvbWJpbmF0aW9uc1xuICAgICAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFja1xuICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ3x1bmRlZmluZWR9IGFjdGlvblxuICAgICAgICAgKiBAcmV0dXJucyB2b2lkXG4gICAgICAgICAqL1xuICAgICAgICBzZWxmLl9iaW5kTXVsdGlwbGUgPSBmdW5jdGlvbihjb21iaW5hdGlvbnMsIGNhbGxiYWNrLCBhY3Rpb24pIHtcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgY29tYmluYXRpb25zLmxlbmd0aDsgKytpKSB7XG4gICAgICAgICAgICAgICAgX2JpbmRTaW5nbGUoY29tYmluYXRpb25zW2ldLCBjYWxsYmFjaywgYWN0aW9uKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcblxuICAgICAgICAvLyBzdGFydCFcbiAgICAgICAgX2FkZEV2ZW50KHRhcmdldEVsZW1lbnQsICdrZXlwcmVzcycsIF9oYW5kbGVLZXlFdmVudCk7XG4gICAgICAgIF9hZGRFdmVudCh0YXJnZXRFbGVtZW50LCAna2V5ZG93bicsIF9oYW5kbGVLZXlFdmVudCk7XG4gICAgICAgIF9hZGRFdmVudCh0YXJnZXRFbGVtZW50LCAna2V5dXAnLCBfaGFuZGxlS2V5RXZlbnQpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIGJpbmRzIGFuIGV2ZW50IHRvIG1vdXNldHJhcFxuICAgICAqXG4gICAgICogY2FuIGJlIGEgc2luZ2xlIGtleSwgYSBjb21iaW5hdGlvbiBvZiBrZXlzIHNlcGFyYXRlZCB3aXRoICssXG4gICAgICogYW4gYXJyYXkgb2Yga2V5cywgb3IgYSBzZXF1ZW5jZSBvZiBrZXlzIHNlcGFyYXRlZCBieSBzcGFjZXNcbiAgICAgKlxuICAgICAqIGJlIHN1cmUgdG8gbGlzdCB0aGUgbW9kaWZpZXIga2V5cyBmaXJzdCB0byBtYWtlIHN1cmUgdGhhdCB0aGVcbiAgICAgKiBjb3JyZWN0IGtleSBlbmRzIHVwIGdldHRpbmcgYm91bmQgKHRoZSBsYXN0IGtleSBpbiB0aGUgcGF0dGVybilcbiAgICAgKlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfEFycmF5fSBrZXlzXG4gICAgICogQHBhcmFtIHtGdW5jdGlvbn0gY2FsbGJhY2tcbiAgICAgKiBAcGFyYW0ge3N0cmluZz19IGFjdGlvbiAtICdrZXlwcmVzcycsICdrZXlkb3duJywgb3IgJ2tleXVwJ1xuICAgICAqIEByZXR1cm5zIHZvaWRcbiAgICAgKi9cbiAgICBNb3VzZXRyYXAucHJvdG90eXBlLmJpbmQgPSBmdW5jdGlvbihrZXlzLCBjYWxsYmFjaywgYWN0aW9uKSB7XG4gICAgICAgIHZhciBzZWxmID0gdGhpcztcbiAgICAgICAga2V5cyA9IGtleXMgaW5zdGFuY2VvZiBBcnJheSA/IGtleXMgOiBba2V5c107XG4gICAgICAgIHNlbGYuX2JpbmRNdWx0aXBsZS5jYWxsKHNlbGYsIGtleXMsIGNhbGxiYWNrLCBhY3Rpb24pO1xuICAgICAgICByZXR1cm4gc2VsZjtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogdW5iaW5kcyBhbiBldmVudCB0byBtb3VzZXRyYXBcbiAgICAgKlxuICAgICAqIHRoZSB1bmJpbmRpbmcgc2V0cyB0aGUgY2FsbGJhY2sgZnVuY3Rpb24gb2YgdGhlIHNwZWNpZmllZCBrZXkgY29tYm9cbiAgICAgKiB0byBhbiBlbXB0eSBmdW5jdGlvbiBhbmQgZGVsZXRlcyB0aGUgY29ycmVzcG9uZGluZyBrZXkgaW4gdGhlXG4gICAgICogX2RpcmVjdE1hcCBkaWN0LlxuICAgICAqXG4gICAgICogVE9ETzogYWN0dWFsbHkgcmVtb3ZlIHRoaXMgZnJvbSB0aGUgX2NhbGxiYWNrcyBkaWN0aW9uYXJ5IGluc3RlYWRcbiAgICAgKiBvZiBiaW5kaW5nIGFuIGVtcHR5IGZ1bmN0aW9uXG4gICAgICpcbiAgICAgKiB0aGUga2V5Y29tYm8rYWN0aW9uIGhhcyB0byBiZSBleGFjdGx5IHRoZSBzYW1lIGFzXG4gICAgICogaXQgd2FzIGRlZmluZWQgaW4gdGhlIGJpbmQgbWV0aG9kXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge3N0cmluZ3xBcnJheX0ga2V5c1xuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBhY3Rpb25cbiAgICAgKiBAcmV0dXJucyB2b2lkXG4gICAgICovXG4gICAgTW91c2V0cmFwLnByb3RvdHlwZS51bmJpbmQgPSBmdW5jdGlvbihrZXlzLCBhY3Rpb24pIHtcbiAgICAgICAgdmFyIHNlbGYgPSB0aGlzO1xuICAgICAgICByZXR1cm4gc2VsZi5iaW5kLmNhbGwoc2VsZiwga2V5cywgZnVuY3Rpb24oKSB7fSwgYWN0aW9uKTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogdHJpZ2dlcnMgYW4gZXZlbnQgdGhhdCBoYXMgYWxyZWFkeSBiZWVuIGJvdW5kXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30ga2V5c1xuICAgICAqIEBwYXJhbSB7c3RyaW5nPX0gYWN0aW9uXG4gICAgICogQHJldHVybnMgdm9pZFxuICAgICAqL1xuICAgIE1vdXNldHJhcC5wcm90b3R5cGUudHJpZ2dlciA9IGZ1bmN0aW9uKGtleXMsIGFjdGlvbikge1xuICAgICAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgICAgIGlmIChzZWxmLl9kaXJlY3RNYXBba2V5cyArICc6JyArIGFjdGlvbl0pIHtcbiAgICAgICAgICAgIHNlbGYuX2RpcmVjdE1hcFtrZXlzICsgJzonICsgYWN0aW9uXSh7fSwga2V5cyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHNlbGY7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIHJlc2V0cyB0aGUgbGlicmFyeSBiYWNrIHRvIGl0cyBpbml0aWFsIHN0YXRlLiAgdGhpcyBpcyB1c2VmdWxcbiAgICAgKiBpZiB5b3Ugd2FudCB0byBjbGVhciBvdXQgdGhlIGN1cnJlbnQga2V5Ym9hcmQgc2hvcnRjdXRzIGFuZCBiaW5kXG4gICAgICogbmV3IG9uZXMgLSBmb3IgZXhhbXBsZSBpZiB5b3Ugc3dpdGNoIHRvIGFub3RoZXIgcGFnZVxuICAgICAqXG4gICAgICogQHJldHVybnMgdm9pZFxuICAgICAqL1xuICAgIE1vdXNldHJhcC5wcm90b3R5cGUucmVzZXQgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgdmFyIHNlbGYgPSB0aGlzO1xuICAgICAgICBzZWxmLl9jYWxsYmFja3MgPSB7fTtcbiAgICAgICAgc2VsZi5fZGlyZWN0TWFwID0ge307XG4gICAgICAgIHJldHVybiBzZWxmO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBzaG91bGQgd2Ugc3RvcCB0aGlzIGV2ZW50IGJlZm9yZSBmaXJpbmcgb2ZmIGNhbGxiYWNrc1xuICAgICAqXG4gICAgICogQHBhcmFtIHtFdmVudH0gZVxuICAgICAqIEBwYXJhbSB7RWxlbWVudH0gZWxlbWVudFxuICAgICAqIEByZXR1cm4ge2Jvb2xlYW59XG4gICAgICovXG4gICAgTW91c2V0cmFwLnByb3RvdHlwZS5zdG9wQ2FsbGJhY2sgPSBmdW5jdGlvbihlLCBlbGVtZW50KSB7XG4gICAgICAgIHZhciBzZWxmID0gdGhpcztcblxuICAgICAgICAvLyBpZiB0aGUgZWxlbWVudCBoYXMgdGhlIGNsYXNzIFwibW91c2V0cmFwXCIgdGhlbiBubyBuZWVkIHRvIHN0b3BcbiAgICAgICAgaWYgKCgnICcgKyBlbGVtZW50LmNsYXNzTmFtZSArICcgJykuaW5kZXhPZignIG1vdXNldHJhcCAnKSA+IC0xKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoX2JlbG9uZ3NUbyhlbGVtZW50LCBzZWxmLnRhcmdldCkpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIHN0b3AgZm9yIGlucHV0LCBzZWxlY3QsIGFuZCB0ZXh0YXJlYVxuICAgICAgICByZXR1cm4gZWxlbWVudC50YWdOYW1lID09ICdJTlBVVCcgfHwgZWxlbWVudC50YWdOYW1lID09ICdTRUxFQ1QnIHx8IGVsZW1lbnQudGFnTmFtZSA9PSAnVEVYVEFSRUEnIHx8IGVsZW1lbnQuaXNDb250ZW50RWRpdGFibGU7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIGV4cG9zZXMgX2hhbmRsZUtleSBwdWJsaWNseSBzbyBpdCBjYW4gYmUgb3ZlcndyaXR0ZW4gYnkgZXh0ZW5zaW9uc1xuICAgICAqL1xuICAgIE1vdXNldHJhcC5wcm90b3R5cGUuaGFuZGxlS2V5ID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciBzZWxmID0gdGhpcztcbiAgICAgICAgcmV0dXJuIHNlbGYuX2hhbmRsZUtleS5hcHBseShzZWxmLCBhcmd1bWVudHMpO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBhbGxvdyBjdXN0b20ga2V5IG1hcHBpbmdzXG4gICAgICovXG4gICAgTW91c2V0cmFwLmFkZEtleWNvZGVzID0gZnVuY3Rpb24ob2JqZWN0KSB7XG4gICAgICAgIGZvciAodmFyIGtleSBpbiBvYmplY3QpIHtcbiAgICAgICAgICAgIGlmIChvYmplY3QuaGFzT3duUHJvcGVydHkoa2V5KSkge1xuICAgICAgICAgICAgICAgIF9NQVBba2V5XSA9IG9iamVjdFtrZXldO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIF9SRVZFUlNFX01BUCA9IG51bGw7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIEluaXQgdGhlIGdsb2JhbCBtb3VzZXRyYXAgZnVuY3Rpb25zXG4gICAgICpcbiAgICAgKiBUaGlzIG1ldGhvZCBpcyBuZWVkZWQgdG8gYWxsb3cgdGhlIGdsb2JhbCBtb3VzZXRyYXAgZnVuY3Rpb25zIHRvIHdvcmtcbiAgICAgKiBub3cgdGhhdCBtb3VzZXRyYXAgaXMgYSBjb25zdHJ1Y3RvciBmdW5jdGlvbi5cbiAgICAgKi9cbiAgICBNb3VzZXRyYXAuaW5pdCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgZG9jdW1lbnRNb3VzZXRyYXAgPSBNb3VzZXRyYXAoZG9jdW1lbnQpO1xuICAgICAgICBmb3IgKHZhciBtZXRob2QgaW4gZG9jdW1lbnRNb3VzZXRyYXApIHtcbiAgICAgICAgICAgIGlmIChtZXRob2QuY2hhckF0KDApICE9PSAnXycpIHtcbiAgICAgICAgICAgICAgICBNb3VzZXRyYXBbbWV0aG9kXSA9IChmdW5jdGlvbihtZXRob2QpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGRvY3VtZW50TW91c2V0cmFwW21ldGhvZF0uYXBwbHkoZG9jdW1lbnRNb3VzZXRyYXAsIGFyZ3VtZW50cyk7XG4gICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgfSAobWV0aG9kKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgTW91c2V0cmFwLmluaXQoKTtcblxuICAgIC8vIGV4cG9zZSBtb3VzZXRyYXAgdG8gdGhlIGdsb2JhbCBvYmplY3RcbiAgICB3aW5kb3cuTW91c2V0cmFwID0gTW91c2V0cmFwO1xuXG4gICAgLy8gZXhwb3NlIGFzIGEgY29tbW9uIGpzIG1vZHVsZVxuICAgIGlmICh0eXBlb2YgbW9kdWxlICE9PSAndW5kZWZpbmVkJyAmJiBtb2R1bGUuZXhwb3J0cykge1xuICAgICAgICBtb2R1bGUuZXhwb3J0cyA9IE1vdXNldHJhcDtcbiAgICB9XG5cbiAgICAvLyBleHBvc2UgbW91c2V0cmFwIGFzIGFuIEFNRCBtb2R1bGVcbiAgICBpZiAodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUuYW1kKSB7XG4gICAgICAgIGRlZmluZShmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHJldHVybiBNb3VzZXRyYXA7XG4gICAgICAgIH0pO1xuICAgIH1cbn0pICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyA/IHdpbmRvdyA6IG51bGwsIHR5cGVvZiAgd2luZG93ICE9PSAndW5kZWZpbmVkJyA/IGRvY3VtZW50IDogbnVsbCk7XG4iLCJNb3VzZXRyYXAgPSByZXF1aXJlKCdtb3VzZXRyYXAnKTtcbmthdGV4ID0gcmVxdWlyZSgnLi4vbGliL2thdGV4L2thdGV4LW1vZGlmaWVkLm1pbi5qcycpO1xuXG5TdHJpbmcucHJvdG90eXBlLnNwbGljZSA9IGZ1bmN0aW9uKGlkeCwgcyl7IHJldHVybiAodGhpcy5zbGljZSgwLGlkeCkgKyBzICsgdGhpcy5zbGljZShpZHgpKTsgfTtcblN0cmluZy5wcm90b3R5cGUuc3BsaWNlbiA9IGZ1bmN0aW9uKGlkeCwgcywgbil7IHJldHVybiAodGhpcy5zbGljZSgwLGlkeCkgKyBzICsgdGhpcy5zbGljZShpZHgrbikpO307XG5TdHJpbmcucHJvdG90eXBlLnNlYXJjaF9hdCA9IGZ1bmN0aW9uKGlkeCwgcyl7IHJldHVybiAodGhpcy5zdWJzdHJpbmcoaWR4LXMubGVuZ3RoLGlkeCkgPT0gcyk7IH07XG5cbnZhciBHdXBweSA9IGZ1bmN0aW9uKGd1cHB5X2RpdiwgcHJvcGVydGllcyl7XG4gICAgdmFyIHNlbGYgPSB0aGlzO1xuICAgIHByb3BlcnRpZXMgPSBwcm9wZXJ0aWVzIHx8IHt9O1xuICAgIGlmKHR5cGVvZiBndXBweV9kaXYgPT09ICdzdHJpbmcnIHx8IGd1cHB5X2RpdiBpbnN0YW5jZW9mIFN0cmluZyl7XG5cdGd1cHB5X2RpdiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGd1cHB5X2Rpdik7XG4gICAgfVxuICAgIFxuICAgIC8vIFNldCB0aGUgaWQgb24gdGhlIGRpdiBpZiBpdCBpcyBub3QgY3VycmVudGx5IHNldC5cbiAgICBpZighKGd1cHB5X2Rpdi5pZCkpe1xuXHRHdXBweS5sb2coMyxcIm5vIGlkXCIpO1xuXHR2YXIgaSA9IEd1cHB5Lm1heF91aWQgfHwgMDtcblx0R3VwcHkubG9nKDMsXCJzZXR0aW5nIGlkXCIsaSk7XG5cdHdoaWxlKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZ3VwcHlfdWlkX1wiK2kpKSBpKys7XG5cdEd1cHB5Lm1heF91aWQgPSBpO1xuXHRndXBweV9kaXYuaWQgPSBcImd1cHB5X3VpZF9cIitpO1xuICAgIH1cbiAgICB2YXIgaSA9IEd1cHB5Lm1heF90YWJJbmRleCB8fCAwO1xuICAgIGd1cHB5X2Rpdi50YWJJbmRleCA9IGk7XG4gICAgR3VwcHkubWF4X3RhYkluZGV4ID0gaSsxO1xuICAgIFxuICAgIFxuICAgIHRoaXMuZWRpdG9yX2FjdGl2ZSA9IHRydWU7XG4gICAgdGhpcy5kZWJ1ZyA9IDA7XG4gICAgdGhpcy5lbXB0eV9jb250ZW50ID0gXCJcXFxcY29sb3J7cmVkfXtbP119XCJcbiAgICB0aGlzLmVkaXRvciA9IGd1cHB5X2RpdjtcbiAgICB0aGlzLnR5cGVfYmxhY2tsaXN0ID0gW107XG4gICAgdGhpcy5kb25lX2NhbGxiYWNrID0gdGhpcztcbiAgICB0aGlzLnJlYWR5ID0gZmFsc2U7XG4gICAgXG4gICAgaWYoJ3htbF9jb250ZW50JyBpbiBwcm9wZXJ0aWVzKXtcblx0dGhpcy5iYXNlID0gKG5ldyB3aW5kb3cuRE9NUGFyc2VyKCkpLnBhcnNlRnJvbVN0cmluZyhwcm9wZXJ0aWVzLnhtbF9jb250ZW50LCBcInRleHQveG1sXCIpO1xuICAgIH1cbiAgICBlbHNlIHtcblx0dGhpcy5iYXNlID0gKG5ldyB3aW5kb3cuRE9NUGFyc2VyKCkpLnBhcnNlRnJvbVN0cmluZyhcIjxtPjxlPjwvZT48L20+XCIsIFwidGV4dC94bWxcIik7XG4gICAgfVxuXG4gICAgdmFyIHByb3BzID0gWydibGFja2xpc3QnLCdkb25lX2NhbGxiYWNrJywncmlnaHRfY2FsbGJhY2snLCdsZWZ0X2NhbGxiYWNrJywncmVhZHlfY2FsbGJhY2snLCdibGFua19jYXJldCcsJ2RlYnVnJywnZW1wdHlfY29udGVudCddXG4gICAgZm9yKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKXtcblx0dmFyIHAgPSBwcm9wc1tpXTtcblx0aWYocCBpbiBwcm9wZXJ0aWVzKSB0aGlzW3BdID0gcHJvcGVydGllc1twXTtcbiAgICB9XG4gICAgXG4gICAgR3VwcHkuaW5zdGFuY2VzW2d1cHB5X2Rpdi5pZF0gPSB0aGlzO1xuICAgIFxuICAgIGlmKEd1cHB5LnJlYWR5ICYmICF0aGlzLnJlYWR5KXtcbiAgICBcdGlmKHRoaXMucmVhZHlfY2FsbGJhY2spIHRoaXMucmVhZHlfY2FsbGJhY2soKTtcbiAgICBcdHRoaXMucmVhZHkgPSB0cnVlO1xuXHR0aGlzLnJlbmRlcih0cnVlKTtcbiAgICB9XG4gICAgR3VwcHkubG9nKDMsXCJHdXBweSBhY3RpdmVcIixHdXBweS5hY3RpdmVfZ3VwcHkpO1xuICAgIHRoaXMuY2xpcGJvYXJkID0gbnVsbDtcbiAgICB0aGlzLmN1cnJlbnQgPSB0aGlzLmJhc2UuZG9jdW1lbnRFbGVtZW50LmZpcnN0Q2hpbGQ7XG4gICAgdGhpcy50ZW1wX2N1cnNvciA9IHtcIm5vZGVcIjpudWxsLFwiY2FyZXRcIjowfVxuICAgIGlmKCF0aGlzLmN1cnJlbnQuZmlyc3RDaGlsZCkgdGhpcy5jdXJyZW50LmFwcGVuZENoaWxkKHRoaXMuYmFzZS5jcmVhdGVUZXh0Tm9kZShcIlwiKSk7XG4gICAgdGhpcy5jYXJldCA9IDA7XG4gICAgdGhpcy5zZWxfc3RhcnQgPSBudWxsO1xuICAgIHRoaXMuc2VsX2VuZCA9IG51bGw7XG4gICAgdGhpcy51bmRvX2RhdGEgPSBbXTtcbiAgICB0aGlzLnVuZG9fbm93ID0gLTE7XG4gICAgdGhpcy5zZWxfc3RhdHVzID0gR3VwcHkuU0VMX05PTkU7XG4gICAgdGhpcy5jaGVja3BvaW50KCk7XG4gICAgdGhpcy5lZGl0b3IuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIixHdXBweS5rZXlfZG93biwgZmFsc2UpO1xuICAgIHRoaXMuZWRpdG9yLmFkZEV2ZW50TGlzdGVuZXIoXCJrZXl1cFwiLEd1cHB5LmtleV91cCwgZmFsc2UpO1xuICAgIHRoaXMuZWRpdG9yLmFkZEV2ZW50TGlzdGVuZXIoXCJmb2N1c1wiLCBmdW5jdGlvbihlKSB7IEd1cHB5LmtiLmFsdF9kb3duID0gZmFsc2U7IGlmKHNlbGYuYWN0aXZhdGUpIHNlbGYuYWN0aXZhdGUoKTt9LCBmYWxzZSk7XG4gICAgdGhpcy5kZWFjdGl2YXRlKCk7XG4gICAgdGhpcy5yZWNvbXB1dGVfbG9jYXRpb25zX3BhdGhzKCk7XG59XG5cbi8qIEZ1bmN0aW9ucyBpbnRlbmRlZCBmb3IgZXh0ZXJuYWwgdXNlICovXG5cbkd1cHB5LnByb3RvdHlwZS5nZXRfY29udGVudCA9IGZ1bmN0aW9uKHQpe1xuICAgIGlmKHQgIT0gXCJ4bWxcIikgcmV0dXJuIEd1cHB5LnRyYW5zZm9ybSh0LHRoaXMuYmFzZSk7XG4gICAgZWxzZSByZXR1cm4gKG5ldyBYTUxTZXJpYWxpemVyKCkpLnNlcmlhbGl6ZVRvU3RyaW5nKHRoaXMuYmFzZSk7XG59XG5cbkd1cHB5LnByb3RvdHlwZS5zZXRfY29udGVudCA9IGZ1bmN0aW9uKHhtbF9kYXRhKXtcbiAgICB0aGlzLmJhc2UgPSAobmV3IHdpbmRvdy5ET01QYXJzZXIoKSkucGFyc2VGcm9tU3RyaW5nKHhtbF9kYXRhLCBcInRleHQveG1sXCIpO1xuICAgIHRoaXMuY2xpcGJvYXJkID0gbnVsbDtcbiAgICB2YXIgbCA9IHRoaXMuYmFzZS5nZXRFbGVtZW50c0J5VGFnTmFtZShcImVcIik7XG4gICAgR3VwcHkubG9nKDQsXCJzZWxlY3RlZFwiLGwpO1xuICAgIGZvcih2YXIgaSA9IDA7IGkgPCBsLmxlbmd0aDsgaSsrKXtcblx0aWYoIShsW2ldLmZpcnN0Q2hpbGQpKSBsW2ldLmFwcGVuZENoaWxkKHRoaXMuYmFzZS5jcmVhdGVUZXh0Tm9kZShcIlwiKSk7XG4gICAgfVxuICAgIHRoaXMuY3VycmVudCA9IHRoaXMuYmFzZS5kb2N1bWVudEVsZW1lbnQuZmlyc3RDaGlsZDtcbiAgICB0aGlzLmNhcmV0ID0gMDtcbiAgICB0aGlzLnNlbF9zdGFydCA9IG51bGw7XG4gICAgdGhpcy5zZWxfZW5kID0gbnVsbDtcbiAgICB0aGlzLnVuZG9fZGF0YSA9IFtdO1xuICAgIHRoaXMudW5kb19ub3cgPSAtMTtcbiAgICB0aGlzLnNlbF9zdGF0dXMgPSBHdXBweS5TRUxfTk9ORTtcbiAgICB0aGlzLmNoZWNrcG9pbnQoKTtcbn1cblxuR3VwcHkuaW5zdGFuY2VzID0ge307XG5HdXBweS5yZWFkeSA9IGZhbHNlO1xuXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuXG5HdXBweS5hY3RpdmVfZ3VwcHkgPSBudWxsO1xuXG5HdXBweS5TRUxfTk9ORSA9IDA7XG5HdXBweS5TRUxfQ1VSU09SX0FUX1NUQVJUID0gMTtcbkd1cHB5LlNFTF9DVVJTT1JfQVRfRU5EID0gMjtcblxuR3VwcHkuaXNfYmxhbmsgPSBmdW5jdGlvbihuKXtcbiAgICByZXR1cm4gbi5maXJzdENoaWxkID09IG51bGwgfHwgbi5maXJzdENoaWxkLm5vZGVWYWx1ZSA9PSAnJztcbn1cblxuR3VwcHkuZ2V0X3N5bWJvbHMgPSBmdW5jdGlvbihzeW1ib2xzLCBjYWxsYmFjayl7XG4gICAgdmFyIGFsbF9yZWFkeSA9IGZ1bmN0aW9uKCl7XG5cdEd1cHB5LnJlZ2lzdGVyX2tleWJvYXJkX2hhbmRsZXJzKCk7XG5cdGZvcih2YXIgaSBpbiBHdXBweS5pbnN0YW5jZXMpe1xuXHQgICAgR3VwcHkuaW5zdGFuY2VzW2ldLnJlYWR5ID0gdHJ1ZTtcblx0ICAgIEd1cHB5Lmluc3RhbmNlc1tpXS5yZW5kZXIodHJ1ZSk7XG5cdCAgICBpZihHdXBweS5pbnN0YW5jZXNbaV0ucmVhZHlfY2FsbGJhY2spe1xuXHRcdEd1cHB5Lmluc3RhbmNlc1tpXS5yZWFkeV9jYWxsYmFjaygpO1xuXHRcdEd1cHB5Lmluc3RhbmNlc1tpXS5yZWFkeV9jYWxsYmFjayA9IG51bGw7XG5cdCAgICB9XG5cdH1cblx0R3VwcHkucmVhZHkgPSB0cnVlO1xuICAgIH1cbiAgICB2YXIgZ2V0X2J1aWx0aW5zID0gZnVuY3Rpb24oY2FsbGJhY2spe1xuXHR2YXIgZ3JlZWtfc3ltcyA9IFtcImFscGhhXCIsXCJiZXRhXCIsXCJnYW1tYVwiLFwiZGVsdGFcIixcImVwc2lsb25cIixcInpldGFcIixcImV0YVwiLFwidGhldGFcIixcImlvdGFcIixcImthcHBhXCIsXCJsYW1iZGFcIixcIm11XCIsXCJudVwiLFwieGlcIixcIm9taWNyb25cIixcInBpXCIsXCJyaG9cIixcInNpZ21hXCIsXCJ0YXVcIixcInVwc2lsb25cIixcInBoaVwiLFwiY2hpXCIsXCJwc2lcIixcIm9tZWdhXCIsXCJHYW1tYVwiLFwiRGVsdGFcIixcIlRoZXRhXCIsXCJMYW1iZGFcIixcIlhpXCIsXCJQaVwiLFwiU2lnbWFcIixcIlBoaVwiLFwiUHNpXCIsXCJPbWVnYVwiXTtcblx0dmFyIHJhd19zeW1zID0gW1wibGVxXCIsXCJnZXFcIixcImluZnR5XCJdO1xuXHR2YXIgZnVuY19zeW1zID0gW1wic2luXCIsXCJjb3NcIixcInRhblwiLFwic2VjXCIsXCJjc2NcIixcImNvdFwiLFwibG9nXCIsXCJsblwiXVxuXHRcblx0Zm9yKHZhciBpID0gMDsgaSA8IGdyZWVrX3N5bXMubGVuZ3RoOyBpKyspe1xuXHQgICAgR3VwcHkuc3ltYl9yYXcoZ3JlZWtfc3ltc1tpXSxcIntcXFxcXCIrZ3JlZWtfc3ltc1tpXStcIn1cIixcIiAkXCIrZ3JlZWtfc3ltc1tpXStcIiBcIik7XG5cdH1cblx0XG5cdGZvcih2YXIgaSA9IDA7IGkgPCByYXdfc3ltcy5sZW5ndGg7IGkrKyl7XG5cdCAgICBHdXBweS5zeW1iX3JhdyhyYXdfc3ltc1tpXSxcIntcXFxcXCIrcmF3X3N5bXNbaV0rXCJ9XCIsXCIgXCIrcmF3X3N5bXNbaV0rXCIgXCIpO1xuXHR9XG5cdFxuXHRmb3IodmFyIGkgPSAwOyBpIDwgZnVuY19zeW1zLmxlbmd0aDsgaSsrKXtcblx0ICAgIEd1cHB5LnN5bWJfZnVuYyhmdW5jX3N5bXNbaV0pO1xuXHR9XG4gICAgXG5cdEd1cHB5LnN5bWJfcmF3KFwiKlwiLFwiXFxcXGNkb3QgXCIsXCIqXCIpO1xuXHRpZihjYWxsYmFjaykgY2FsbGJhY2soKTtcbiAgICB9XG5cbiAgICBpZighKEFycmF5LmlzQXJyYXkoc3ltYm9scykpKXtcblx0c3ltYm9scyA9IFtzeW1ib2xzXTtcbiAgICB9XG4gICAgdmFyIGFuc3dlcnMgPSBbXTtcbiAgICB2YXIgY2FsbHMgPSBbXTtcbiAgICB2YXIgc2V0X3N5bWJvbHMgPSBmdW5jdGlvbigpe1xuXHRmb3IodmFyIGkgPSAwOyBpIDwgYW5zd2Vycy5sZW5ndGg7IGkrKyl7XG5cdCAgICBmb3IodmFyIHMgaW4gYW5zd2Vyc1tpXSl7XG5cdFx0R3VwcHkua2Iuc3ltYm9sc1tzXSA9IGFuc3dlcnNbaV1bc107XG5cdCAgICB9XG5cdH1cblx0aWYoY2FsbGJhY2spIGNhbGxiYWNrKCk7XG4gICAgfVxuICAgIGZvcih2YXIgaSA9IDA7IGkgPCBzeW1ib2xzLmxlbmd0aDsgaSsrKXtcblx0YW5zd2Vycy5wdXNoKG51bGwpO1xuXHRpZihzeW1ib2xzW2ldID09IFwiYnVpbHRpbnNcIil7XG5cdCAgICBjYWxscy5wdXNoKGdldF9idWlsdGlucyk7XG5cdCAgICBjb250aW51ZTtcblx0fVxuXHR2YXIgeCA9IGZ1bmN0aW9uIG91dGVyKGope1xuXHQgICAgcmV0dXJuIGZ1bmN0aW9uKGNhbGxiYWNrKXtcblx0XHR2YXIgcmVxID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7XG5cdFx0cmVxLm9ubG9hZCA9IGZ1bmN0aW9uKCl7XG5cdFx0ICAgIHZhciBzeW1zID0gSlNPTi5wYXJzZSh0aGlzLnJlc3BvbnNlVGV4dCk7XG5cdFx0ICAgIGZvcih2YXIgcyBpbiBzeW1zKXtcblx0XHRcdEd1cHB5LmtiLnN5bWJvbHNbc10gPSBzeW1zW3NdO1xuXHRcdCAgICB9XG5cdFx0ICAgIGNhbGxiYWNrKCk7XG5cdFx0fTtcblx0XHRyZXEub3BlbihcImdldFwiLCBzeW1ib2xzW2pdLCB0cnVlKTtcblx0XHRyZXEuc2VuZCgpO1xuXHQgICAgfVxuXHR9KGkpO1xuXHRjYWxscy5wdXNoKHgpO1xuICAgIH1cbiAgICBjYWxscy5wdXNoKGFsbF9yZWFkeSk7XG4gICAgdmFyIGogPSAwO1xuICAgIHZhciBjYiA9IGZ1bmN0aW9uKCl7XG5cdGogKz0gMTtcblx0aWYoaiA8IGNhbGxzLmxlbmd0aCkgY2FsbHNbal0oY2IpO1xuICAgIH1cbiAgICBpZihjYWxscy5sZW5ndGggPiAwKSBjYWxsc1swXShjYik7XG59XG5cbkd1cHB5LnRyYW5zZm9ybSA9IGZ1bmN0aW9uKHQsIGJhc2UsIHIpe1xuICAgIHJldHVybiBHdXBweS5tYW51YWxfcmVuZGVyKGJhc2UsdCxiYXNlLmRvY3VtZW50RWxlbWVudCxyKTtcbn1cblxuR3VwcHkuYnJhY2tldF94cGF0aCA9IFwiKGNvdW50KC4vKikgIT0gMSBhbmQgbm90IFxcXG5cdFx0ICAgICAgICAgICggXFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb3VudCguL2UpPTIgYW5kIFxcXG5cdFx0XHQgICAgY291bnQoLi9mKT0xIGFuZCBcXFxuXHRcdFx0ICAgIGNvdW50KC4vZVtzdHJpbmctbGVuZ3RoKHRleHQoKSk9MF0pPTIgYW5kIFxcXG5cdFx0XHQgICAgKCBcXFxuXHRcdFx0ICAgICAgKFxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvdW50KC4vZi9jKT0xIGFuZFxcXG5cdFx0XHQgICAgICAgIGNvdW50KC4vZi9jW0Bpc19icmFja2V0PSd5ZXMnXSk9MVxcXG5cdFx0XHQgICAgICApXFxcblx0XHRcdCAgICAgIG9yXFxcblx0XHRcdCAgICAgIChcXFxuXHRcdFx0ICAgICAgICBmL0BjPSd5ZXMnIGFuZCBcXFxuXHRcdFx0XHRjb3VudCguL2VbQGN1cnJlbnQ9J3llcyddKT0wIGFuZCBcXFxuXHRcdFx0XHRjb3VudCguL2VbQHRlbXA9J3llcyddKT0wIFxcXG5cdFx0XHQgICAgICApXFxcblx0XHRcdCAgICApXFxcblx0XHRcdCAgKVxcXG5cdFx0XHQpICBcXFxuXHRcdFx0b3JcXFxuXHRcdCAgICAgICAgKFxcXG5cdFx0XHQgIGNvdW50KC4vKikgPSAxIGFuZCBcXFxuXHRcdFx0ICBzdHJpbmctbGVuZ3RoKC4vZS90ZXh0KCkpICE9IDEgYW5kIFxcXG5cdFx0XHQgIG51bWJlciguL2UvdGV4dCgpKSAhPSAuL2UvdGV4dCgpIFxcXG5cdFx0XHQpIFxcXG5cdFx0XHRvciBcXFxuXHRcdCAgICAgICAgKCBcXFxuXHRcdFx0ICBjb3VudCguLyopID0gMSBhbmQgXFxcblx0XHRcdCAgLi9lL0BjdXJyZW50ID0gJ3llcycgXFxcblx0XHRcdCkgXFxcblx0XHRcdG9yIFxcXG5cdFx0ICAgICAgICAoIFxcXG5cdFx0XHQgIGNvdW50KC4vKikgPSAxIGFuZCBcXFxuXHRcdFx0ICAuL2UvQHRlbXAgPSAneWVzJyBcXFxuXHRcdFx0KVwiXG5cbkd1cHB5Lm1hbnVhbF9yZW5kZXIgPSBmdW5jdGlvbihiYXNlLHQsbixyKXtcbiAgICB2YXIgYW5zID0gXCJcIjtcbiAgICBHdXBweS5sb2coNCxcInJlbmRlcmluZ1wiLG4pO1xuICAgIGlmKG4ubm9kZU5hbWUgPT0gXCJlXCIpe1xuXHRpZih0ID09IFwibGF0ZXhcIiAmJiByKXtcblx0ICAgIGFucyA9IG4uZ2V0QXR0cmlidXRlKFwicmVuZGVyXCIpO1xuXHR9XG5cdGVsc2V7XG5cdCAgICBhbnMgPSBuLmZpcnN0Q2hpbGQudGV4dENvbnRlbnQ7XG5cdH1cbiAgICB9XG4gICAgZWxzZSBpZihuLm5vZGVOYW1lID09IFwiZlwiKXtcblx0Zm9yKHZhciBubiA9IG4uZmlyc3RDaGlsZDsgbm4gIT0gbnVsbDsgbm4gPSBubi5uZXh0U2libGluZyl7XG5cdCAgICBpZihubi5ub2RlTmFtZSA9PSBcImJcIiAmJiBubi5nZXRBdHRyaWJ1dGUoXCJwXCIpID09IHQpe1xuXHRcdGFucyA9IEd1cHB5Lm1hbnVhbF9yZW5kZXIoYmFzZSx0LG5uLHIpO1xuXHRcdGJyZWFrO1xuXHQgICAgfVxuXHR9XG4gICAgfVxuICAgIGVsc2UgaWYobi5ub2RlTmFtZSA9PSBcImJcIil7XG5cdHZhciBjcyA9IFtdXG5cdHZhciBpID0gMTtcblx0dmFyIHBhciA9IG4ucGFyZW50Tm9kZTtcblx0Zm9yKHZhciBubiA9IHBhci5maXJzdENoaWxkOyBubiAhPSBudWxsOyBubiA9IG5uLm5leHRTaWJsaW5nKVxuXHQgICAgaWYobm4ubm9kZU5hbWUgPT0gXCJjXCIgfHwgbm4ubm9kZU5hbWUgPT0gXCJsXCIpIGNzW2krK10gPSBHdXBweS5tYW51YWxfcmVuZGVyKGJhc2UsdCxubixyKTtcblx0Zm9yKHZhciBubiA9IG4uZmlyc3RDaGlsZDsgbm4gIT0gbnVsbDsgbm4gPSBubi5uZXh0U2libGluZyl7XG5cdCAgICBpZihubi5ub2RlVHlwZSA9PSAzKSBhbnMgKz0gbm4udGV4dENvbnRlbnQ7XG5cdCAgICBlbHNlIGlmKG5uLm5vZGVUeXBlID09IDEpe1xuXHRcdGlmKG5uLmhhc0F0dHJpYnV0ZShcImRcIikpe1xuXHRcdCAgICB2YXIgZGltID0gcGFyc2VJbnQobm4uZ2V0QXR0cmlidXRlKFwiZFwiKSk7XG5cdFx0ICAgIHZhciBqb2luZXIgPSBmdW5jdGlvbihkLGwpe1xuXHRcdFx0aWYoZCA+IDEpIGZvcih2YXIgayA9IDA7IGsgPCBsLmxlbmd0aDsgaysrKSBsW2tdID0gam9pbmVyKGQtMSxsW2tdKTtcblx0XHRcdHJldHVybiBsLmpvaW4obm4uZ2V0QXR0cmlidXRlKCdzZXAnK2QpKTtcblx0XHQgICAgfVxuXHRcdCAgICBhbnMgKz0gam9pbmVyKGRpbSxjc1twYXJzZUludChubi5nZXRBdHRyaWJ1dGUoXCJyZWZcIikpXSk7XG5cdFx0fVxuXHRcdGVsc2UgYW5zICs9IGNzW3BhcnNlSW50KG5uLmdldEF0dHJpYnV0ZShcInJlZlwiKSldO1xuXHQgICAgfVxuXHR9XG4gICAgfVxuICAgIGVsc2UgaWYobi5ub2RlTmFtZSA9PSBcImxcIil7XG5cdGFucyA9IFtdO1xuXHR2YXIgaSA9IDA7XG5cdGZvcih2YXIgbm4gPSBuLmZpcnN0Q2hpbGQ7IG5uICE9IG51bGw7IG5uID0gbm4ubmV4dFNpYmxpbmcpe1xuXHQgICAgYW5zW2krK10gPSBHdXBweS5tYW51YWxfcmVuZGVyKGJhc2UsdCxubixyKTtcblx0fVxuICAgIH1cbiAgICBlbHNlIGlmKG4ubm9kZU5hbWUgPT0gXCJjXCIgfHwgbi5ub2RlTmFtZSA9PSBcIm1cIil7XG5cdGZvcih2YXIgbm4gPSBuLmZpcnN0Q2hpbGQ7IG5uICE9IG51bGw7IG5uID0gbm4ubmV4dFNpYmxpbmcpXG5cdCAgICBhbnMgKz0gR3VwcHkubWFudWFsX3JlbmRlcihiYXNlLHQsbm4scik7XG5cdGlmKHQgPT0gXCJsYXRleFwiICYmXG4gICAgICAgICAgIG4uZ2V0QXR0cmlidXRlKFwiYnJhY2tldFwiKSA9PSBcInllc1wiICYmXG5cdCAgIGJhc2UuZXZhbHVhdGUoR3VwcHkuYnJhY2tldF94cGF0aCwgbiwgbnVsbCxcblx0XHRcdCBYUGF0aFJlc3VsdC5CT09MRUFOX1RZUEUsIG51bGwpLmJvb2xlYW5WYWx1ZSl7IFxuXHQgICAgYW5zID0gXCJcXFxcbGVmdChcIithbnMrXCJcXFxccmlnaHQpXCI7XG5cdH1cbiAgICB9XG4gICAgR3VwcHkubG9nKDQsXCJyZW5kZXJlZFwiLGFucylcbiAgICAvL2NvbnNvbGUubG9nKFwiQUFBXCIsbixhbnMpO1xuICAgIHJldHVybiBhbnM7XG59XG5cbkd1cHB5LnByb3RvdHlwZS5wYXRoX3RvID0gZnVuY3Rpb24obil7XG4gICAgdmFyIG5hbWUgPSBuLm5vZGVOYW1lO1xuICAgIGlmKG5hbWUgPT0gXCJtXCIpIHJldHVybiBcImd1cHB5X2xvY19tXCI7XG4gICAgdmFyIG5zID0gMDtcbiAgICBmb3IodmFyIG5uID0gbjsgbm4gIT0gbnVsbDsgbm4gPSBubi5wcmV2aW91c1NpYmxpbmcpIGlmKG5uLm5vZGVUeXBlID09IDEgJiYgbm4ubm9kZU5hbWUgPT0gbmFtZSkgbnMrKztcbiAgICByZXR1cm4gdGhpcy5wYXRoX3RvKG4ucGFyZW50Tm9kZSkrXCJfXCIrbmFtZStcIlwiK25zO1xufVxuXG5HdXBweS5wcm90b3R5cGUuaXNfY2hhbmdlZCA9IGZ1bmN0aW9uKCl7XG4gICAgdmFyIGJiID0gdGhpcy5lZGl0b3IuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcImthdGV4XCIpWzBdO1xuICAgIGlmKCFiYikgcmV0dXJuO1xuICAgIHZhciByZWN0ID0gYmIuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgaWYodGhpcy5ib3VuZGluZ19ib3gpXG5cdGFucyA9IHRoaXMuYm91bmRpbmdfYm94LnRvcCAhPSByZWN0LnRvcCB8fCB0aGlzLmJvdW5kaW5nX2JveC5ib3R0b20gIT0gcmVjdC5ib3R0b20gfHwgdGhpcy5ib3VuZGluZ19ib3gucmlnaHQgIT0gcmVjdC5yaWdodCB8fCB0aGlzLmJvdW5kaW5nX2JveC5sZWZ0ICE9IHJlY3QubGVmdDtcbiAgICBlbHNlXG5cdGFucyA9IHRydWU7XG4gICAgdGhpcy5ib3VuZGluZ19ib3ggPSByZWN0O1xuICAgIHJldHVybiBhbnM7XG59XG5cbkd1cHB5LnByb3RvdHlwZS5yZWNvbXB1dGVfbG9jYXRpb25zX3BhdGhzID0gZnVuY3Rpb24oKXtcbiAgICBhbnMgPSBbXTtcbiAgICB2YXIgYmIgPSB0aGlzLmVkaXRvci5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFwia2F0ZXhcIilbMF07XG4gICAgaWYoIWJiKSByZXR1cm47XG4gICAgdmFyIHJlY3QgPSBiYi5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICBhbnMucHVzaCh7J3BhdGgnOidhbGwnLFxuXHQgICAgICAndG9wJzpyZWN0LnRvcCxcblx0ICAgICAgJ2JvdHRvbSc6cmVjdC5ib3R0b20sXG5cdCAgICAgICdsZWZ0JzpyZWN0LmxlZnQsXG5cdCAgICAgICdyaWdodCc6cmVjdC5yaWdodH0pO1xuICAgIHZhciBlbHRzID0gdGhpcy5lZGl0b3IuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcImd1cHB5X2VsdFwiKTtcbiAgICBmb3IodmFyIGkgPSAwOyBpIDwgZWx0cy5sZW5ndGg7IGkrKyl7XG5cdHZhciBlbHQgPSBlbHRzW2ldO1xuXHRpZihlbHQubm9kZU5hbWUgPT0gXCJtc3R5bGVcIikgY29udGludWU7XG5cdHZhciByZWN0ID0gZWx0LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuXHRHdXBweS5sb2coNCxcInJlY3QgZGltZW5zaW9ucyBCVExSXCIscmVjdC5ib3R0b20scmVjdC50b3AscmVjdC5sZWZ0LHJlY3QucmlnaHQsZWx0LmNsYXNzTGlzdCk7XG5cdGlmKHJlY3QudG9wID09IDAgJiYgcmVjdC5ib3R0b20gPT0gMCAmJiByZWN0LmxlZnQgPT0gMCAmJiByZWN0LnJpZ2h0ID09IDApIGNvbnRpbnVlO1xuXHR2YXIgY2wgPSBlbHQuY2xhc3NMaXN0O1xuXHRmb3IodmFyIGogPSAwOyBqIDwgY2wubGVuZ3RoOyBqKyspe1xuXHQgICAgaWYoY2xbal0uaW5kZXhPZihcImd1cHB5X2xvY1wiKSA9PSAwKXtcblx0XHRhbnMucHVzaCh7J3BhdGgnOmNsW2pdLFxuXHRcdFx0ICAndG9wJzpyZWN0LnRvcCxcblx0XHRcdCAgJ2JvdHRvbSc6cmVjdC5ib3R0b20sXG5cdFx0XHQgICdsZWZ0JzpyZWN0LmxlZnQsXG5cdFx0XHQgICdyaWdodCc6cmVjdC5yaWdodCxcblx0XHRcdCAgJ21pZF94JzoocmVjdC5sZWZ0K3JlY3QucmlnaHQpLzIsXG5cdFx0XHQgICdtaWRfeSc6KHJlY3QuYm90dG9tK3JlY3QudG9wKS8yLFxuXHRcdFx0ICAnYmxhbmsnOignICcrZWx0LmNsYXNzTmFtZSsnICcpLmluZGV4T2YoJyBndXBweV9ibGFuayAnKSA+PSAwfSk7XG5cdFx0YnJlYWs7XG5cdCAgICB9XG5cdH1cbiAgICB9XG4gICAgdGhpcy5ib3hlcyA9IGFucztcbiAgICBHdXBweS5sb2coNCxcImJveGVzXCIsSlNPTi5zdHJpbmdpZnkodGhpcy5ib3hlcykpO1xufVxuXG5HdXBweS5nZXRfbG9jID0gZnVuY3Rpb24oeCx5LGN1cnJlbnRfbm9kZSxjdXJyZW50X2NhcmV0KXtcbiAgICB2YXIgZyA9IEd1cHB5LmFjdGl2ZV9ndXBweTtcbiAgICB2YXIgbWluX2Rpc3QgPSAtMTtcbiAgICB2YXIgbWlkX3hfZGlzdCA9IDA7XG4gICAgdmFyIHBvcyA9IFwiXCI7XG4gICAgdmFyIG9wdCA9IG51bGw7XG4gICAgdmFyIGN1ciA9IG51bGw7XG4gICAgdmFyIGNhciA9IG51bGw7XG4gICAgR3VwcHkubG9nKDQsXCJzZWFyY2hpbmdcIik7XG4gICAgLy8gY2hlY2sgaWYgd2UgZ28gdG8gZmlyc3Qgb3IgbGFzdCBlbGVtZW50XG4gICAgdmFyIGJiID0gZy5lZGl0b3IuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcImthdGV4XCIpWzBdO1xuICAgIGlmKCFiYikgcmV0dXJuO1xuICAgIHZhciByZWN0ID0gYmIuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgaWYoY3VycmVudF9ub2RlKXtcblx0dmFyIGN1cnJlbnRfcGF0aCA9IGcucGF0aF90byhjdXJyZW50X25vZGUpO1xuXHR2YXIgY3VycmVudF9wb3MgPSBwYXJzZUludChjdXJyZW50X3BhdGguc3Vic3RyaW5nKGN1cnJlbnRfcGF0aC5sYXN0SW5kZXhPZihcImVcIikrMSkpO1xuICAgIH1cbiAgICAvLyBpZih4IDwgcmVjdC5sZWZ0KXtcbiAgICAvLyBcdGN1ciA9IGcuYmFzZS5kb2N1bWVudEVsZW1lbnQuZmlyc3RDaGlsZDtcbiAgICAvLyBcdGNhciA9IDA7XG4gICAgLy8gXHRwb3MgPSBcImxlZnRcIjtcbiAgICAvLyB9XG4gICAgLy8gZWxzZSBpZih4ID4gcmVjdC5yaWdodCl7XG4gICAgLy8gXHRjdXIgPSBnLmJhc2UuZG9jdW1lbnRFbGVtZW50Lmxhc3RDaGlsZDtcbiAgICAvLyBcdGNhciA9IGN1ci5maXJzdENoaWxkLm5vZGVWYWx1ZS5sZW5ndGg7XG4gICAgLy8gXHRwb3MgPSBcInJpZ2h0XCI7XG4gICAgLy8gfVxuICAgIC8vZWxzZXtcblx0Ly8gV2UgYXJlIGluc2lkZSBleHByZXNzaW9uXG5cbiAgICB2YXIgYm94ZXMgPSBnLmJveGVzO1xuICAgIGlmKGN1cnJlbnRfbm9kZSl7XG5cdGN1cnJlbnRfcGF0aCA9IGN1cnJlbnRfcGF0aC5yZXBsYWNlKC9lWzAtOV0rJC8sXCJlXCIpO1xuXHR2YXIgYm94ZXMyID0gW107XG5cdGZvcih2YXIgaSA9IDA7IGkgPCBib3hlcy5sZW5ndGg7IGkrKyl7XG5cdCAgICBpZihib3hlc1tpXS5wYXRoID09IFwiYWxsXCIpIGNvbnRpbnVlO1xuXHQgICAgdmFyIGxvYyA9IGJveGVzW2ldLnBhdGguc3Vic3RyaW5nKDAsYm94ZXNbaV0ucGF0aC5sYXN0SW5kZXhPZihcIl9cIikpO1xuXHQgICAgbG9jID0gbG9jLnJlcGxhY2UoL2VbMC05XSskLyxcImVcIik7XG5cdCAgICBpZihsb2MgPT0gY3VycmVudF9wYXRoKXtcblx0XHRib3hlczIucHVzaChib3hlc1tpXSk7XG5cdCAgICB9XG5cdH1cblx0Ym94ZXMgPSBib3hlczI7XG4gICAgfVxuICAgIGlmKCFib3hlcykgcmV0dXJuO1xuICAgIEd1cHB5LmxvZyg0LFwiYm94ZXNcIixib3hlcyk7XG4gICAgZm9yKHZhciBpID0gMDsgaSA8IGJveGVzLmxlbmd0aDsgaSsrKXtcblx0dmFyIGJveCA9IGJveGVzW2ldO1xuXHQvL0d1cHB5LmxvZyg0LFwiQk9YXCIsSlNPTi5zdHJpbmdpZnkoYm94KSx4LHkpO1xuXHRpZihib3gucGF0aCA9PSBcImFsbFwiKSBjb250aW51ZTtcblx0dmFyIHhkaXN0ID0gTWF0aC5tYXgoYm94LmxlZnQgLSB4LCB4IC0gYm94LnJpZ2h0LCAwKVxuXHR2YXIgeWRpc3QgPSBNYXRoLm1heChib3gudG9wIC0geSwgeSAtIGJveC5ib3R0b20sIDApXG5cdHZhciBkaXN0ID0gTWF0aC5zcXJ0KHhkaXN0KnhkaXN0ICsgeWRpc3QqeWRpc3QpO1xuXHRpZihtaW5fZGlzdCA9PSAtMSB8fCBkaXN0IDwgbWluX2Rpc3Qpe1xuXHQgICAgbWluX2Rpc3QgPSBkaXN0O1xuXHQgICAgbWlkX2Rpc3QgPSB4IC0gYm94Lm1pZF94O1xuXHQgICAgb3B0ID0gYm94O1xuXHR9XG4gICAgfVxuICAgIC8vR3VwcHkubG9nKDMsXCJPUFRcIixKU09OLnN0cmluZ2lmeShvcHQpLHgseSk7XG4gICAgdmFyIGxvYyA9IG9wdC5wYXRoLnN1YnN0cmluZyhcImd1cHB5X2xvY1wiLmxlbmd0aCk7XG4gICAgbG9jID0gbG9jLnJlcGxhY2UoL18vZyxcIi9cIik7XG4gICAgbG9jID0gbG9jLnJlcGxhY2UoLyhbMC05XSspKD89Lio/XFwvKS9nLFwiWyQxXVwiKTtcbiAgICAvL0d1cHB5LmxvZygzLFwiTE9DXCIsbG9jKTtcbiAgICBjdXIgPSBnLmJhc2UuZXZhbHVhdGUobG9jLnN1YnN0cmluZygwLGxvYy5sYXN0SW5kZXhPZihcIi9cIikpLCBnLmJhc2UuZG9jdW1lbnRFbGVtZW50LCBudWxsLCBYUGF0aFJlc3VsdC5GSVJTVF9PUkRFUkVEX05PREVfVFlQRSwgbnVsbCkuc2luZ2xlTm9kZVZhbHVlO1xuICAgIGNhciA9IHBhcnNlSW50KGxvYy5zdWJzdHJpbmcobG9jLmxhc3RJbmRleE9mKFwiL1wiKSsxKSk7XG4gICAgLy8gQ2hlY2sgaWYgd2Ugd2FudCB0aGUgY3Vyc29yIGJlZm9yZSBvciBhZnRlciB0aGUgZWxlbWVudFxuICAgIEd1cHB5LmxvZyg0LFwic2lnbmVkIGRpc3RhbmNlIHRvIG1pZGRsZSBvZiBib3hcIixtaWRfZGlzdCk7XG4gICAgaWYobWlkX2Rpc3QgPiAwICYmICEob3B0LmJsYW5rKSl7XG5cdGNhcisrO1xuICAgIH1cbiAgICBhbnMgPSB7XCJjdXJyZW50XCI6Y3VyLFwiY2FyZXRcIjpjYXIsXCJwb3NcIjpwb3N9O1xuICAgIGlmKGN1cnJlbnRfbm9kZSAmJiBvcHQpe1xuXHR2YXIgb3B0X3BvcyA9IHBhcnNlSW50KG9wdC5wYXRoLnN1YnN0cmluZyhvcHQucGF0aC5sYXN0SW5kZXhPZihcImVcIikrMSxvcHQucGF0aC5sYXN0SW5kZXhPZihcIl9cIikpKTtcblx0Ly92YXIgb3B0X2NhcmV0ID0gcGFyc2VJbnQob3B0LnBhdGguc3Vic3RyaW5nKG9wdC5wYXRoLmxhc3RJbmRleE9mKFwiX1wiKSsxKSk7XG5cdGlmKG9wdF9wb3MgPCBjdXJyZW50X3BvcykgcG9zID0gXCJsZWZ0XCI7XG5cdGVsc2UgaWYob3B0X3BvcyA+IGN1cnJlbnRfcG9zKSBwb3MgPSBcInJpZ2h0XCI7XG5cdGVsc2UgaWYoY2FyIDwgY3VycmVudF9jYXJldCkgcG9zID0gXCJsZWZ0XCI7XG5cdGVsc2UgaWYoY2FyID4gY3VycmVudF9jYXJldCkgcG9zID0gXCJyaWdodFwiO1xuXHRHdXBweS5sb2coMyxcIlBPU1wiLGN1cnJlbnRfcGF0aCxjdXJyZW50X3BvcyxvcHRfcG9zLGNhcixjdXJyZW50X2NhcmV0KTtcblx0aWYocG9zKSBhbnNbJ3BvcyddID0gcG9zO1xuXHRlbHNlIGFuc1sncG9zJ10gPSBcIm5vbmVcIjtcbiAgICB9XG4gICAgcmV0dXJuIGFucztcbn1cblxuR3VwcHkucHJvdG90eXBlLnNlbGVjdF90byA9IGZ1bmN0aW9uKHgseSwgbW91c2Upe1xuICAgIHZhciBzZWxfY2FyZXQgPSB0aGlzLmNhcmV0O1xuICAgIHZhciBzZWxfY3Vyc29yID0gdGhpcy5jdXJyZW50O1xuICAgIGlmKHRoaXMuc2VsX3N0YXR1cyA9PSBHdXBweS5TRUxfQ1VSU09SX0FUX1NUQVJUKXtcblx0c2VsX2N1cnNvciA9IHRoaXMuc2VsX2VuZC5ub2RlO1xuXHRzZWxfY2FyZXQgPSB0aGlzLnNlbF9lbmQuY2FyZXQ7XG4gICAgfVxuICAgIGVsc2UgaWYodGhpcy5zZWxfc3RhdHVzID09IEd1cHB5LlNFTF9DVVJTT1JfQVRfRU5EKXtcblx0c2VsX2N1cnNvciA9IHRoaXMuc2VsX3N0YXJ0Lm5vZGU7XG5cdHNlbF9jYXJldCA9IHRoaXMuc2VsX3N0YXJ0LmNhcmV0O1xuICAgIH1cbiAgICB2YXIgbG9jID0gR3VwcHkuZ2V0X2xvYyh4LHksc2VsX2N1cnNvcixzZWxfY2FyZXQpO1xuICAgIGlmKCFsb2MpIHJldHVybjtcbiAgICBpZihsb2MuY3VycmVudCA9PSBzZWxfY3Vyc29yICYmIGxvYy5jYXJldCA9PSBzZWxfY2FyZXQpe1xuXHR0aGlzLmNhcmV0ID0gbG9jLmNhcmV0XG5cdHRoaXMuc2VsX3N0YXR1cyA9IEd1cHB5LlNFTF9OT05FO1xuICAgIH1cbiAgICBlbHNlIGlmKGxvYy5wb3MgPT0gXCJsZWZ0XCIpe1xuXHR0aGlzLnNlbF9lbmQgPSB7XCJub2RlXCI6c2VsX2N1cnNvcixcImNhcmV0XCI6c2VsX2NhcmV0fTtcblx0dGhpcy5zZXRfc2VsX2JvdW5kYXJ5KEd1cHB5LlNFTF9DVVJTT1JfQVRfU1RBUlQsIG1vdXNlKTtcbiAgICB9XG4gICAgZWxzZSBpZihsb2MucG9zID09IFwicmlnaHRcIil7XG5cdHRoaXMuc2VsX3N0YXJ0ID0ge1wibm9kZVwiOnNlbF9jdXJzb3IsXCJjYXJldFwiOnNlbF9jYXJldH07XG5cdHRoaXMuc2V0X3NlbF9ib3VuZGFyeShHdXBweS5TRUxfQ1VSU09SX0FUX0VORCwgbW91c2UpO1xuICAgIH1cbiAgICB0aGlzLmN1cnJlbnQgPSBsb2MuY3VycmVudDtcbiAgICB0aGlzLmNhcmV0ID0gbG9jLmNhcmV0O1xufVxuXG5HdXBweS5tb3VzZV91cCA9IGZ1bmN0aW9uKGUpe1xuICAgIEd1cHB5LmtiLmlzX21vdXNlX2Rvd24gPSBmYWxzZTtcbiAgICB2YXIgZyA9IEd1cHB5LmFjdGl2ZV9ndXBweTtcbiAgICBpZihnKSBnLnJlbmRlcih0cnVlKTtcbn1cblxuR3VwcHkubW91c2VfZG93biA9IGZ1bmN0aW9uKGUpe1xuICAgIHZhciBuID0gZS50YXJnZXQ7XG4gICAgR3VwcHkua2IuaXNfbW91c2VfZG93biA9IHRydWU7XG4gICAgaWYoZS50YXJnZXQgPT0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0b2dnbGVfcmVmXCIpKSB0b2dnbGVfZGl2KFwiaGVscF9jYXJkXCIpO1xuICAgIGVsc2Ugd2hpbGUobiAhPSBudWxsKXtcblx0aWYobi5pZCBpbiBHdXBweS5pbnN0YW5jZXMpe1xuXHQgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuXHQgICAgR3VwcHkuYWN0aXZlX2d1cHB5ID0gR3VwcHkuaW5zdGFuY2VzW24uaWRdO1xuXHQgICAgR3VwcHkuYWN0aXZlX2d1cHB5LmFjdGl2YXRlKCk7XG5cdCAgICBmb3IodmFyIGkgaW4gR3VwcHkuaW5zdGFuY2VzKXtcblx0XHRpZihpICE9IG4uaWQpIEd1cHB5Lmluc3RhbmNlc1tpXS5kZWFjdGl2YXRlKCk7XG5cdCAgICB9XG5cdCAgICB2YXIgZyA9IEd1cHB5LmFjdGl2ZV9ndXBweTtcblx0ICAgIGlmKGUuc2hpZnRLZXkpe1xuXHRcdGcuc2VsZWN0X3RvKGUuY2xpZW50WCwgZS5jbGllbnRZLCB0cnVlKTtcblx0ICAgIH1cblx0ICAgIGVsc2Uge1xuXHRcdHZhciBsb2MgPSBHdXBweS5nZXRfbG9jKGUuY2xpZW50WCxlLmNsaWVudFkpO1xuXHRcdGlmKCFsb2MpIHJldHVybjtcblx0XHRnLmN1cnJlbnQgPSBsb2MuY3VycmVudDtcblx0XHRnLmNhcmV0ID0gbG9jLmNhcmV0O1xuXHRcdGcuc2VsX3N0YXR1cyA9IEd1cHB5LlNFTF9OT05FO1xuXHQgICAgfVxuXHQgICAgZy5yZW5kZXIodHJ1ZSk7XG5cdCAgICByZXR1cm47XG5cdH1cblx0biA9IG4ucGFyZW50Tm9kZTtcbiAgICB9XG4gICAgR3VwcHkuYWN0aXZlX2d1cHB5ID0gbnVsbDtcbiAgICBmb3IodmFyIGkgaW4gR3VwcHkuaW5zdGFuY2VzKXtcblx0R3VwcHkuaW5zdGFuY2VzW2ldLmRlYWN0aXZhdGUoKTtcbiAgICB9XG59XG5cbkd1cHB5Lm1vdXNlX21vdmUgPSBmdW5jdGlvbihlKXtcbiAgICB2YXIgZyA9IEd1cHB5LmFjdGl2ZV9ndXBweTtcbiAgICBpZighZykgcmV0dXJuO1xuICAgIGlmKCFHdXBweS5rYi5pc19tb3VzZV9kb3duKXtcblx0dmFyIGJiID0gZy5lZGl0b3I7XG5cdHZhciByZWN0ID0gYmIuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG5cdGlmKChlLmNsaWVudFggPCByZWN0LmxlZnQgfHwgZS5jbGllbnRYID4gcmVjdC5yaWdodCkgfHwgKGUuY2xpZW50WSA+IHJlY3QuYm90dG9tIHx8IGUuY2xpZW50WSA8IHJlY3QudG9wKSl7XG5cdCAgICAvL0d1cHB5LmxvZygzLFwiUlwiLHJlY3QpO1xuXHQgICAgZy50ZW1wX2N1cnNvciA9IHtcIm5vZGVcIjpudWxsLFwiY2FyZXRcIjowfTtcblx0fVxuXHRlbHNle1xuXHQgICAgdmFyIGxvYyA9IEd1cHB5LmdldF9sb2MoZS5jbGllbnRYLGUuY2xpZW50WSk7XG5cdCAgICBpZighbG9jKSByZXR1cm47XG5cdCAgICBnLnRlbXBfY3Vyc29yID0ge1wibm9kZVwiOmxvYy5jdXJyZW50LFwiY2FyZXRcIjpsb2MuY2FyZXR9O1xuXHR9XG5cdGcucmVuZGVyKGcuaXNfY2hhbmdlZCgpKTtcbiAgICB9XG4gICAgZWxzZXtcblx0Zy5zZWxlY3RfdG8oZS5jbGllbnRYLGUuY2xpZW50WSwgdHJ1ZSk7XG5cdC8vR3VwcHkubG9nKDMsXCJTU1NcIixnLnNlbF9zdGF0dXMsZy5zZWxfc3RhcnQsZy5zZWxfZW5kLGcuY2FyZXQpO1xuXHRnLnJlbmRlcihnLmlzX2NoYW5nZWQoKSk7XG4gICAgfVxufVxuXG53aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlZG93blwiLEd1cHB5Lm1vdXNlX2Rvd24sIGZhbHNlKTtcbndpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwibW91c2V1cFwiLEd1cHB5Lm1vdXNlX3VwLCBmYWxzZSk7XG53aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlbW92ZVwiLEd1cHB5Lm1vdXNlX21vdmUsIGZhbHNlKTtcblxuR3VwcHkucHJvdG90eXBlLmFkZF9wYXRocyA9IGZ1bmN0aW9uKG4scGF0aCl7XG4gICAgLy9HdXBweS5sb2coMyxcIkJcIixuLm5vZGVOYW1lLG4uZmlyc3RDaGlsZC5ub2RlTmFtZSlcbiAgICBpZihuLm5vZGVOYW1lID09IFwiZVwiKXtcblx0bi5zZXRBdHRyaWJ1dGUoXCJwYXRoXCIscGF0aCk7XG5cdC8vR3VwcHkubG9nKDMsXCJET05FXCIpO1xuICAgIH1cbiAgICBlbHNle1xuXHQvL0d1cHB5LmxvZygzLFwiTk9UIERPTkVcIik7XG5cdHZhciBlcyA9IDEsIGZzID0gMSwgY3MgPSAxLCBscyA9IDE7XG5cdGZvcih2YXIgYyA9IG4uZmlyc3RDaGlsZDsgYyAhPSBudWxsOyBjID0gYy5uZXh0U2libGluZyl7XG5cdCAgICAvL0d1cHB5LmxvZygzLFwiQ1wiLGMpXG5cdCAgICBpZihjLm5vZGVOYW1lID09IFwiY1wiKXsgdGhpcy5hZGRfcGF0aHMoYywgcGF0aCtcIl9jXCIrY3MpOyBjcysrOyB9XG5cdCAgICBlbHNlIGlmKGMubm9kZU5hbWUgPT0gXCJmXCIpeyB0aGlzLmFkZF9wYXRocyhjLCBwYXRoK1wiX2ZcIitmcyk7IGZzKys7IH1cblx0ICAgIGVsc2UgaWYoYy5ub2RlTmFtZSA9PSBcImxcIil7IHRoaXMuYWRkX3BhdGhzKGMsIHBhdGgrXCJfbFwiK2xzKTsgbHMrKzsgfVxuXHQgICAgZWxzZSBpZihjLm5vZGVOYW1lID09IFwiZVwiKXsgdGhpcy5hZGRfcGF0aHMoYywgcGF0aCtcIl9lXCIrZXMpOyBlcysrOyB9XG5cdH1cbiAgICB9XG59XG5cbkd1cHB5LnByb3RvdHlwZS5hZGRfY2xhc3Nlc19jdXJzb3JzID0gZnVuY3Rpb24obixwYXRoKXtcbiAgICAvL0d1cHB5LmxvZygzLFwiQlwiLG4ubm9kZU5hbWUsbi5maXJzdENoaWxkLm5vZGVOYW1lKVxuICAgIGlmKG4ubm9kZU5hbWUgPT0gXCJlXCIpe1xuXHR2YXIgdGV4dCA9IG4uZmlyc3RDaGlsZC5ub2RlVmFsdWU7XG5cdC8vR3VwcHkubG9nKDMsXCJUXCIsdGV4dCk7XG5cdGFucyA9IFwiXCI7XG5cdHZhciBzZWxfY3Vyc29yO1xuXHR2YXIgdGV4dF9ub2RlID0gdGhpcy5pc190ZXh0KG4pO1xuXHQvL0d1cHB5LmxvZyg0LCBcIlNTU1wiLCB0aGlzLnNlbF9zdGF0dXMsIEd1cHB5LlNFTF9DVVJTT1JfQVRfU1RBUlQsIEd1cHB5LlNFTF9DVVJTT1JfQVRfRU5ELCB0aGlzLmN1cnJlbnQsIHRoaXMuY2FyZXQsIHRoaXMuc2VsX3N0YXJ0LCB0aGlzLnNlbF9lbmQpO1xuXHRpZih0aGlzLnNlbF9zdGF0dXMgPT0gR3VwcHkuU0VMX0NVUlNPUl9BVF9TVEFSVCkgc2VsX2N1cnNvciA9IHRoaXMuc2VsX2VuZDtcblx0aWYodGhpcy5zZWxfc3RhdHVzID09IEd1cHB5LlNFTF9DVVJTT1JfQVRfRU5EKSBzZWxfY3Vyc29yID0gdGhpcy5zZWxfc3RhcnQ7XG5cdGlmKHRoaXMuc2VsX3N0YXR1cyAhPSBHdXBweS5TRUxfTk9ORSl7XG5cdCAgICB2YXIgc2VsX2NhcmV0X3RleHQgPSB0aGlzLmlzX3NtYWxsKHNlbF9jdXJzb3Iubm9kZSkgPyBHdXBweS5rYi5TTUFMTF9TRUxfQ0FSRVQgOiBHdXBweS5rYi5TRUxfQ0FSRVQ7XG5cdCAgICBpZighdGV4dF9ub2RlICYmIHRleHQubGVuZ3RoID09IDAgJiYgbi5wYXJlbnROb2RlLmNoaWxkRWxlbWVudENvdW50ID4gMSl7XG5cdFx0c2VsX2NhcmV0X3RleHQgPSBcIlxcXFxjb2xvcntibHVlfXtcXFxceG1sQ2xhc3N7Z3VwcHlfZWx0IGd1cHB5X2JsYW5rIGd1cHB5X2xvY19cIituLmdldEF0dHJpYnV0ZShcInBhdGhcIikrXCJfMH17XCIrc2VsX2NhcmV0X3RleHQrXCJ9fVwiO1xuXHQgICAgfVxuXHQgICAgZWxzZXtcblx0XHRzZWxfY2FyZXRfdGV4dCA9IFwiXFxcXGNvbG9ye2JsdWV9e1wiK3NlbF9jYXJldF90ZXh0K1wifVwiO1xuXHQgICAgfVxuXHQgICAgaWYodGhpcy5zZWxfc3RhdHVzID09IEd1cHB5LlNFTF9DVVJTT1JfQVRfRU5EKSBzZWxfY2FyZXRfdGV4dCA9IHRleHRfbm9kZSA/IFwiW1wiIDogc2VsX2NhcmV0X3RleHQgKyBcIlxcXFxjb2xvcntcIitHdXBweS5rYi5TRUxfQ09MT1IrXCJ9e1wiO1xuXHQgICAgaWYodGhpcy5zZWxfc3RhdHVzID09IEd1cHB5LlNFTF9DVVJTT1JfQVRfU1RBUlQpIHNlbF9jYXJldF90ZXh0ID0gdGV4dF9ub2RlID8gXCJdXCIgOiBcIn1cIiArIHNlbF9jYXJldF90ZXh0O1xuXHR9XG5cdHZhciBjYXJldF90ZXh0ID0gXCJcIjtcblx0dmFyIHRlbXBfY2FyZXRfdGV4dCA9IFwiXCI7XG5cdGlmKHRleHQubGVuZ3RoID09IDApe1xuXHQgICAgaWYodGV4dF9ub2RlKSBjYXJldF90ZXh0ID0gXCJbXVwiO1xuXHQgICAgZWxzZSBpZihuLnBhcmVudE5vZGUuY2hpbGRFbGVtZW50Q291bnQgPT0gMSl7XG5cdFx0aWYodGhpcy5jdXJyZW50ID09IG4pe1xuXHRcdCAgICB2YXIgYmxhbmtfY2FyZXQgPSB0aGlzLmJsYW5rX2NhcmV0IHx8ICh0aGlzLmlzX3NtYWxsKHRoaXMuY3VycmVudCkgPyBHdXBweS5rYi5TTUFMTF9DQVJFVCA6IEd1cHB5LmtiLkNBUkVUKTtcblx0XHQgICAgYW5zID0gXCJcXFxcY29sb3J7cmVkfXtcXFxceG1sQ2xhc3N7bWFpbl9jdXJzb3IgZ3VwcHlfZWx0IGd1cHB5X2JsYW5rIGd1cHB5X2xvY19cIituLmdldEF0dHJpYnV0ZShcInBhdGhcIikrXCJfMFwiK1wifXtcIitibGFua19jYXJldCtcIn19XCI7XG5cdFx0fVxuXHRcdGVsc2UgaWYodGhpcy50ZW1wX2N1cnNvci5ub2RlID09IG4pXG5cdFx0ICAgIGFucyA9IFwiXFxcXGNvbG9ye2dyYXl9e1xcXFx4bWxDbGFzc3tndXBweV9lbHQgZ3VwcHlfYmxhbmsgZ3VwcHlfbG9jX1wiK24uZ2V0QXR0cmlidXRlKFwicGF0aFwiKStcIl8wXCIrXCJ9e1s/XX19XCI7XG5cdFx0ZWxzZVxuXHRcdCAgICBhbnMgPSBcIlxcXFxjb2xvcntibHVlfXtcXFxceG1sQ2xhc3N7Z3VwcHlfZWx0IGd1cHB5X2JsYW5rIGd1cHB5X2xvY19cIituLmdldEF0dHJpYnV0ZShcInBhdGhcIikrXCJfMFwiK1wifXtbP119fVwiO1xuXHQgICAgfVxuXHQgICAgZWxzZSBpZih0aGlzLnRlbXBfY3Vyc29yLm5vZGUgIT0gbiAmJiB0aGlzLmN1cnJlbnQgIT0gbiAmJiAoIShzZWxfY3Vyc29yKSB8fCBzZWxfY3Vyc29yLm5vZGUgIT0gbikpe1xuXHRcdC8vIFRoZXNlIGFyZSB0aGUgZW1wdHkgZSBlbGVtZW50cyBhdCBlaXRoZXIgZW5kIG9mXG5cdFx0Ly8gYSBjIG9yIG0gbm9kZSwgc3VjaCBhcyB0aGUgc3BhY2UgYmVmb3JlIGFuZFxuXHRcdC8vIGFmdGVyIGJvdGggdGhlIHNpbiBhbmQgeF4yIGluIHNpbih4XjIpXG5cdFx0Ly9cblx0XHQvLyBIZXJlLCB3ZSBhZGQgaW4gYSBzbWFsbCBlbGVtZW50IHNvIHRoYXQgd2UgY2FuXG5cdFx0Ly8gdXNlIHRoZSBtb3VzZSB0byBzZWxlY3QgdGhlc2UgYXJlYXNcblx0XHRhbnMgPSBcIlxcXFxwaGFudG9te1xcXFx4bWxDbGFzc3tndXBweV9lbHQgZ3VwcHlfYmxhbmsgZ3VwcHlfbG9jX1wiK24uZ2V0QXR0cmlidXRlKFwicGF0aFwiKStcIl8wXCIrXCJ9e1xcXFxjdXJzb3JbMC4xZXhdezFleH19fVwiO1xuXHQgICAgfVxuXHR9XG5cdEd1cHB5LmxvZygzLFwiU0VMXCIsc2VsX2N1cnNvcixzZWxfY2FyZXRfdGV4dCk7XG5cdGZvcih2YXIgaSA9IDA7IGkgPCB0ZXh0Lmxlbmd0aCsxOyBpKyspe1xuXHQgICAgaWYobiA9PSB0aGlzLmN1cnJlbnQgJiYgaSA9PSB0aGlzLmNhcmV0ICYmICh0ZXh0Lmxlbmd0aCA+IDAgfHwgbi5wYXJlbnROb2RlLmNoaWxkRWxlbWVudENvdW50ID4gMSkpe1xuXHRcdGlmKHRleHRfbm9kZSl7XG5cdFx0ICAgIGlmKHRoaXMuc2VsX3N0YXR1cyA9PSBHdXBweS5TRUxfQ1VSU09SX0FUX1NUQVJUKVxuXHRcdFx0Y2FyZXRfdGV4dCA9IFwiW1wiO1xuXHRcdCAgICBlbHNlIGlmKHRoaXMuc2VsX3N0YXR1cyA9PSBHdXBweS5TRUxfQ1VSU09SX0FUX0VORClcblx0XHRcdGNhcmV0X3RleHQgPSBcIl1cIjtcblx0XHQgICAgZWxzZVxuXHRcdFx0Y2FyZXRfdGV4dCA9IFwiW11cIjtcblx0XHR9XG5cdFx0ZWxzZXtcblx0XHQgICAgLy9HdXBweS5sb2coMyxcIkhFUkVcIik7XG5cdFx0ICAgIGNhcmV0X3RleHQgPSB0aGlzLmlzX3NtYWxsKHRoaXMuY3VycmVudCkgPyBHdXBweS5rYi5TTUFMTF9DQVJFVCA6IEd1cHB5LmtiLkNBUkVUO1xuXHRcdCAgICBpZih0ZXh0Lmxlbmd0aCA9PSAwKVxuXHRcdFx0Y2FyZXRfdGV4dCA9IFwiXFxcXGNvbG9ye3JlZH17XFxcXHhtbENsYXNze21haW5fY3Vyc29yIGd1cHB5X2VsdCBndXBweV9ibGFuayBndXBweV9sb2NfXCIrbi5nZXRBdHRyaWJ1dGUoXCJwYXRoXCIpK1wiXzB9e1wiK2NhcmV0X3RleHQrXCJ9fVwiO1xuXHRcdCAgICBlbHNle1xuXHRcdFx0Y2FyZXRfdGV4dCA9IFwiXFxcXGNvbG9ye3JlZH17XFxcXHhtbENsYXNze21haW5fY3Vyc29yfXtcIitjYXJldF90ZXh0K1wifX1cIlxuXHRcdCAgICB9XG5cdFx0ICAgIGlmKHRoaXMuc2VsX3N0YXR1cyA9PSBHdXBweS5TRUxfQ1VSU09SX0FUX1NUQVJUKVxuXHRcdFx0Y2FyZXRfdGV4dCA9IGNhcmV0X3RleHQgKyBcIlxcXFxjb2xvcntcIitHdXBweS5rYi5TRUxfQ09MT1IrXCJ9e1wiO1xuXHRcdCAgICBlbHNlIGlmKHRoaXMuc2VsX3N0YXR1cyA9PSBHdXBweS5TRUxfQ1VSU09SX0FUX0VORClcblx0XHRcdGNhcmV0X3RleHQgPSBcIn1cIiArIGNhcmV0X3RleHQ7XG5cdFx0fVxuXHRcdGFucyArPSBjYXJldF90ZXh0O1xuXHQgICAgfVxuXHQgICAgZWxzZSBpZihuID09IHRoaXMuY3VycmVudCAmJiBpID09IHRoaXMuY2FyZXQgJiYgdGV4dF9ub2RlKXtcblx0XHRhbnMgKz0gY2FyZXRfdGV4dDtcblx0ICAgIH1cblx0ICAgIGVsc2UgaWYodGhpcy5zZWxfc3RhdHVzICE9IEd1cHB5LlNFTF9OT05FICYmIHNlbF9jdXJzb3Iubm9kZSA9PSBuICYmIGkgPT0gc2VsX2N1cnNvci5jYXJldCl7XG5cdFx0YW5zICs9IHNlbF9jYXJldF90ZXh0O1xuXHQgICAgfVxuXHQgICAgZWxzZSBpZih0aGlzLnRlbXBfY3Vyc29yLm5vZGUgPT0gbiAmJiBpID09IHRoaXMudGVtcF9jdXJzb3IuY2FyZXQgJiYgKHRleHQubGVuZ3RoID4gMCB8fCBuLnBhcmVudE5vZGUuY2hpbGRFbGVtZW50Q291bnQgPiAxKSl7XG5cdFx0aWYodGV4dF9ub2RlKSBcblx0XHQgICAgdGVtcF9jYXJldF90ZXh0ID0gXCIuXCI7XG5cdFx0ZWxzZXtcblx0XHQgICAgdGVtcF9jYXJldF90ZXh0ID0gdGhpcy5pc19zbWFsbCh0aGlzLmN1cnJlbnQpID8gR3VwcHkua2IuVEVNUF9TTUFMTF9DQVJFVCA6IEd1cHB5LmtiLlRFTVBfQ0FSRVQ7XG5cdFx0ICAgIGlmKHRleHQubGVuZ3RoID09IDApe1xuXHRcdFx0dGVtcF9jYXJldF90ZXh0ID0gXCJcXFxcY29sb3J7Z3JheX17XFxcXHhtbENsYXNze2d1cHB5X2VsdCBndXBweV9ibGFuayBndXBweV9sb2NfXCIrbi5nZXRBdHRyaWJ1dGUoXCJwYXRoXCIpK1wiXzB9e1wiK3RlbXBfY2FyZXRfdGV4dCtcIn19XCI7XG5cdFx0ICAgIH1cblx0XHQgICAgZWxzZVxuXHRcdFx0dGVtcF9jYXJldF90ZXh0ID0gXCJcXFxcY29sb3J7Z3JheX17XCIrdGVtcF9jYXJldF90ZXh0K1wifVwiO1xuXHRcdH1cblx0XHRhbnMgKz0gdGVtcF9jYXJldF90ZXh0O1xuXHQgICAgfVxuXHQgICAgaWYoaSA8IHRleHQubGVuZ3RoKSBhbnMgKz0gXCJcXFxceG1sQ2xhc3N7Z3VwcHlfZWx0IGd1cHB5X2xvY19cIituLmdldEF0dHJpYnV0ZShcInBhdGhcIikrXCJfXCIraStcIn17XCIrdGV4dFtpXStcIn1cIjtcblx0fVxuXHRuLnNldEF0dHJpYnV0ZShcInJlbmRlclwiLCBhbnMpO1xuXHRuLnJlbW92ZUF0dHJpYnV0ZShcInBhdGhcIik7XG4gICAgfVxuICAgIGVsc2V7XG5cdGZvcih2YXIgYyA9IG4uZmlyc3RDaGlsZDsgYyAhPSBudWxsOyBjID0gYy5uZXh0U2libGluZyl7XG5cdCAgICBpZihjLm5vZGVOYW1lID09IFwiY1wiIHx8IGMubm9kZU5hbWUgPT0gXCJsXCIgfHwgYy5ub2RlTmFtZSA9PSBcImZcIiB8fCBjLm5vZGVOYW1lID09IFwiZVwiKXsgdGhpcy5hZGRfY2xhc3Nlc19jdXJzb3JzKGMpOyB9XG5cdH1cbiAgICB9XG59XG5cbkd1cHB5LnByb3RvdHlwZS5wb3N0X3JlbmRlcl9jbGVhbnVwID0gZnVuY3Rpb24obil7XG4gICAgaWYobi5ub2RlTmFtZSA9PSBcImVcIil7XG5cdG4ucmVtb3ZlQXR0cmlidXRlKFwicGF0aFwiKTtcblx0bi5yZW1vdmVBdHRyaWJ1dGUoXCJyZW5kZXJcIik7XG5cdG4ucmVtb3ZlQXR0cmlidXRlKFwiY3VycmVudFwiKTtcblx0bi5yZW1vdmVBdHRyaWJ1dGUoXCJ0ZW1wXCIpO1xuICAgIH1cbiAgICBlbHNle1xuXHRmb3IodmFyIGMgPSBuLmZpcnN0Q2hpbGQ7IGMgIT0gbnVsbDsgYyA9IGMubmV4dFNpYmxpbmcpe1xuXHQgICAgaWYoYy5ub2RlVHlwZSA9PSAxKXsgdGhpcy5wb3N0X3JlbmRlcl9jbGVhbnVwKGMpOyB9XG5cdH1cbiAgICB9XG59XG5cbkd1cHB5LnByb3RvdHlwZS5yZW5kZXJfbm9kZSA9IGZ1bmN0aW9uKG4sdCl7XG4gICAgLy8gQWxsIHRoZSBpbnRlcmVzdGluZyB3b3JrIGlzIGRvbmUgYnkgdHJhbnNmb3JtLiAgVGhpcyBmdW5jdGlvbiBqdXN0IGFkZHMgaW4gdGhlIGN1cnNvciBhbmQgc2VsZWN0aW9uLXN0YXJ0IGN1cnNvclxuICAgIC8vR3VwcHkubG9nKDQsXCJsb2NhdGlvblwiLHRoaXMuY2FyZXQsXCI9Y2FyZXRcIix0aGlzLmN1cnJlbnQsdGhpcy5jdXJyZW50LmZpcnN0Q2hpbGQubm9kZVZhbHVlLnNsaWNlKDAsdGhpcy5jYXJldCksXCJiYlwiLHRoaXMuY3VycmVudC5maXJzdENoaWxkLm5vZGVWYWx1ZS5zbGljZSh0aGlzLmNhcmV0K0d1cHB5LmtiLkNBUkVULmxlbmd0aCkpO1xuICAgIHZhciBvdXRwdXQgPSBcIlwiO1xuICAgIGlmKHQgPT0gXCJsYXRleFwiKXtcblx0dGhpcy5hZGRfcGF0aHModGhpcy5iYXNlLmRvY3VtZW50RWxlbWVudCxcIm1cIik7XG5cdHRoaXMuYWRkX2NsYXNzZXNfY3Vyc29ycyh0aGlzLmJhc2UuZG9jdW1lbnRFbGVtZW50KTtcblx0dGhpcy5jdXJyZW50LnNldEF0dHJpYnV0ZShcImN1cnJlbnRcIixcInllc1wiKTtcblx0aWYodGhpcy50ZW1wX2N1cnNvci5ub2RlKSB0aGlzLnRlbXBfY3Vyc29yLm5vZGUuc2V0QXR0cmlidXRlKFwidGVtcFwiLFwieWVzXCIpO1xuXHRvdXRwdXQgPSBHdXBweS50cmFuc2Zvcm0odCwgdGhpcy5iYXNlLCB0cnVlKTtcblx0dGhpcy5wb3N0X3JlbmRlcl9jbGVhbnVwKHRoaXMuYmFzZS5kb2N1bWVudEVsZW1lbnQpO1xuXHRHdXBweS5sb2coNCxcInJlbmRlcmVkIG91dHB1dFwiLG91dHB1dCk7XG5cdG91dHB1dCA9IG91dHB1dC5yZXBsYWNlKG5ldyBSZWdFeHAoJyZhbXA7JywnZycpLCAnJicpO1xuXHRyZXR1cm4gb3V0cHV0O1xuICAgIH1cbiAgICBlbHNle1xuXHRvdXRwdXQgPSBHdXBweS50cmFuc2Zvcm0odCwgdGhpcy5iYXNlKTtcbiAgICB9XG4gICAgLy9HdXBweS5sb2coMyxcImNjXCIsY2FyZXQsXCI9Y2FyZXRcIixjdXJyZW50LmZpcnN0Q2hpbGQubm9kZVZhbHVlLGN1cnJlbnQuZmlyc3RDaGlsZC5ub2RlVmFsdWUuc2xpY2UoMCxjYXJldCksXCJiYlwiLGN1cnJlbnQuZmlyc3RDaGlsZC5ub2RlVmFsdWUuc2xpY2UoY2FyZXQrQ0FSRVQubGVuZ3RoKSk7XG4gICAgLy9pZih0ID09IFwibGF0ZXhcIikgY3VycmVudC5maXJzdENoaWxkLm5vZGVWYWx1ZSA9IChjYXJldCA9PSAwID8gXCJcIiA6IGN1cnJlbnQuZmlyc3RDaGlsZC5ub2RlVmFsdWUuc2xpY2UoMCxjYXJldCkpK2N1cnJlbnQuZmlyc3RDaGlsZC5ub2RlVmFsdWUuc2xpY2UoY2FyZXQrQ0FSRVQubGVuZ3RoKTtcbiAgICByZXR1cm4gb3V0cHV0XG59XG5cbkd1cHB5LnByb3RvdHlwZS5zZXRfc2VsX3N0YXJ0ID0gZnVuY3Rpb24oKXtcbiAgICB0aGlzLnNlbF9zdGFydCA9IHtcIm5vZGVcIjp0aGlzLmN1cnJlbnQsIFwiY2FyZXRcIjp0aGlzLmNhcmV0fTtcbn1cblxuR3VwcHkucHJvdG90eXBlLnNldF9zZWxfZW5kID0gZnVuY3Rpb24oKXtcbiAgICB0aGlzLnNlbF9lbmQgPSB7XCJub2RlXCI6dGhpcy5jdXJyZW50LCBcImNhcmV0XCI6dGhpcy5jYXJldH07XG59XG5cbkd1cHB5LnByb3RvdHlwZS5uZXh0X3NpYmxpbmcgPSBmdW5jdGlvbihuKXtcbiAgICBpZihuID09IG51bGwpIHJldHVybiBudWxsO1xuICAgIHZhciBjID0gbi5wYXJlbnROb2RlLm5leHRTaWJsaW5nO1xuICAgIHdoaWxlKGMgIT0gbnVsbCAmJiBjLm5vZGVOYW1lICE9IFwiZVwiKSBjID0gYy5uZXh0U2libGluZztcbiAgICBpZihjID09IG51bGwpIHJldHVybiBudWxsXG4gICAgZWxzZSByZXR1cm4gYy5maXJzdENoaWxkO1xufVxuXG5HdXBweS5wcm90b3R5cGUucHJldl9zaWJsaW5nID0gZnVuY3Rpb24obil7XG4gICAgaWYobiA9PSBudWxsKSByZXR1cm4gbnVsbDtcbiAgICB2YXIgYyA9IG4ucGFyZW50Tm9kZS5wcmV2aW91c1NpYmxpbmc7XG4gICAgd2hpbGUoYyAhPSBudWxsICYmIGMubm9kZU5hbWUgIT0gXCJlXCIpIGMgPSBjLnByZXZpb3VzU2libGluZztcbiAgICBpZihjID09IG51bGwpIHJldHVybiBudWxsXG4gICAgZWxzZSByZXR1cm4gYy5maXJzdENoaWxkO1xufVxuXG5HdXBweS5wcm90b3R5cGUuZG93bl9mcm9tX2YgPSBmdW5jdGlvbigpe1xuICAgIHZhciBubiA9IHRoaXMuY3VycmVudC5maXJzdENoaWxkO1xuICAgIHdoaWxlKG5uICE9IG51bGwgJiYgbm4ubm9kZU5hbWUgIT0gJ2MnICYmIG5uLm5vZGVOYW1lICE9ICdsJykgbm4gPSBubi5uZXh0U2libGluZztcbiAgICBpZihubiAhPSBudWxsKXtcblx0d2hpbGUobm4ubm9kZU5hbWUgPT0gJ2wnKSBubiA9IG5uLmZpcnN0Q2hpbGQ7XG5cdHRoaXMuY3VycmVudCA9IG5uLmZpcnN0Q2hpbGQ7XG4gICAgfVxufVxuXG5HdXBweS5wcm90b3R5cGUuZG93bl9mcm9tX2ZfdG9fYmxhbmsgPSBmdW5jdGlvbigpe1xuICAgIHZhciBubiA9IHRoaXMuY3VycmVudC5maXJzdENoaWxkO1xuICAgIHdoaWxlKG5uICE9IG51bGwgJiYgIShubi5ub2RlTmFtZSA9PSAnYycgJiYgbm4uY2hpbGRyZW4ubGVuZ3RoID09IDEgJiYgbm4uZmlyc3RDaGlsZC5maXJzdENoaWxkLm5vZGVWYWx1ZSA9PSBcIlwiKSl7XG5cdEd1cHB5LmxvZygzLFwiREZGVEJcIixubik7XG5cdG5uID0gbm4ubmV4dFNpYmxpbmc7XG4gICAgfVxuICAgIGlmKG5uICE9IG51bGwpe1xuXHQvL1Nhbml0eSBjaGVjazpcblx0XG5cdHdoaWxlKG5uLm5vZGVOYW1lID09ICdsJykgbm4gPSBubi5maXJzdENoaWxkO1xuXHRpZihubi5ub2RlTmFtZSAhPSAnYycgfHwgbm4uZmlyc3RDaGlsZC5ub2RlTmFtZSAhPSAnZScpe1xuXHQgICAgdGhpcy5wcm9ibGVtKCdkZmZ0YicpO1xuXHQgICAgcmV0dXJuO1xuXHR9XG5cdHRoaXMuY3VycmVudCA9IG5uLmZpcnN0Q2hpbGQ7XG4gICAgfVxuICAgIGVsc2UgdGhpcy5kb3duX2Zyb21fZigpO1xufVxuXG5HdXBweS5wcm90b3R5cGUuZGVsZXRlX2Zyb21fZiA9IGZ1bmN0aW9uKHRvX2luc2VydCl7XG4gICAgdmFyIG4gPSB0aGlzLmN1cnJlbnQ7XG4gICAgdmFyIHAgPSBuLnBhcmVudE5vZGU7XG4gICAgdmFyIHByZXYgPSBuLnByZXZpb3VzU2libGluZztcbiAgICB2YXIgbmV4dCA9IG4ubmV4dFNpYmxpbmc7XG4gICAgdmFyIG1pZGRsZSA9IHRvX2luc2VydCB8fCBcIlwiO1xuICAgIHZhciBuZXdfbm9kZSA9IHRoaXMubWFrZV9lKHByZXYuZmlyc3RDaGlsZC50ZXh0Q29udGVudCArIG1pZGRsZSArIG5leHQuZmlyc3RDaGlsZC50ZXh0Q29udGVudCk7XG4gICAgdGhpcy5jdXJyZW50ID0gbmV3X25vZGU7XG4gICAgdGhpcy5jYXJldCA9IHByZXYuZmlyc3RDaGlsZC50ZXh0Q29udGVudC5sZW5ndGg7XG4gICAgcC5pbnNlcnRCZWZvcmUobmV3X25vZGUsIHByZXYpO1xuICAgIHAucmVtb3ZlQ2hpbGQocHJldik7XG4gICAgcC5yZW1vdmVDaGlsZChuKTtcbiAgICBwLnJlbW92ZUNoaWxkKG5leHQpO1xufVxuXG5HdXBweS5wcm90b3R5cGUubmV4dF9ub2RlX2Zyb21fZSA9IGZ1bmN0aW9uKG4pe1xuICAgIGlmKG4gPT0gbnVsbCB8fCBuLm5vZGVOYW1lICE9ICdlJykgcmV0dXJuIG51bGw7XG4gICAgLy8gSWYgd2UgaGF2ZSBhIG5leHQgc2libGluZyBmIG5vZGUsIHVzZSB0aGF0OlxuICAgIGlmKG4ubmV4dFNpYmxpbmcgIT0gbnVsbCl7XG5cdGlmKG4ubmV4dFNpYmxpbmcubm9kZU5hbWUgIT0gJ2YnKXtcblx0ICAgIHRoaXMucHJvYmxlbSgnbm5mZTMnKTtcblx0ICAgIHJldHVybiBudWxsO1xuXHR9XG5cdEd1cHB5LmxvZygzLFwibmV4dFwiKTtcblx0dmFyIG5jID0gbi5uZXh0U2libGluZy5maXJzdENoaWxkO1xuXHR3aGlsZShuYyAhPSBudWxsKXtcblx0ICAgIGlmKG5jLm5vZGVOYW1lID09ICdjJylcblx0XHRyZXR1cm4gbmMuZmlyc3RDaGlsZDtcblx0ICAgIGVsc2UgaWYobmMubm9kZU5hbWUgPT0gJ2wnKXtcblx0XHR3aGlsZShuYy5ub2RlTmFtZSA9PSAnbCcpIG5jID0gbmMuZmlyc3RDaGlsZDtcblx0XHRyZXR1cm4gbmMuZmlyc3RDaGlsZDtcblx0ICAgIH1cblx0ICAgIG5jID0gbmMubmV4dFNpYmxpbmdcblx0fVxuXHRyZXR1cm4gbi5uZXh0U2libGluZy5uZXh0U2libGluZztcbiAgICB9XG4gICAgLy8gSWYgbm90LCB0aGVuIHdlJ3JlIGVpdGhlciBhdCB0aGUgdG9wIGxldmVsIG9yIG91ciBwYXJlbnQgaXMgYSBjXG4gICAgLy8gY2hpbGQgb2YgYW4gZiBvciBsIG5vZGUsIGF0IHdoaWNoIHBvaW50IHdlIHNob3VsZCBsb29rIHRvIHNlZSBvdXJcbiAgICAvLyBwYXJlbnQgaGFzIGEgbmV4dCBzaWJsaW5nIGMgbm9kZTogXG4gICAgaWYobi5wYXJlbnROb2RlLm5leHRTaWJsaW5nICE9IG51bGwgJiYgbi5wYXJlbnROb2RlLm5leHRTaWJsaW5nLm5vZGVOYW1lID09ICdjJyl7XG5cdHZhciBubiA9IG4ucGFyZW50Tm9kZS5uZXh0U2libGluZy5maXJzdENoaWxkO1xuXHQvL0Fub3RoZXIgc2FuaXR5IGNoZWNrOlxuXHRpZihubi5ub2RlTmFtZSAhPSAnZScpe1xuXHQgICAgdGhpcy5wcm9ibGVtKCdubmZlMScpO1xuXHQgICAgcmV0dXJuIG51bGxcblx0fVxuXHRHdXBweS5sb2coMyxcInBhcmVudC5uZXh0LmNoaWxkXCIpXG5cdHJldHVybiBubjtcbiAgICB9XG4gICAgLy8gSWYgd2UncmUgYWN0dWFsbHkgYXQgdGhlIHRvcCBsZXZlbCwgdGhlbiBkbyBub3RoaW5nOiBcbiAgICBpZihuLnBhcmVudE5vZGUucGFyZW50Tm9kZSA9PSBudWxsKSByZXR1cm4gbnVsbDtcbiAgICAvL0Fub3RoZXIgc2FuaXR5IGNoZWNrOiBcbiAgICBpZihuLnBhcmVudE5vZGUucGFyZW50Tm9kZS5ub2RlTmFtZSAhPSAnZicpe1xuXHR0aGlzLnByb2JsZW0oJ25uZmUyJyk7XG5cdHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4gbi5wYXJlbnROb2RlLnBhcmVudE5vZGUubmV4dFNpYmxpbmc7XG59XG5cbkd1cHB5LnByb3RvdHlwZS5wcmV2X25vZGVfZnJvbV9lID0gZnVuY3Rpb24obil7XG4gICAgR3VwcHkubG9nKDMsbi5wcmV2aW91c1NpYmxpbmcpO1xuICAgIGlmKG4gPT0gbnVsbCB8fCBuLm5vZGVOYW1lICE9ICdlJykgcmV0dXJuIG51bGw7XG4gICAgaWYobi5wcmV2aW91c1NpYmxpbmcgIT0gbnVsbCl7XG5cdGlmKG4ucHJldmlvdXNTaWJsaW5nLm5vZGVOYW1lICE9ICdmJyl7XG5cdCAgICB0aGlzLnByb2JsZW0oJ3BuZmUzJyk7XG5cdCAgICByZXR1cm4gbnVsbDtcblx0fVxuXHR2YXIgbmMgPSBuLnByZXZpb3VzU2libGluZy5sYXN0Q2hpbGQ7XG5cdHdoaWxlKG5jICE9IG51bGwpe1xuXHQgICAgaWYobmMubm9kZU5hbWUgPT0gJ2MnKVxuXHRcdHJldHVybiBuYy5sYXN0Q2hpbGQ7XG5cdCAgICBuYyA9IG5jLnByZXZpb3VzU2libGluZ1xuXHR9XG5cdHJldHVybiBuLnByZXZpb3VzU2libGluZy5wcmV2aW91c1NpYmxpbmc7XG4gICAgfVxuICAgIGVsc2UgaWYobi5wYXJlbnROb2RlLnByZXZpb3VzU2libGluZyAhPSBudWxsICYmIG4ucGFyZW50Tm9kZS5wcmV2aW91c1NpYmxpbmcubm9kZU5hbWUgPT0gJ2MnKXtcblx0dmFyIG5uID0gbi5wYXJlbnROb2RlLnByZXZpb3VzU2libGluZy5sYXN0Q2hpbGQ7XG5cdC8vQW5vdGhlciBzYW5pdHkgY2hlY2s6XG5cdGlmKG5uLm5vZGVOYW1lICE9ICdlJyl7XG5cdCAgICB0aGlzLnByb2JsZW0oJ3BuZmUxJyk7XG5cdCAgICByZXR1cm4gbnVsbFxuXHR9XG5cdHJldHVybiBubjtcbiAgICB9XG4gICAgZWxzZSBpZihuLnBhcmVudE5vZGUucGFyZW50Tm9kZSA9PSBudWxsKSByZXR1cm4gbnVsbDtcbiAgICAvL0Fub3RoZXIgc2FuaXR5IGNoZWNrOiBcbiAgICBpZihuLnBhcmVudE5vZGUucGFyZW50Tm9kZS5ub2RlTmFtZSAhPSAnZicpe1xuXHR0aGlzLnByb2JsZW0oJ3BuZmUyJyk7XG5cdHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4gbi5wYXJlbnROb2RlLnBhcmVudE5vZGUucHJldmlvdXNTaWJsaW5nO1xufVxuXG5HdXBweS5wcm90b3R5cGUuc3ltYm9sX3RvX25vZGUgPSBmdW5jdGlvbihzeW1fbmFtZSwgY29udGVudCl7XG4gICAgLy8gc3ltX25hbWUgaXMgYSBrZXkgaW4gdGhlIHN5bWJvbHMgZGljdGlvbmFyeVxuICAgIC8vXG4gICAgLy8gY29udGVudCBpcyBhIGxpc3Qgb2Ygbm9kZXMgdG8gaW5zZXJ0XG4gICAgXG4gICAgdmFyIHMgPSBHdXBweS5rYi5zeW1ib2xzW3N5bV9uYW1lXTtcbiAgICB2YXIgZiA9IHRoaXMuYmFzZS5jcmVhdGVFbGVtZW50KFwiZlwiKTtcbiAgICBpZihcInR5cGVcIiBpbiBzKSBmLnNldEF0dHJpYnV0ZShcInR5cGVcIixzW1widHlwZVwiXSlcbiAgICBpZihzWydjaGFyJ10pIGYuc2V0QXR0cmlidXRlKFwiY1wiLFwieWVzXCIpO1xuICAgIFxuICAgIHZhciBmaXJzdF9yZWYgPSAtMTtcbiAgICB2YXIgcmVmc19jb3VudCA9IDA7XG4gICAgdmFyIGxpc3RzID0ge31cbiAgICB2YXIgZmlyc3Q7XG5cbiAgICAvLyBNYWtlIHRoZSBiIG5vZGVzIGZvciByZW5kZXJpbmcgZWFjaCBvdXRwdXQgICAgXG4gICAgZm9yKHZhciB0IGluIHNbXCJvdXRwdXRcIl0pe1xuXHR2YXIgYiA9IHRoaXMuYmFzZS5jcmVhdGVFbGVtZW50KFwiYlwiKTtcblx0Yi5zZXRBdHRyaWJ1dGUoXCJwXCIsdCk7XG5cblx0dmFyIG91dCA9IHNbXCJvdXRwdXRcIl1bdF07XG5cdGlmKHR5cGVvZiBvdXQgPT0gJ3N0cmluZycpe1xuXHQgICAgb3V0ID0gb3V0LnNwbGl0KC8oXFx7XFwkWzAtOV0rKD86XFx7W159XVxcfSkqXFx9KS9nKTtcblx0ICAgIGZvcih2YXIgaSA9IDA7IGkgPCBvdXQubGVuZ3RoOyBpKyspe1xuXHRcdG0gPSBvdXRbaV0ubWF0Y2goL15cXHtcXCQoWzAtOV0rKSgoPzpcXHtbXn1dXFx9KSopXFx9JC8pO1xuXHRcdGlmKG0pe1xuXHRcdCAgICBvdXRbaV0gPSB7J3JlZic6cGFyc2VJbnQobVsxXSl9O1xuXHRcdCAgICBpZihtWzJdLmxlbmd0aCA+IDApe1xuXHRcdFx0bW0gPSBtWzJdLm1hdGNoKC9cXHtbXn1dKlxcfS9nKTtcblx0XHRcdG91dFtpXVsnZCddID0gbW0ubGVuZ3RoO1xuXHRcdFx0Zm9yKHZhciBqID0gMDsgaiA8IG1tLmxlbmd0aDsgaisrKXtcblx0XHRcdCAgICBvdXRbaV1bJ3NlcCcral0gPSBtbVtqXS5zdWJzdHJpbmcoMSxtbVtqXS5sZW5ndGgtMSk7XG5cdFx0XHR9XG5cdFx0ICAgIH1cblx0XHR9XG5cdCAgICB9XG5cdH1cblx0Zm9yKHZhciBpID0gMDsgaSA8IG91dC5sZW5ndGg7IGkrKyl7XG5cdCAgICBpZih0eXBlb2Ygb3V0W2ldID09ICdzdHJpbmcnIHx8IG91dFtpXSBpbnN0YW5jZW9mIFN0cmluZyl7XG5cdFx0dmFyIG50ID0gdGhpcy5iYXNlLmNyZWF0ZVRleHROb2RlKG91dFtpXSk7XG5cdFx0Yi5hcHBlbmRDaGlsZChudCk7XG5cdCAgICB9XG5cdCAgICBlbHNle1xuXHRcdHZhciBudCA9IHRoaXMuYmFzZS5jcmVhdGVFbGVtZW50KFwiclwiKTtcblx0XHRmb3IodmFyIGF0dHIgaW4gb3V0W2ldKXtcblx0XHQgICAgbnQuc2V0QXR0cmlidXRlKGF0dHIsb3V0W2ldW2F0dHJdKTtcblx0XHR9XG5cdFx0aWYodCA9PSAnbGF0ZXgnKSB7XG5cdFx0ICAgIGlmKGZpcnN0X3JlZiA9PSAtMSkgZmlyc3RfcmVmID0gb3V0W2ldWydyZWYnXTtcblx0XHQgICAgaWYoJ2QnIGluIG91dFtpXSkgbGlzdHNbcmVmc19jb3VudF0gPSBvdXRbaV1bJ2QnXVxuXHRcdCAgICByZWZzX2NvdW50Kys7XG5cdFx0fVxuXHRcdGIuYXBwZW5kQ2hpbGQobnQpO1xuXHQgICAgfVxuXHR9XG5cdGYuYXBwZW5kQ2hpbGQoYik7XG4gICAgfVxuICAgIC8vIE5vdyBtYWtlIHRoZSBjIG5vZGVzIGZvciBzdG9yaW5nIHRoZSBjb250ZW50XG4gICAgZm9yKHZhciBpID0gMDsgaSA8IHJlZnNfY291bnQ7IGkrKyl7XG5cdHZhciBuYyA9IHRoaXMuYmFzZS5jcmVhdGVFbGVtZW50KFwiY1wiKTtcblx0aWYoaSBpbiBjb250ZW50KXtcblx0ICAgIHZhciBub2RlX2xpc3QgPSBjb250ZW50W2ldO1xuXHQgICAgZm9yKHZhciBzZSA9IDA7IHNlIDwgbm9kZV9saXN0Lmxlbmd0aDsgc2UrKyl7XG5cdFx0bmMuYXBwZW5kQ2hpbGQobm9kZV9saXN0W3NlXS5jbG9uZU5vZGUodHJ1ZSkpO1xuXHQgICAgfVxuXHR9XG5cdGVsc2UgbmMuYXBwZW5kQ2hpbGQodGhpcy5tYWtlX2UoXCJcIikpO1xuXHQvL0d1cHB5LmxvZygzLHJlZnNfY291bnQsZmlyc3RfcmVmLGksbmUpO1xuXHRpZihpKzEgPT0gZmlyc3RfcmVmKSBmaXJzdCA9IG5jLmxhc3RDaGlsZDtcblx0Zm9yKHZhciBhIGluIHNbJ2F0dHJzJ10pXG5cdCAgICBpZihzWydhdHRycyddW2FdW2ldICE9IDApIG5jLnNldEF0dHJpYnV0ZShhLHNbJ2F0dHJzJ11bYV1baV0pO1xuXHRpZihpIGluIGxpc3RzKXtcblx0ICAgIHZhciBubCA9IHRoaXMuYmFzZS5jcmVhdGVFbGVtZW50KFwibFwiKTtcblx0ICAgIG5sLnNldEF0dHJpYnV0ZSgnZCcsbGlzdHNbaV0pO1xuXHQgICAgZm9yKHZhciBqID0gMDsgaiA8IGxpc3RzW2ldOyBqKyspe1xuXHRcdG5sLnNldEF0dHJpYnV0ZSgnZCcraixcIjFcIik7XG5cdCAgICB9XG5cdCAgICBubC5hcHBlbmRDaGlsZChuYyk7XG5cdCAgICBmLmFwcGVuZENoaWxkKG5sKTtcblx0fVxuXHRlbHNlIGYuYXBwZW5kQ2hpbGQobmMpO1xuICAgIH1cbiAgICBHdXBweS5sb2coMyxcIkZGXCIsZik7XG4gICAgcmV0dXJuIHtcImZcIjpmLCBcImZpcnN0XCI6Zmlyc3R9O1xufVxuXG5HdXBweS5wcm90b3R5cGUuaXNfdGV4dCA9IGZ1bmN0aW9uKG5uKXtcbiAgICByZXR1cm4gKG5uLnBhcmVudE5vZGUuZ2V0QXR0cmlidXRlKFwibW9kZVwiKSAmJiBubi5wYXJlbnROb2RlLmdldEF0dHJpYnV0ZShcIm1vZGVcIikgPT0gXCJ0ZXh0XCIpXG59XG5cbkd1cHB5LnByb3RvdHlwZS5pc19zbWFsbCA9IGZ1bmN0aW9uKG5uKXtcbiAgICB2YXIgbiA9IG5uLnBhcmVudE5vZGU7XG4gICAgd2hpbGUobiAhPSBudWxsICYmIG4ubm9kZU5hbWUgIT0gJ20nKXtcblx0aWYobi5nZXRBdHRyaWJ1dGUoXCJzaXplXCIpID09IFwic1wiKXtcblx0ICAgIHJldHVybiB0cnVlO1xuXHR9XG5cdG4gPSBuLnBhcmVudE5vZGVcblx0d2hpbGUobiAhPSBudWxsICYmIG4ubm9kZU5hbWUgIT0gJ2MnKVxuXHQgICAgbiA9IG4ucGFyZW50Tm9kZTtcbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xufVxuXG5HdXBweS5wcm90b3R5cGUuaW5zZXJ0X3N5bWJvbCA9IGZ1bmN0aW9uKHN5bV9uYW1lKXtcbiAgICB2YXIgcyA9IEd1cHB5LmtiLnN5bWJvbHNbc3ltX25hbWVdO1xuICAgIGlmKHRoaXMuaXNfYmxhY2tsaXN0ZWQoc1sndHlwZSddKSl7XG5cdEd1cHB5LmxvZygzLFwiQkxBQ0tMSVNURURcIik7XG5cdHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgdmFyIG5vZGVfbGlzdCA9IHt9O1xuICAgIHZhciBjb250ZW50ID0ge307XG4gICAgdmFyIGxlZnRfcGllY2UscmlnaHRfcGllY2U7XG4gICAgdmFyIGN1ciA9IHNbJ2N1cnJlbnQnXSA9PSBudWxsID8gMCA6IHBhcnNlSW50KHNbJ2N1cnJlbnQnXSk7XG4gICAgdmFyIHRvX3JlbW92ZSA9IFtdO1xuICAgIHZhciB0b19yZXBsYWNlID0gbnVsbDtcbiAgICB2YXIgcmVwbGFjZV9mID0gZmFsc2U7XG4gICAgXG4gICAgR3VwcHkubG9nKDMsXCJjdXJcIixjdXIpO1xuICAgIFxuICAgIGlmKGN1ciA+IDApe1xuXHRjdXItLTtcblx0R3VwcHkubG9nKDMsY3VyKTtcblx0aWYodGhpcy5zZWxfc3RhdHVzICE9IEd1cHB5LlNFTF9OT05FKXtcblx0ICAgIEd1cHB5LmxvZygzLFwiU0VMXCIsdGhpcy5jdXJyZW50KTtcblx0ICAgIHZhciBzZWwgPSB0aGlzLnNlbF9nZXQoKTtcblx0ICAgIHNlbF9wYXJlbnQgPSBzZWwuaW52b2x2ZWRbMF0ucGFyZW50Tm9kZTtcblx0ICAgIEd1cHB5LmxvZygzLFwiU0NDXCIsIHNlbCwgXCJcXG5BQkNcIiwgc2VsLmludm9sdmVkWzBdLCBzZWxfcGFyZW50LCBzZWwubm9kZV9saXN0LCB0aGlzLmN1cnJlbnQpO1xuXHQgICAgdG9fcmVtb3ZlID0gc2VsLmludm9sdmVkO1xuXHQgICAgbGVmdF9waWVjZSA9IHRoaXMubWFrZV9lKHNlbC5yZW1uYW50LmZpcnN0Q2hpbGQubm9kZVZhbHVlLnNsaWNlKDAsdGhpcy5zZWxfc3RhcnQuY2FyZXQpKTtcblx0ICAgIHJpZ2h0X3BpZWNlID0gdGhpcy5tYWtlX2Uoc2VsLnJlbW5hbnQuZmlyc3RDaGlsZC5ub2RlVmFsdWUuc2xpY2UodGhpcy5zZWxfc3RhcnQuY2FyZXQpKTtcblx0ICAgIGNvbnRlbnRbY3VyXSA9IHNlbC5ub2RlX2xpc3Q7XG5cdCAgICBHdXBweS5sb2coMyxcIkRPTkVfU0VMXCIsbGVmdF9waWVjZSxjb250ZW50LHJpZ2h0X3BpZWNlKTtcblx0fVxuXHRlbHNlIGlmKHNbJ2N1cnJlbnRfdHlwZSddID09ICd0b2tlbicpe1xuXHQgICAgR3VwcHkubG9nKDMsXCJUT0tFTlwiKTtcblx0ICAgIC8vIElmIHdlJ3JlIGF0IHRoZSBiZWdpbm5pbmcsIHRoZW4gdGhlIHRva2VuIGlzIHRoZSBwcmV2aW91cyBmIG5vZGVcblx0ICAgIGlmKHRoaXMuY2FyZXQgPT0gMCAmJiB0aGlzLmN1cnJlbnQucHJldmlvdXNTaWJsaW5nICE9IG51bGwpe1xuXHRcdGNvbnRlbnRbY3VyXSA9IFt0aGlzLm1ha2VfZShcIlwiKSwgdGhpcy5jdXJyZW50LnByZXZpb3VzU2libGluZywgdGhpcy5tYWtlX2UoXCJcIildO1xuXHRcdHRvX3JlcGxhY2UgPSB0aGlzLmN1cnJlbnQucHJldmlvdXNTaWJsaW5nO1xuXHRcdHJlcGxhY2VfZiA9IHRydWU7XG5cdCAgICB9XG5cdCAgICBlbHNle1xuXHRcdC8vIGxvb2sgZm9yIFswLTkuXSt8W2EtekEtWl0gaW1tZWRpYXRlbHkgcHJlY2VlZGluZyB0aGUgY2FyZXQgYW5kIHVzZSB0aGF0IGFzIHRva2VuXG5cdFx0dmFyIHByZXYgPSB0aGlzLmN1cnJlbnQuZmlyc3RDaGlsZC5ub2RlVmFsdWUuc3Vic3RyaW5nKDAsdGhpcy5jYXJldCk7XG5cdFx0dmFyIHRva2VuID0gcHJldi5tYXRjaCgvWzAtOS5dKyR8W2EtekEtWl0kLyk7XG5cdFx0aWYodG9rZW4gIT0gbnVsbCAmJiB0b2tlbi5sZW5ndGggPiAwKXtcblx0XHQgICAgdG9rZW4gPSB0b2tlblswXTtcblx0XHQgICAgbGVmdF9waWVjZSA9IHRoaXMubWFrZV9lKHRoaXMuY3VycmVudC5maXJzdENoaWxkLm5vZGVWYWx1ZS5zbGljZSgwLHRoaXMuY2FyZXQtdG9rZW4ubGVuZ3RoKSk7XG5cdFx0ICAgIHJpZ2h0X3BpZWNlID0gdGhpcy5tYWtlX2UodGhpcy5jdXJyZW50LmZpcnN0Q2hpbGQubm9kZVZhbHVlLnNsaWNlKHRoaXMuY2FyZXQpKTtcblx0XHQgICAgY29udGVudFtjdXJdID0gW3RoaXMubWFrZV9lKHRva2VuKV07XG5cdFx0fVxuXHQgICAgfVxuXHR9XG4gICAgfVxuICAgIGlmKCFyZXBsYWNlX2YgJiYgKGxlZnRfcGllY2UgPT0gbnVsbCB8fCByaWdodF9waWVjZSA9PSBudWxsKSl7XG5cdEd1cHB5LmxvZygzLFwic3BsaXR0aW5nXCIsdGhpcy5jdXJyZW50LHRoaXMuY2FyZXQpO1xuXHRsZWZ0X3BpZWNlID0gdGhpcy5tYWtlX2UodGhpcy5jdXJyZW50LmZpcnN0Q2hpbGQubm9kZVZhbHVlLnNsaWNlKDAsdGhpcy5jYXJldCkpO1xuXHRyaWdodF9waWVjZSA9IHRoaXMubWFrZV9lKHRoaXMuY3VycmVudC5maXJzdENoaWxkLm5vZGVWYWx1ZS5zbGljZSh0aGlzLmNhcmV0KSk7XG5cdHRvX3JlbW92ZSA9IFt0aGlzLmN1cnJlbnRdO1xuICAgIH1cblxuICAgIC8vIEJ5IG5vdzpcbiAgICAvLyBcbiAgICAvLyBjb250ZW50IGNvbnRhaW5zIHdoYXRldmVyIHdlIHdhbnQgdG8gcHJlLXBvcHVsYXRlIHRoZSAnY3VycmVudCcgZmllbGQgd2l0aCAoaWYgYW55KVxuICAgIC8vXG4gICAgLy8gcmlnaHRfcGllY2UgY29udGFpbnMgd2hhdGV2ZXIgY29udGVudCB3YXMgaW4gYW4gaW52b2x2ZWQgbm9kZVxuICAgIC8vIHRvIHRoZSByaWdodCBvZiB0aGUgY3Vyc29yIGJ1dCBpcyBub3QgcGFydCBvZiB0aGUgaW5zZXJ0aW9uLlxuICAgIC8vIEFuYWxvZ291c2x5IGZvciBsZWZ0X3BpZWNlXG4gICAgLy9cbiAgICAvLyBUaHVzIGFsbCB3ZSBzaG91bGQgaGF2ZSB0byBkbyBub3cgaXMgc3ltYm9sX3RvX25vZGUoc3ltX3R5cGUsXG4gICAgLy8gY29udGVudCkgYW5kIHRoZW4gYWRkIHRoZSBsZWZ0X3BpZWNlLCByZXN1bHRpbmcgbm9kZSwgYW5kXG4gICAgLy8gcmlnaHRfcGllY2UgaW4gdGhhdCBvcmRlci5cbiAgICBcbiAgICB2YXIgbmV3X2N1cnJlbnQgPSBudWxsO1xuICAgIHZhciBjdXJyZW50X3BhcmVudCA9IHRoaXMuY3VycmVudC5wYXJlbnROb2RlO1xuICAgIEd1cHB5LmxvZygzLHRoaXMuY3VycmVudCx0aGlzLmN1cnJlbnQucGFyZW50Tm9kZSk7XG4gICAgR3VwcHkubG9nKDMsXCJTT1wiLHMsc1tcIm91dHB1dFwiXSlcbiAgICBHdXBweS5sb2coMyxcIlRSXCIsdGhpcy5jdXJyZW50LHRoaXMuY3VycmVudF9wYXJlbnQsdG9fcmVtb3ZlKTtcbiAgICBcbiAgICB2YXIgc3ltID0gdGhpcy5zeW1ib2xfdG9fbm9kZShzeW1fbmFtZSxjb250ZW50KTtcbiAgICB2YXIgZiA9IHN5bS5mO1xuICAgIHZhciBuZXdfY3VycmVudCA9IHN5bS5maXJzdDtcblxuICAgIHZhciBuZXh0ID0gdGhpcy5jdXJyZW50Lm5leHRTaWJsaW5nO1xuXG4gICAgR3VwcHkubG9nKDMsXCJDU1NDU1wiLHRoaXMuY3VycmVudCx0aGlzLmN1cnJlbnQucGFyZW50Tm9kZSk7XG5cbiAgICBpZihyZXBsYWNlX2Ype1xuXHRHdXBweS5sb2coMyx0b19yZXBsYWNlLGN1cnJlbnRfcGFyZW50LGYpO1xuXHRjdXJyZW50X3BhcmVudC5yZXBsYWNlQ2hpbGQoZix0b19yZXBsYWNlKTtcbiAgICB9XG4gICAgZWxzZXtcblx0aWYodG9fcmVtb3ZlLmxlbmd0aCA9PSAwKSB0aGlzLmN1cnJlbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCh0aGlzLmN1cnJlbnQpO1xuXHRcblx0Zm9yKHZhciBpID0gMDsgaSA8IHRvX3JlbW92ZS5sZW5ndGg7IGkrKyl7XG5cdCAgICBHdXBweS5sb2coMyxcInJlbW92aW5nXCIsIHRvX3JlbW92ZVtpXSxcIiBmcm9tXCIgLCBjdXJyZW50X3BhcmVudCk7XG5cdCAgICBpZihuZXh0ID09IHRvX3JlbW92ZVtpXSkgbmV4dCA9IG5leHQubmV4dFNpYmxpbmc7XG5cdCAgICBjdXJyZW50X3BhcmVudC5yZW1vdmVDaGlsZCh0b19yZW1vdmVbaV0pO1xuXHR9XG5cdGN1cnJlbnRfcGFyZW50Lmluc2VydEJlZm9yZShsZWZ0X3BpZWNlLCBuZXh0KTtcblx0Y3VycmVudF9wYXJlbnQuaW5zZXJ0QmVmb3JlKGYsIG5leHQpO1xuXHRjdXJyZW50X3BhcmVudC5pbnNlcnRCZWZvcmUocmlnaHRfcGllY2UsIG5leHQpO1xuICAgIH1cbiAgICBcbiAgICBHdXBweS5sb2coMywobmV3IFhNTFNlcmlhbGl6ZXIoKSkuc2VyaWFsaXplVG9TdHJpbmcodGhpcy5iYXNlKSk7XG4gICAgR3VwcHkubG9nKDMsbmV3X2N1cnJlbnQpO1xuICAgIHRoaXMuY2FyZXQgPSAwO1xuICAgIHRoaXMuY3VycmVudCA9IGY7XG4gICAgaWYoc1snY2hhciddKXtcblx0dGhpcy5jdXJyZW50ID0gdGhpcy5jdXJyZW50Lm5leHRTaWJsaW5nO1xuICAgIH1cbiAgICBlbHNlIHRoaXMuZG93bl9mcm9tX2ZfdG9fYmxhbmsoKTtcblxuICAgIHRoaXMuc2VsX2NsZWFyKCk7XG4gICAgdGhpcy5jaGVja3BvaW50KCk7XG4gICAgLy8gaWYobmV3X2N1cnJlbnQgIT0gbnVsbCkge1xuICAgIC8vIFx0aWYobmV3X2N1cnJlbnQuZmlyc3RDaGlsZCA9PSBudWxsKSBuZXdfY3VycmVudC5hcHBlbmRDaGlsZCh0aGlzLmJhc2UuY3JlYXRlVGV4dE5vZGUoXCJcIikpO1xuICAgIC8vIFx0Y3VycmVudCA9IG5ld19jdXJyZW50O1xuICAgIC8vIH1cbiAgICAvLyBlbHNleyAvLyBXSEVOIENPVUxEIFRISVMgSEFQUEVOLS1ubyBjaGlsZHJlbiBvZiBhbiBmP1xuICAgIC8vIFx0Y3VycmVudCA9IHJpZ2h0X3BpZWNlO1xuICAgIC8vIH1cbiAgICB0aGlzLnJlbmRlcih0cnVlKTtcbiAgICByZXR1cm4gdHJ1ZTtcbn1cblxuR3VwcHkucHJvdG90eXBlLnNlbF9nZXQgPSBmdW5jdGlvbigpe1xuICAgIC8vR3VwcHkubG9nKDMsXCJzZWxfc3RhcnRfZW5kXCIsdGhpcy5zZWxfc3RhcnQsdGhpcy5zZWxfZW5kLHRoaXMuY3VycmVudCx0aGlzLmNhcmV0LHRoaXMuc2VsX3N0YXR1cyk7XG4gICAgaWYodGhpcy5zZWxfc3RhdHVzID09IEd1cHB5LlNFTF9OT05FKXtcblx0Ly8gaWYodGhpcy5jdXJyZW50Lm5vZGVOYW1lID09ICdmJyl7IC8vIFRoaXMgYmxvY2sgc2hvdWxkIGJlIGRlYWRcblx0Ly8gICAgIEd1cHB5LmxvZygzLFwiVEhJUyBTSE9VTEQgTkVWRVIgSEFQUEVOXCIpO1xuXHQvLyAgICAgR3VwcHkubG9nKDMsXCJBQkNEXCIsdGhpcy5jdXJyZW50LHRoaXMuY3VycmVudC5wcmV2aW91c1NpYmxpbmcsdGhpcy5jdXJyZW50LnBhcmVudE5vZGUpO1xuXHQvLyAgICAgdGhpcy5zZWxfc3RhcnQgPSB7XCJub2RlXCI6dGhpcy5jdXJyZW50LCBcImNhcmV0XCI6dGhpcy5jdXJyZW50LnByZXZpb3VzU2libGluZy5maXJzdENoaWxkLm5vZGVWYWx1ZS5sZW5ndGh9O1xuXHQvLyAgICAgcmV0dXJuIHtcIm5vZGVfbGlzdFwiOlt0aGlzLm1ha2VfZShcIlwiKSx0aGlzLmN1cnJlbnQsdGhpcy5tYWtlX2UoXCJcIildLFxuXHQvLyBcdCAgICBcInJlbW5hbnRcIjp0aGlzLm1ha2VfZSh0aGlzLmN1cnJlbnQucHJldmlvdXNTaWJsaW5nLmZpcnN0Q2hpbGQubm9kZVZhbHVlICsgdGhpcy5jdXJyZW50Lm5leHRTaWJsaW5nLmZpcnN0Q2hpbGQubm9kZVZhbHVlKSxcblx0Ly8gXHQgICAgXCJpbnZvbHZlZFwiOlt0aGlzLmN1cnJlbnQucHJldmlvdXNTaWJsaW5nLCB0aGlzLmN1cnJlbnQsIHRoaXMuY3VycmVudC5uZXh0U2libGluZ119XG5cdC8vIH1cblx0Ly8gZWxzZVxuXHRyZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgdmFyIGludm9sdmVkID0gW107XG4gICAgdmFyIG5vZGVfbGlzdCA9IFtdO1xuICAgIHZhciByZW1uYW50ID0gbnVsbDtcblxuICAgIGlmKHRoaXMuc2VsX3N0YXJ0Lm5vZGUgPT0gdGhpcy5zZWxfZW5kLm5vZGUpe1xuXHRyZXR1cm4ge1wibm9kZV9saXN0XCI6W3RoaXMubWFrZV9lKHRoaXMuc2VsX3N0YXJ0Lm5vZGUuZmlyc3RDaGlsZC5ub2RlVmFsdWUuc3Vic3RyaW5nKHRoaXMuc2VsX3N0YXJ0LmNhcmV0LCB0aGlzLnNlbF9lbmQuY2FyZXQpKV0sXG5cdFx0XCJyZW1uYW50XCI6dGhpcy5tYWtlX2UodGhpcy5zZWxfc3RhcnQubm9kZS5maXJzdENoaWxkLm5vZGVWYWx1ZS5zdWJzdHJpbmcoMCwgdGhpcy5zZWxfc3RhcnQuY2FyZXQpICsgdGhpcy5zZWxfZW5kLm5vZGUuZmlyc3RDaGlsZC5ub2RlVmFsdWUuc3Vic3RyaW5nKHRoaXMuc2VsX2VuZC5jYXJldCkpLFxuXHRcdFwiaW52b2x2ZWRcIjpbdGhpcy5zZWxfc3RhcnQubm9kZV19O1xuICAgIH1cbiAgICBcbiAgICBub2RlX2xpc3QucHVzaCh0aGlzLm1ha2VfZSh0aGlzLnNlbF9zdGFydC5ub2RlLmZpcnN0Q2hpbGQubm9kZVZhbHVlLnN1YnN0cmluZyh0aGlzLnNlbF9zdGFydC5jYXJldCkpKTtcbiAgICBpbnZvbHZlZC5wdXNoKHRoaXMuc2VsX3N0YXJ0Lm5vZGUpO1xuICAgIGludm9sdmVkLnB1c2godGhpcy5zZWxfZW5kLm5vZGUpO1xuICAgIHJlbW5hbnQgPSB0aGlzLm1ha2VfZSh0aGlzLnNlbF9zdGFydC5ub2RlLmZpcnN0Q2hpbGQubm9kZVZhbHVlLnN1YnN0cmluZygwLCB0aGlzLnNlbF9zdGFydC5jYXJldCkgKyB0aGlzLnNlbF9lbmQubm9kZS5maXJzdENoaWxkLm5vZGVWYWx1ZS5zdWJzdHJpbmcodGhpcy5zZWxfZW5kLmNhcmV0KSk7XG4gICAgdmFyIG4gPSB0aGlzLnNlbF9zdGFydC5ub2RlLm5leHRTaWJsaW5nO1xuICAgIHdoaWxlKG4gIT0gbnVsbCAmJiBuICE9IHRoaXMuc2VsX2VuZC5ub2RlKXtcblx0aW52b2x2ZWQucHVzaChuKTtcblx0bm9kZV9saXN0LnB1c2gobik7XG5cdG4gPSBuLm5leHRTaWJsaW5nO1xuICAgIH1cbiAgICBub2RlX2xpc3QucHVzaCh0aGlzLm1ha2VfZSh0aGlzLnNlbF9lbmQubm9kZS5maXJzdENoaWxkLm5vZGVWYWx1ZS5zdWJzdHJpbmcoMCwgdGhpcy5zZWxfZW5kLmNhcmV0KSkpO1xuICAgIEd1cHB5LmxvZygzLFwiTkxcIixub2RlX2xpc3QpO1xuICAgIHJldHVybiB7XCJub2RlX2xpc3RcIjpub2RlX2xpc3QsXG5cdCAgICBcInJlbW5hbnRcIjpyZW1uYW50LFxuXHQgICAgXCJpbnZvbHZlZFwiOmludm9sdmVkLFxuXHQgICAgXCJjdXJzb3JcIjowfTtcbn1cblxuR3VwcHkucHJvdG90eXBlLnByaW50X3NlbGVjdGlvbiA9IGZ1bmN0aW9uKCl7XG4gICAgdmFyIHNlbCA9IHRoaXMuc2VsX2dldCgpO1xuICAgIEd1cHB5LmxvZygzLHNlbCk7XG4gICAgaWYoc2VsID09IG51bGwpIHJldHVybiBcIltub25lXVwiO1xuICAgIHZhciBhbnMgPSBcIlwiO1xuICAgIGFucyArPSBcIm5vZGVfbGlzdDogXFxuXCI7XG4gICAgZm9yKHZhciBpID0gMDsgaSA8IHNlbC5ub2RlX2xpc3QubGVuZ3RoOyBpKyspe1xuXHR2YXIgbiA9IHNlbC5ub2RlX2xpc3RbaV07XG5cdGFucyArPSAobmV3IFhNTFNlcmlhbGl6ZXIoKSkuc2VyaWFsaXplVG9TdHJpbmcobikgKyBcIlxcblwiO1xuICAgIH1cbiAgICBhbnMgKz0gXCJcXG5pbnZvbHZlZDogXFxuXCI7XG4gICAgZm9yKHZhciBpID0gMDsgaSA8IHNlbC5pbnZvbHZlZC5sZW5ndGg7IGkrKyl7XG5cdHZhciBuID0gc2VsLmludm9sdmVkW2ldO1xuXHRhbnMgKz0gKG5ldyBYTUxTZXJpYWxpemVyKCkpLnNlcmlhbGl6ZVRvU3RyaW5nKG4pICsgXCJcXG5cIjtcbiAgICB9XG4gICAgLy8gYW5zICs9IFwiXFxuIHJlbW5hbnQ6IFxcblwiO1xuICAgIC8vIGFucyArPSAobmV3IFhNTFNlcmlhbGl6ZXIoKSkuc2VyaWFsaXplVG9TdHJpbmcoc2VsLnJlbW5hbnQpICsgXCJcXG5cIjtcbiAgICBHdXBweS5sb2coMyxhbnMpO1xufVxuXG5HdXBweS5wcm90b3R5cGUubWFrZV9lID0gZnVuY3Rpb24odGV4dCl7XG4gICAgdmFyIG5ld19ub2RlID0gdGhpcy5iYXNlLmNyZWF0ZUVsZW1lbnQoXCJlXCIpO1xuICAgIG5ld19ub2RlLmFwcGVuZENoaWxkKHRoaXMuYmFzZS5jcmVhdGVUZXh0Tm9kZSh0ZXh0KSk7XG4gICAgcmV0dXJuIG5ld19ub2RlO1xufVxuXG5HdXBweS5wcm90b3R5cGUuaXNfYmxhbmsgPSBmdW5jdGlvbigpe1xuICAgIHJldHVybiB0aGlzLmJhc2UuZG9jdW1lbnRFbGVtZW50LmZpcnN0Q2hpbGQgPT0gdGhpcy5iYXNlLmRvY3VtZW50RWxlbWVudC5sYXN0Q2hpbGQgJiYgdGhpcy5iYXNlLmRvY3VtZW50RWxlbWVudC5maXJzdENoaWxkLmZpcnN0Q2hpbGQudGV4dENvbnRlbnQgPT0gXCJcIjtcbn1cblxuR3VwcHkucHJvdG90eXBlLmluc2VydF9zdHJpbmcgPSBmdW5jdGlvbihzKXtcbiAgICBpZih0aGlzLnNlbF9zdGF0dXMgIT0gR3VwcHkuU0VMX05PTkUpe1xuXHR0aGlzLnNlbF9kZWxldGUoKTtcblx0dGhpcy5zZWxfY2xlYXIoKTtcbiAgICB9XG4gICAgR3VwcHkubG9nKDMsXCJBU0RcIix0aGlzLmNhcmV0LHRoaXMuY3VycmVudCx0aGlzLmN1cnJlbnQuZmlyc3RDaGlsZC5ub2RlVmFsdWUscyk7XG4gICAgdGhpcy5jdXJyZW50LmZpcnN0Q2hpbGQubm9kZVZhbHVlID0gdGhpcy5jdXJyZW50LmZpcnN0Q2hpbGQubm9kZVZhbHVlLnNwbGljZSh0aGlzLmNhcmV0LHMpXG4gICAgdGhpcy5jYXJldCArPSBzLmxlbmd0aDtcbiAgICB0aGlzLmNoZWNrcG9pbnQoKTtcbiAgICB0aGlzLmNoZWNrX2Zvcl9zeW1ib2woKTtcbiAgICB0aGlzLnJlbmRlcih0cnVlKTtcbn1cblxuR3VwcHkucHJvdG90eXBlLnJlbmRlciA9IGZ1bmN0aW9uKHVwZGF0ZWQpe1xuICAgIGlmKCF0aGlzLmVkaXRvcl9hY3RpdmUgJiYgdGhpcy5pc19ibGFuaygpKXtcblx0a2F0ZXgucmVuZGVyKHRoaXMuZW1wdHlfY29udGVudCx0aGlzLmVkaXRvcik7XG5cdHJldHVybjtcbiAgICB9XG4gICAgdmFyIHRleCA9IHRoaXMucmVuZGVyX25vZGUodGhpcy5iYXNlLFwibGF0ZXhcIik7XG4gICAgR3VwcHkubG9nKDMsdGhpcy5jYXJldCxcIlRFWFwiLCB0ZXgpO1xuICAgIGthdGV4LnJlbmRlcih0ZXgsdGhpcy5lZGl0b3IpO1xuICAgIGlmKHVwZGF0ZWQpe1xuXHR0aGlzLnJlY29tcHV0ZV9sb2NhdGlvbnNfcGF0aHMoKTtcbiAgICB9XG59XG5cbkd1cHB5LnByb3RvdHlwZS5hY3RpdmF0ZSA9IGZ1bmN0aW9uKCl7XG4gICAgR3VwcHkuYWN0aXZlX2d1cHB5ID0gdGhpcztcbiAgICB0aGlzLmVkaXRvcl9hY3RpdmUgPSB0cnVlO1xuICAgIHRoaXMuZWRpdG9yLmNsYXNzTmFtZSA9IHRoaXMuZWRpdG9yLmNsYXNzTmFtZS5yZXBsYWNlKG5ldyBSZWdFeHAoJyhcXFxcc3xeKWd1cHB5X2luYWN0aXZlKFxcXFxzfCQpJyksJyBndXBweV9hY3RpdmUgJyk7XG4gICAgdGhpcy5lZGl0b3IuZm9jdXMoKTtcbiAgICBpZih0aGlzLnJlYWR5KXtcblx0dGhpcy5yZW5kZXIodHJ1ZSk7XG4gICAgfVxufVxuXG5HdXBweS5wcm90b3R5cGUuZGVhY3RpdmF0ZSA9IGZ1bmN0aW9uKCl7XG4gICAgdGhpcy5lZGl0b3JfYWN0aXZlID0gZmFsc2U7XG4gICAgdmFyIHIgPSBuZXcgUmVnRXhwKCcoXFxcXHN8XilndXBweV9hY3RpdmUoXFxcXHN8JCknKTtcbiAgICBpZih0aGlzLmVkaXRvci5jbGFzc05hbWUubWF0Y2gociwnIGd1cHB5X2luYWN0aXZlICcpKXtcblx0dGhpcy5lZGl0b3IuY2xhc3NOYW1lID0gdGhpcy5lZGl0b3IuY2xhc3NOYW1lLnJlcGxhY2UociwnIGd1cHB5X2luYWN0aXZlICcpO1xuICAgIH1cbiAgICBlbHNle1xuXHR0aGlzLmVkaXRvci5jbGFzc05hbWUgKz0gJyBndXBweV9pbmFjdGl2ZSAnO1xuICAgIH1cbiAgICBHdXBweS5rYi5zaGlmdF9kb3duID0gZmFsc2U7XG4gICAgR3VwcHkua2IuY3RybF9kb3duID0gZmFsc2U7XG4gICAgR3VwcHkua2IuYWx0X2Rvd24gPSBmYWxzZTtcbiAgICBpZih0aGlzLnJlYWR5KXtcblx0dGhpcy5yZW5kZXIoKTtcbiAgICB9XG59XG5cbkd1cHB5LnByb3RvdHlwZS5zZWxfY29weSA9IGZ1bmN0aW9uKCl7XG4gICAgdmFyIHNlbCA9IHRoaXMuc2VsX2dldCgpO1xuICAgIGlmKCFzZWwpIHJldHVybjtcbiAgICB0aGlzLmNsaXBib2FyZCA9IFtdO1xuICAgIGZvcih2YXIgaSA9IDA7IGkgPCBzZWwubm9kZV9saXN0Lmxlbmd0aDsgaSsrKXtcblx0dGhpcy5jbGlwYm9hcmQucHVzaChzZWwubm9kZV9saXN0W2ldLmNsb25lTm9kZSh0cnVlKSk7XG4gICAgfVxuICAgIHRoaXMuc2VsX2NsZWFyKCk7XG59XG5cbkd1cHB5LnByb3RvdHlwZS5zZWxfY3V0ID0gZnVuY3Rpb24oKXtcbiAgICB2YXIgbm9kZV9saXN0ID0gdGhpcy5zZWxfZGVsZXRlKCk7XG4gICAgdGhpcy5jbGlwYm9hcmQgPSBbXTtcbiAgICBmb3IodmFyIGkgPSAwOyBpIDwgbm9kZV9saXN0Lmxlbmd0aDsgaSsrKXtcblx0dGhpcy5jbGlwYm9hcmQucHVzaChub2RlX2xpc3RbaV0uY2xvbmVOb2RlKHRydWUpKTtcbiAgICB9XG4gICAgdGhpcy5zZWxfY2xlYXIoKTtcbiAgICB0aGlzLmNoZWNrcG9pbnQoKTtcbn1cblxuR3VwcHkucHJvdG90eXBlLmluc2VydF9ub2RlcyA9IGZ1bmN0aW9uKG5vZGVfbGlzdCwgbW92ZV9jdXJzb3Ipe1xuICAgIHZhciByZWFsX2NsaXBib2FyZCA9IFtdO1xuICAgIGZvcih2YXIgaSA9IDA7IGkgPCBub2RlX2xpc3QubGVuZ3RoOyBpKyspe1xuXHRyZWFsX2NsaXBib2FyZC5wdXNoKG5vZGVfbGlzdFtpXS5jbG9uZU5vZGUodHJ1ZSkpO1xuICAgIH1cblxuICAgIGlmKHJlYWxfY2xpcGJvYXJkLmxlbmd0aCA9PSAxKXtcblx0R3VwcHkubG9nKDMsXCJ3aW1wXCIpO1xuXHR0aGlzLmN1cnJlbnQuZmlyc3RDaGlsZC5ub2RlVmFsdWUgPSB0aGlzLmN1cnJlbnQuZmlyc3RDaGlsZC5ub2RlVmFsdWUuc3Vic3RyaW5nKDAsdGhpcy5jYXJldCkgKyByZWFsX2NsaXBib2FyZFswXS5maXJzdENoaWxkLm5vZGVWYWx1ZSArIHRoaXMuY3VycmVudC5maXJzdENoaWxkLm5vZGVWYWx1ZS5zdWJzdHJpbmcodGhpcy5jYXJldCk7XG5cdGlmKG1vdmVfY3Vyc29yKSB0aGlzLmNhcmV0ICs9IHJlYWxfY2xpcGJvYXJkWzBdLmZpcnN0Q2hpbGQubm9kZVZhbHVlLmxlbmd0aDtcbiAgICB9XG4gICAgZWxzZXtcblx0dmFyIG5uID0gdGhpcy5tYWtlX2UocmVhbF9jbGlwYm9hcmRbcmVhbF9jbGlwYm9hcmQubGVuZ3RoLTFdLmZpcnN0Q2hpbGQubm9kZVZhbHVlICsgdGhpcy5jdXJyZW50LmZpcnN0Q2hpbGQubm9kZVZhbHVlLnN1YnN0cmluZyh0aGlzLmNhcmV0KSk7XG5cdHRoaXMuY3VycmVudC5maXJzdENoaWxkLm5vZGVWYWx1ZSA9IHRoaXMuY3VycmVudC5maXJzdENoaWxkLm5vZGVWYWx1ZS5zdWJzdHJpbmcoMCx0aGlzLmNhcmV0KSArIHJlYWxfY2xpcGJvYXJkWzBdLmZpcnN0Q2hpbGQubm9kZVZhbHVlO1xuXHRpZih0aGlzLmN1cnJlbnQubmV4dFNpYmxpbmcgPT0gbnVsbClcblx0ICAgIHRoaXMuY3VycmVudC5wYXJlbnROb2RlLmFwcGVuZENoaWxkKG5uKVxuXHRlbHNlXG5cdCAgICB0aGlzLmN1cnJlbnQucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUobm4sIHRoaXMuY3VycmVudC5uZXh0U2libGluZylcblx0R3VwcHkubG9nKDMsbm4pO1xuXHRmb3IodmFyIGkgPSAxOyBpIDwgcmVhbF9jbGlwYm9hcmQubGVuZ3RoIC0gMTsgaSsrKVxuXHQgICAgdGhpcy5jdXJyZW50LnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHJlYWxfY2xpcGJvYXJkW2ldLCBubik7XG5cdGlmKG1vdmVfY3Vyc29yKXtcblx0ICAgIHRoaXMuY3VycmVudCA9IG5uO1xuXHQgICAgdGhpcy5jYXJldCA9IHJlYWxfY2xpcGJvYXJkW3JlYWxfY2xpcGJvYXJkLmxlbmd0aC0xXS5maXJzdENoaWxkLm5vZGVWYWx1ZS5sZW5ndGhcblx0fVxuICAgIH1cblxufVxuXG5HdXBweS5wcm90b3R5cGUuc2VsX3Bhc3RlID0gZnVuY3Rpb24oKXtcbiAgICB0aGlzLnNlbF9kZWxldGUoKTtcbiAgICB0aGlzLnNlbF9jbGVhcigpO1xuICAgIGlmKCEodGhpcy5jbGlwYm9hcmQpIHx8IHRoaXMuY2xpcGJvYXJkLmxlbmd0aCA9PSAwKSByZXR1cm47XG4gICAgdGhpcy5pbnNlcnRfbm9kZXModGhpcy5jbGlwYm9hcmQsIHRydWUpO1xuICAgIHRoaXMuY2hlY2twb2ludCgpO1xuICAgIHJldHVybjtcbiAgICB2YXIgcmVhbF9jbGlwYm9hcmQgPSBbXTtcbiAgICBmb3IodmFyIGkgPSAwOyBpIDwgdGhpcy5jbGlwYm9hcmQubGVuZ3RoOyBpKyspe1xuXHRyZWFsX2NsaXBib2FyZC5wdXNoKHRoaXMuY2xpcGJvYXJkW2ldLmNsb25lTm9kZSh0cnVlKSk7XG4gICAgfVxuICAgIEd1cHB5LmxvZygzLFwiQ0xJUEJPQVJEXCIsdGhpcy5jbGlwYm9hcmQpO1xuICAgIEd1cHB5LmxvZygzLFwiUEFTVElOR1wiKTtcbiAgICBcbiAgICBpZihyZWFsX2NsaXBib2FyZC5sZW5ndGggPT0gMSl7XG5cdEd1cHB5LmxvZygzLFwid2ltcFwiKTtcblx0dGhpcy5jdXJyZW50LmZpcnN0Q2hpbGQubm9kZVZhbHVlID0gdGhpcy5jdXJyZW50LmZpcnN0Q2hpbGQubm9kZVZhbHVlLnN1YnN0cmluZygwLHRoaXMuY2FyZXQpICsgcmVhbF9jbGlwYm9hcmRbMF0uZmlyc3RDaGlsZC5ub2RlVmFsdWUgKyB0aGlzLmN1cnJlbnQuZmlyc3RDaGlsZC5ub2RlVmFsdWUuc3Vic3RyaW5nKHRoaXMuY2FyZXQpO1xuXHR0aGlzLmNhcmV0ICs9IHJlYWxfY2xpcGJvYXJkWzBdLmZpcnN0Q2hpbGQubm9kZVZhbHVlLmxlbmd0aDtcbiAgICB9XG4gICAgZWxzZXtcblx0dmFyIG5uID0gdGhpcy5tYWtlX2UocmVhbF9jbGlwYm9hcmRbcmVhbF9jbGlwYm9hcmQubGVuZ3RoLTFdLmZpcnN0Q2hpbGQubm9kZVZhbHVlICsgdGhpcy5jdXJyZW50LmZpcnN0Q2hpbGQubm9kZVZhbHVlLnN1YnN0cmluZyh0aGlzLmNhcmV0KSk7XG5cdHRoaXMuY3VycmVudC5maXJzdENoaWxkLm5vZGVWYWx1ZSA9IHRoaXMuY3VycmVudC5maXJzdENoaWxkLm5vZGVWYWx1ZS5zdWJzdHJpbmcoMCx0aGlzLmNhcmV0KSArIHJlYWxfY2xpcGJvYXJkWzBdLmZpcnN0Q2hpbGQubm9kZVZhbHVlO1xuXHRpZih0aGlzLmN1cnJlbnQubmV4dFNpYmxpbmcgPT0gbnVsbClcblx0ICAgIHRoaXMuY3VycmVudC5wYXJlbnROb2RlLmFwcGVuZENoaWxkKG5uKVxuXHRlbHNlXG5cdCAgICB0aGlzLmN1cnJlbnQucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUobm4sIHRoaXMuY3VycmVudC5uZXh0U2libGluZylcblx0R3VwcHkubG9nKDMsbm4pO1xuXHRmb3IodmFyIGkgPSAxOyBpIDwgcmVhbF9jbGlwYm9hcmQubGVuZ3RoIC0gMTsgaSsrKVxuXHQgICAgdGhpcy5jdXJyZW50LnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHJlYWxfY2xpcGJvYXJkW2ldLCBubik7XG5cdHRoaXMuY3VycmVudCA9IG5uO1xuXHR0aGlzLmNhcmV0ID0gcmVhbF9jbGlwYm9hcmRbcmVhbF9jbGlwYm9hcmQubGVuZ3RoLTFdLmZpcnN0Q2hpbGQubm9kZVZhbHVlLmxlbmd0aFxuICAgIH1cbiAgICB0aGlzLmNoZWNrcG9pbnQoKTtcbn1cblxuR3VwcHkucHJvdG90eXBlLnNlbF9jbGVhciA9IGZ1bmN0aW9uKCl7XG4gICAgdGhpcy5zZWxfc3RhcnQgPSBudWxsOyAgICBcbiAgICB0aGlzLnNlbF9lbmQgPSBudWxsO1xuICAgIHRoaXMuc2VsX3N0YXR1cyA9IEd1cHB5LlNFTF9OT05FO1xufVxuXG5HdXBweS5wcm90b3R5cGUuc2VsX2RlbGV0ZSA9IGZ1bmN0aW9uKCl7XG4gICAgdmFyIHNlbCA9IHRoaXMuc2VsX2dldCgpO1xuICAgIGlmKCFzZWwpIHJldHVybjtcbiAgICBzZWxfcGFyZW50ID0gc2VsLmludm9sdmVkWzBdLnBhcmVudE5vZGU7XG4gICAgc2VsX3ByZXYgPSBzZWwuaW52b2x2ZWRbMF0ucHJldmlvdXNTaWJsaW5nO1xuICAgIEd1cHB5LmxvZygzLFwiU0RcIiwgc2VsLCBcIlxcbkFCQ1wiLCBzZWwuaW52b2x2ZWRbMF0sIHNlbF9wYXJlbnQsIHNlbF9wcmV2KTtcbiAgICBmb3IodmFyIGkgPSAwOyBpIDwgc2VsLmludm9sdmVkLmxlbmd0aDsgaSsrKXtcblx0dmFyIG4gPSBzZWwuaW52b2x2ZWRbaV07XG5cdHNlbF9wYXJlbnQucmVtb3ZlQ2hpbGQobik7XG4gICAgfVxuICAgIGlmKHNlbF9wcmV2ID09IG51bGwpe1xuXHRHdXBweS5sb2coMyxcIlBSRVZOXCIsc2VsKTtcblx0aWYoc2VsX3BhcmVudC5maXJzdENoaWxkID09IG51bGwpXG5cdCAgICBzZWxfcGFyZW50LmFwcGVuZENoaWxkKHNlbC5yZW1uYW50KTtcblx0ZWxzZVxuXHQgICAgc2VsX3BhcmVudC5pbnNlcnRCZWZvcmUoc2VsLnJlbW5hbnQsIHNlbF9wYXJlbnQuZmlyc3RDaGlsZCk7XG4gICAgfVxuICAgIGVsc2UgaWYoc2VsX3ByZXYubm9kZU5hbWUgPT0gJ2YnKXtcblx0R3VwcHkubG9nKDMsXCJQUkVWRlwiLHNlbF9wcmV2Lm5leHRTaWJsaW5nKTtcblx0aWYoc2VsX3ByZXYubmV4dFNpYmxpbmcgPT0gbnVsbClcblx0ICAgIHNlbF9wYXJlbnQuYXBwZW5kQ2hpbGQoc2VsLnJlbW5hbnQpO1xuXHRlbHNlXG5cdCAgICBzZWxfcGFyZW50Lmluc2VydEJlZm9yZShzZWwucmVtbmFudCwgc2VsX3ByZXYubmV4dFNpYmxpbmcpO1xuICAgIH1cbiAgICB0aGlzLmN1cnJlbnQgPSBzZWwucmVtbmFudFxuICAgIHRoaXMuY2FyZXQgPSB0aGlzLnNlbF9zdGFydC5jYXJldDtcbiAgICByZXR1cm4gc2VsLm5vZGVfbGlzdDtcbn1cblxuLy9GdW5jdGlvbnMgZm9yIGhhbmRsaW5nIG5hdmlnYXRpb24gYW5kIGVkaXRpbmcgY29tbWFuZHM6IFxuXG5HdXBweS5wcm90b3R5cGUuc2VsX3JpZ2h0ID0gZnVuY3Rpb24oKXtcbiAgICBpZih0aGlzLnNlbF9zdGF0dXMgPT0gR3VwcHkuU0VMX05PTkUpe1xuXHR0aGlzLnNldF9zZWxfc3RhcnQoKTtcblx0dGhpcy5zZWxfc3RhdHVzID0gR3VwcHkuU0VMX0NVUlNPUl9BVF9FTkQ7XG4gICAgfVxuICAgIC8vR3VwcHkubG9nKDMsXCJFRUVFXCIsdGhpcy5jYXJldCx0aGlzLmdldF9sZW5ndGgodGhpcy5jdXJyZW50KSk7XG4gICAgaWYodGhpcy5jYXJldCA+PSB0aGlzLmdldF9sZW5ndGgodGhpcy5jdXJyZW50KSl7XG5cdHZhciBubiA9IHRoaXMuY3VycmVudC5uZXh0U2libGluZztcblx0aWYobm4gIT0gbnVsbCl7XG5cdCAgICB0aGlzLmN1cnJlbnQgPSBubi5uZXh0U2libGluZztcblx0ICAgIHRoaXMuY2FyZXQgPSAwO1xuXHQgICAgdGhpcy5zZXRfc2VsX2JvdW5kYXJ5KEd1cHB5LlNFTF9DVVJTT1JfQVRfRU5EKTtcblx0ICAgIC8vR3VwcHkubG9nKDMsXCJhc2RhXCIpO1xuXHR9XG5cdGVsc2V7XG5cdCAgICB0aGlzLnNldF9zZWxfYm91bmRhcnkoR3VwcHkuU0VMX0NVUlNPUl9BVF9FTkQpO1xuXHQgICAgLy9HdXBweS5sb2coMyxcImF0IGVuZCB3aGlsZSBzZWxlY3RpbmdcIik7XG5cdH1cbiAgICB9XG4gICAgZWxzZXtcblx0dGhpcy5jYXJldCArPSAxO1xuXHR0aGlzLnNldF9zZWxfYm91bmRhcnkoR3VwcHkuU0VMX0NVUlNPUl9BVF9FTkQpO1xuXHQvL0d1cHB5LmxvZygzLFwiYXNkYlwiKTtcbiAgICB9XG4gICAgLy9HdXBweS5sb2coMyxcIlNTXCIsdGhpcy5zZWxfc3RhdHVzLCB0aGlzLnNlbF9zdGFydCwgdGhpcy5zZWxfZW5kKTtcbiAgICBpZih0aGlzLnNlbF9zdGFydC5ub2RlID09IHRoaXMuc2VsX2VuZC5ub2RlICYmIHRoaXMuc2VsX3N0YXJ0LmNhcmV0ID09IHRoaXMuc2VsX2VuZC5jYXJldCl7XG5cdHRoaXMuc2VsX3N0YXR1cyA9IEd1cHB5LlNFTF9OT05FO1xuICAgIH1cbn1cblxuR3VwcHkucHJvdG90eXBlLnNldF9zZWxfYm91bmRhcnkgPSBmdW5jdGlvbihzc3RhdHVzLCBtb3VzZSl7XG4gICAgaWYodGhpcy5zZWxfc3RhdHVzID09IEd1cHB5LlNFTF9OT05FIHx8IG1vdXNlKSB0aGlzLnNlbF9zdGF0dXMgPSBzc3RhdHVzO1xuICAgIGlmKHRoaXMuc2VsX3N0YXR1cyA9PSBHdXBweS5TRUxfQ1VSU09SX0FUX1NUQVJUKVxuXHR0aGlzLnNldF9zZWxfc3RhcnQoKTtcbiAgICBlbHNlIGlmKHRoaXMuc2VsX3N0YXR1cyA9PSBHdXBweS5TRUxfQ1VSU09SX0FUX0VORClcblx0dGhpcy5zZXRfc2VsX2VuZCgpO1xufVxuXG5HdXBweS5wcm90b3R5cGUuc2VsX2xlZnQgPSBmdW5jdGlvbigpe1xuICAgIGlmKHRoaXMuc2VsX3N0YXR1cyA9PSBHdXBweS5TRUxfTk9ORSl7XG5cdHRoaXMuc2V0X3NlbF9lbmQoKTtcblx0dGhpcy5zZWxfc3RhdHVzID0gR3VwcHkuU0VMX0NVUlNPUl9BVF9TVEFSVDtcbiAgICB9XG4gICAgR3VwcHkubG9nKDMsXCJFRUVFXCIpO1xuICAgIGlmKHRoaXMuY2FyZXQgPD0gMCl7XG5cdHZhciBubiA9IHRoaXMuY3VycmVudC5wcmV2aW91c1NpYmxpbmc7XG5cdGlmKG5uICE9IG51bGwpe1xuXHQgICAgdGhpcy5jdXJyZW50ID0gbm4ucHJldmlvdXNTaWJsaW5nO1xuXHQgICAgdGhpcy5jYXJldCA9IHRoaXMuY3VycmVudC5maXJzdENoaWxkLm5vZGVWYWx1ZS5sZW5ndGg7XG5cdCAgICB0aGlzLnNldF9zZWxfYm91bmRhcnkoR3VwcHkuU0VMX0NVUlNPUl9BVF9TVEFSVCk7XG5cdCAgICBHdXBweS5sb2coMyxcImFzZGVlZVwiKTtcblx0fVxuXHRlbHNle1xuXHQgICAgdGhpcy5zZXRfc2VsX2JvdW5kYXJ5KEd1cHB5LlNFTF9DVVJTT1JfQVRfU1RBUlQpO1xuXHQgICAgR3VwcHkubG9nKDMsXCJhdCBzdGFydCB3aGlsZSBzZWxlY3RpbmdcIik7XG5cdH1cbiAgICB9XG4gICAgZWxzZXtcblx0dGhpcy5jYXJldCAtPSAxO1xuXHR0aGlzLnNldF9zZWxfYm91bmRhcnkoR3VwcHkuU0VMX0NVUlNPUl9BVF9TVEFSVCk7XG5cdEd1cHB5LmxvZygzLFwiYXNkYlwiKTtcbiAgICB9XG4gICAgR3VwcHkubG9nKDMsXCJTU1wiLHRoaXMuc2VsX3N0YXR1cywgdGhpcy5zZWxfc3RhcnQsIHRoaXMuc2VsX2VuZCk7XG4gICAgaWYodGhpcy5zZWxfc3RhcnQubm9kZSA9PSB0aGlzLnNlbF9lbmQubm9kZSAmJiB0aGlzLnNlbF9zdGFydC5jYXJldCA9PSB0aGlzLnNlbF9lbmQuY2FyZXQpe1xuXHR0aGlzLnNlbF9zdGF0dXMgPSBHdXBweS5TRUxfTk9ORTtcbiAgICB9XG59XG5cbkd1cHB5LnByb3RvdHlwZS5yaWdodCA9IGZ1bmN0aW9uKCl7XG4gICAgdGhpcy5zZWxfY2xlYXIoKTtcbiAgICBHdXBweS5sb2coMyxcIlJcIix0aGlzLmN1cnJlbnQsdGhpcy5jYXJldCk7XG4gICAgaWYodGhpcy5jYXJldCA+PSB0aGlzLmdldF9sZW5ndGgodGhpcy5jdXJyZW50KSl7XG5cdHZhciBubiA9IHRoaXMubmV4dF9ub2RlX2Zyb21fZSh0aGlzLmN1cnJlbnQpO1xuXHRpZihubiAhPSBudWxsKXtcblx0ICAgIHRoaXMuY3VycmVudCA9IG5uO1xuXHQgICAgdGhpcy5jYXJldCA9IDA7XG5cdH1cblx0ZWxzZXtcblx0ICAgIGlmKHRoaXMucmlnaHRfY2FsbGJhY2spIHRoaXMucmlnaHRfY2FsbGJhY2soKTtcblx0ICAgIEd1cHB5LmxvZygzLFwiYXQgZW5kIG9yIHByb2JsZW1cIik7XG5cdH1cbiAgICB9XG4gICAgZWxzZXtcblx0dGhpcy5jYXJldCArPSAxO1xuICAgIH1cbiAgICBHdXBweS5sb2coMyxcIlJcIix0aGlzLmN1cnJlbnQsdGhpcy5jdXJyZW50LnBhcmVudE5vZGUsdGhpcy5jYXJldCk7XG59XG5cbkd1cHB5LnByb3RvdHlwZS5nZXRfbGVuZ3RoID0gZnVuY3Rpb24obil7XG4gICAgaWYoR3VwcHkuaXNfYmxhbmsobikgfHwgbi5ub2RlTmFtZSA9PSAnZicpIHJldHVybiAwXG4gICAgcmV0dXJuIG4uZmlyc3RDaGlsZC5ub2RlVmFsdWUubGVuZ3RoO1xuICAgIFxufVxuXG5HdXBweS5wcm90b3R5cGUubGVmdCA9IGZ1bmN0aW9uKCl7XG4gICAgdGhpcy5zZWxfY2xlYXIoKTtcbiAgICBHdXBweS5sb2coMyxcIkxcIix0aGlzLmN1cnJlbnQsdGhpcy5jdXJyZW50LmZpcnN0Q2hpbGQubm9kZVZhbHVlLHRoaXMuY2FyZXQpO1xuICAgIGlmKHRoaXMuY2FyZXQgPD0gMCl7XG5cdHZhciBwbiA9IHRoaXMucHJldl9ub2RlX2Zyb21fZSh0aGlzLmN1cnJlbnQpO1xuXHRpZihwbiAhPSBudWxsKXtcblx0ICAgIHRoaXMuY3VycmVudCA9IHBuO1xuXHQgICAgdGhpcy5jYXJldCA9IHRoaXMuY3VycmVudC5maXJzdENoaWxkLm5vZGVWYWx1ZS5sZW5ndGg7XG5cdH1cblx0ZWxzZXtcblx0ICAgIGlmKHRoaXMubGVmdF9jYWxsYmFjaykgdGhpcy5sZWZ0X2NhbGxiYWNrKCk7XG5cdCAgICBHdXBweS5sb2coMyxcImF0IGJlZ2lubm5pbmcgb3IgcHJvYmxlbVwiKTtcblx0fVxuICAgIH1cbiAgICBlbHNle1xuXHR0aGlzLmNhcmV0IC09IDE7XG4gICAgfVxuICAgIEd1cHB5LmxvZygzLHRoaXMuY3VycmVudCx0aGlzLmNhcmV0KTtcbn1cblxuR3VwcHkucHJvdG90eXBlLmRlbGV0ZV9mcm9tX2MgPSBmdW5jdGlvbigpe1xuICAgIHZhciBwb3MgPSAwO1xuICAgIHZhciBjID0gdGhpcy5jdXJyZW50LnBhcmVudE5vZGU7XG4gICAgd2hpbGUoYyAmJiBjLm5vZGVOYW1lID09IFwiY1wiKXtcblx0cG9zKys7XG5cdGMgPSBjLnByZXZpb3VzU2libGluZztcbiAgICB9XG4gICAgdmFyIGlkeCA9IHRoaXMuY3VycmVudC5wYXJlbnROb2RlLmdldEF0dHJpYnV0ZShcImRlbGV0ZVwiKTtcbiAgICB2YXIgc3Vydml2b3Jfbm9kZSA9IHRoaXMuYmFzZS5ldmFsdWF0ZShcIi4vY1twb3NpdGlvbigpPVwiK2lkeCtcIl1cIiwgdGhpcy5jdXJyZW50LnBhcmVudE5vZGUucGFyZW50Tm9kZSwgbnVsbCwgWFBhdGhSZXN1bHQuRklSU1RfT1JERVJFRF9OT0RFX1RZUEUsIG51bGwpLnNpbmdsZU5vZGVWYWx1ZTtcbiAgICB2YXIgc3Vydml2b3Jfbm9kZXMgPSBbXTtcbiAgICBmb3IodmFyIG4gPSBzdXJ2aXZvcl9ub2RlLmZpcnN0Q2hpbGQ7IG4gIT0gbnVsbDsgbiA9IG4ubmV4dFNpYmxpbmcpe1xuXHRzdXJ2aXZvcl9ub2Rlcy5wdXNoKG4pO1xuICAgIH1cbiAgICB0aGlzLmN1cnJlbnQgPSB0aGlzLmN1cnJlbnQucGFyZW50Tm9kZS5wYXJlbnROb2RlO1xuICAgIHRoaXMuZGVsZXRlX2Zyb21fZigpO1xuICAgIHRoaXMuaW5zZXJ0X25vZGVzKHN1cnZpdm9yX25vZGVzLCBwb3MgPiBpZHgpO1xufVxuXG5HdXBweS5wcm90b3R5cGUuZGVsZXRlX2Zyb21fZSA9IGZ1bmN0aW9uKCl7XG4gICAgLy8gcmV0dXJuIGZhbHNlIGlmIHdlIGRlbGV0ZWQgc29tZXRoaW5nLCBhbmQgdHJ1ZSBvdGhlcndpc2UuXG4gICAgaWYodGhpcy5jYXJldCA+IDApe1xuXHR0aGlzLmN1cnJlbnQuZmlyc3RDaGlsZC5ub2RlVmFsdWUgPSB0aGlzLmN1cnJlbnQuZmlyc3RDaGlsZC5ub2RlVmFsdWUuc3BsaWNlbih0aGlzLmNhcmV0LTEsXCJcIiwxKTtcblx0dGhpcy5jYXJldC0tO1xuXHRHdXBweS5sb2coMyxcImJrXCIsXCJ8XCIrdGhpcy5jdXJyZW50LmZpcnN0Q2hpbGQubm9kZVZhbHVlK1wifFwiLHRoaXMuY3VycmVudC5maXJzdENoaWxkLm5vZGVWYWx1ZS5sZW5ndGgpO1xuICAgIH1cbiAgICBlbHNle1xuXHQvLyBUaGUgb3JkZXIgb2YgdGhlc2UgaXMgaW1wb3J0YW50XG5cdGlmKHRoaXMuY3VycmVudC5wcmV2aW91c1NpYmxpbmcgIT0gbnVsbCAmJiB0aGlzLmN1cnJlbnQucHJldmlvdXNTaWJsaW5nLmdldEF0dHJpYnV0ZShcImNcIikgPT0gXCJ5ZXNcIil7XG5cdCAgICAvLyBUaGUgcHJldmlvdXMgbm9kZSBpcyBhbiBmIG5vZGUgYnV0IGlzIHJlYWxseSBqdXN0IGEgY2hhcmFjdGVyLiAgRGVsZXRlIGl0LlxuXHQgICAgdGhpcy5jdXJyZW50ID0gdGhpcy5jdXJyZW50LnByZXZpb3VzU2libGluZztcblx0ICAgIHRoaXMuZGVsZXRlX2Zyb21fZigpO1xuXHR9XG5cdGVsc2UgaWYodGhpcy5jdXJyZW50LnByZXZpb3VzU2libGluZyAhPSBudWxsICYmIHRoaXMuY3VycmVudC5wcmV2aW91c1NpYmxpbmcubm9kZU5hbWUgPT0gJ2YnKXtcblx0ICAgIC8vIFdlJ3JlIGluIGFuIGUgbm9kZSBqdXN0IGFmdGVyIGFuIGYgbm9kZS4gIE1vdmUgYmFjayBpbnRvIHRoZSBmIG5vZGUgKGRlbGV0ZSBpdD8pXG5cdCAgICB0aGlzLmxlZnQoKTtcblx0ICAgIHJldHVybiBmYWxzZTtcblx0fVxuXHRlbHNlIGlmKHRoaXMuY3VycmVudC5wYXJlbnROb2RlLnByZXZpb3VzU2libGluZyAhPSBudWxsICYmIHRoaXMuY3VycmVudC5wYXJlbnROb2RlLnByZXZpb3VzU2libGluZy5ub2RlTmFtZSA9PSAnYycpe1xuXHQgICAgLy8gV2UncmUgaW4gYSBjIGNoaWxkIG9mIGFuIGYgbm9kZSwgYnV0IG5vdCB0aGUgZmlyc3Qgb25lLiAgR28gdG8gdGhlIHByZXZpb3VzIGNcblx0ICAgIGlmKHRoaXMuY3VycmVudC5wYXJlbnROb2RlLmhhc0F0dHJpYnV0ZShcImRlbGV0ZVwiKSl7XG5cdFx0dGhpcy5kZWxldGVfZnJvbV9jKCk7XG5cdCAgICB9XG5cdCAgICBlbHNle1xuXHRcdHRoaXMubGVmdCgpO1xuXHRcdHJldHVybiBmYWxzZTtcblx0ICAgIH1cblx0fVxuXHRlbHNlIGlmKHRoaXMuY3VycmVudC5wcmV2aW91c1NpYmxpbmcgPT0gbnVsbCAmJiB0aGlzLmN1cnJlbnQucGFyZW50Tm9kZS5ub2RlTmFtZSA9PSAnYycgJiYgKHRoaXMuY3VycmVudC5wYXJlbnROb2RlLnByZXZpb3VzU2libGluZyA9PSBudWxsIHx8IHRoaXMuY3VycmVudC5wYXJlbnROb2RlLnByZXZpb3VzU2libGluZy5ub2RlTmFtZSAhPSAnYycpKXtcblx0ICAgIC8vIFdlJ3JlIGluIHRoZSBmaXJzdCBjIGNoaWxkIG9mIGFuIGYgbm9kZSBhbmQgYXQgdGhlIGJlZ2lubmluZy0tZGVsZXRlIHRoZSBmIG5vZGVcblx0ICAgIGlmKHRoaXMuY3VycmVudC5wYXJlbnROb2RlLmhhc0F0dHJpYnV0ZShcImRlbGV0ZVwiKSl7XG5cdFx0dGhpcy5kZWxldGVfZnJvbV9jKCk7XG5cdCAgICB9XG5cdCAgICBlbHNle1xuXHRcdHRoaXMuY3VycmVudCA9IHRoaXMuY3VycmVudC5wYXJlbnROb2RlLnBhcmVudE5vZGU7XG5cdFx0dGhpcy5kZWxldGVfZnJvbV9mKCk7XG5cdCAgICB9XG5cdH1cblx0ZWxzZXtcblx0ICAgIC8vIFdlJ3JlIGF0IHRoZSBiZWdpbm5pbmcgKGhvcGVmdWxseSEpIFxuXHQgICAgR3VwcHkubG9nKDMsXCJBVCBCRUdJTk5JTkchXCIpO1xuXHQgICAgcmV0dXJuIGZhbHNlO1xuXHR9XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xufVxuXG5HdXBweS5wcm90b3R5cGUuZGVsZXRlX2ZvcndhcmRfZnJvbV9lID0gZnVuY3Rpb24oKXtcbiAgICAvLyByZXR1cm4gZmFsc2UgaWYgd2UgZGVsZXRlZCBzb21ldGhpbmcsIGFuZCB0cnVlIG90aGVyd2lzZS5cbiAgICBpZih0aGlzLmNhcmV0IDwgdGhpcy5jdXJyZW50LmZpcnN0Q2hpbGQubm9kZVZhbHVlLmxlbmd0aCl7XG5cdHRoaXMuY3VycmVudC5maXJzdENoaWxkLm5vZGVWYWx1ZSA9IHRoaXMuY3VycmVudC5maXJzdENoaWxkLm5vZGVWYWx1ZS5zcGxpY2VuKHRoaXMuY2FyZXQsXCJcIiwxKTtcblx0R3VwcHkubG9nKDMsXCJkZWxcIixcInxcIit0aGlzLmN1cnJlbnQuZmlyc3RDaGlsZC5ub2RlVmFsdWUrXCJ8XCIsdGhpcy5jdXJyZW50LmZpcnN0Q2hpbGQubm9kZVZhbHVlLmxlbmd0aCk7XG4gICAgfVxuICAgIGVsc2V7XG5cdC8vV2UncmUgYXQgdGhlIGVuZFxuXHRpZih0aGlzLmN1cnJlbnQubmV4dFNpYmxpbmcgIT0gbnVsbCl7XG5cdCAgICAvLyBUaGUgbmV4dCBub2RlIGlzIGFuIGYgbm9kZS4gIERlbGV0ZSBpdC5cblx0ICAgIHRoaXMuY3VycmVudCA9IHRoaXMuY3VycmVudC5uZXh0U2libGluZztcblx0ICAgIHRoaXMuZGVsZXRlX2Zyb21fZigpO1xuXHR9XG5cdGVsc2UgaWYodGhpcy5jdXJyZW50LnBhcmVudE5vZGUubm9kZU5hbWUgPT0gJ2MnKXtcblx0ICAgIC8vIFdlJ3JlIGluIGEgYyBjaGlsZCBvZiBhbiBmIG5vZGUuICBEbyBub3RoaW5nXG5cdCAgICByZXR1cm4gZmFsc2U7XG5cdH1cbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG59XG5cbkd1cHB5LnByb3RvdHlwZS5iYWNrc3BhY2UgPSBmdW5jdGlvbigpe1xuICAgIGlmKHRoaXMuc2VsX3N0YXR1cyAhPSBHdXBweS5TRUxfTk9ORSl7XG5cdHRoaXMuc2VsX2RlbGV0ZSgpO1xuXHR0aGlzLnNlbF9zdGF0dXMgPSBHdXBweS5TRUxfTk9ORTtcblx0dGhpcy5jaGVja3BvaW50KCk7XG4gICAgfVxuICAgIGVsc2UgaWYodGhpcy5kZWxldGVfZnJvbV9lKCkpe1xuXHR0aGlzLmNoZWNrcG9pbnQoKTtcbiAgICB9XG59XG5cbkd1cHB5LnByb3RvdHlwZS5kZWxldGVfa2V5ID0gZnVuY3Rpb24oKXtcbiAgICBpZih0aGlzLnNlbF9zdGF0dXMgIT0gR3VwcHkuU0VMX05PTkUpe1xuXHR0aGlzLnNlbF9kZWxldGUoKTtcblx0dGhpcy5zZWxfc3RhdHVzID0gR3VwcHkuU0VMX05PTkU7XG5cdHRoaXMuY2hlY2twb2ludCgpO1xuICAgIH1cbiAgICBlbHNlIGlmKHRoaXMuZGVsZXRlX2ZvcndhcmRfZnJvbV9lKCkpe1xuXHR0aGlzLmNoZWNrcG9pbnQoKTtcbiAgICB9XG59XG5cbkd1cHB5LnByb3RvdHlwZS5yaWdodF9wYXJlbiA9IGZ1bmN0aW9uKCl7XG4gICAgaWYodGhpcy5jdXJyZW50Lm5vZGVOYW1lID09ICdlJyAmJiB0aGlzLmNhcmV0IDwgdGhpcy5jdXJyZW50LmZpcnN0Q2hpbGQubm9kZVZhbHVlLmxlbmd0aCAtIDEpIHJldHVybjtcbiAgICBlbHNlIHRoaXMucmlnaHQoKTtcbn1cblxuR3VwcHkucHJvdG90eXBlLnVwID0gZnVuY3Rpb24oKXtcbiAgICB0aGlzLnNlbF9jbGVhcigpO1xuICAgIGlmKHRoaXMuY3VycmVudC5wYXJlbnROb2RlLmhhc0F0dHJpYnV0ZShcInVwXCIpKXtcblx0dmFyIHQgPSBwYXJzZUludCh0aGlzLmN1cnJlbnQucGFyZW50Tm9kZS5nZXRBdHRyaWJ1dGUoXCJ1cFwiKSk7XG5cdEd1cHB5LmxvZygzLFwiVFRUXCIsdCk7XG5cdHZhciBmID0gdGhpcy5jdXJyZW50LnBhcmVudE5vZGUucGFyZW50Tm9kZTtcblx0R3VwcHkubG9nKDMsZik7XG5cdHZhciBuID0gZi5maXJzdENoaWxkO1xuXHR3aGlsZShuICE9IG51bGwgJiYgdCA+IDApe1xuXHQgICAgaWYobi5ub2RlTmFtZSA9PSAnYycpIHQtLTtcblx0ICAgIGlmKHQgPiAwKSBuID0gbi5uZXh0U2libGluZztcblx0fVxuXHRHdXBweS5sb2coMyxuKTtcblx0dGhpcy5jdXJyZW50ID0gbi5sYXN0Q2hpbGQ7XG5cdHRoaXMuY2FyZXQgPSB0aGlzLmN1cnJlbnQuZmlyc3RDaGlsZC5ub2RlVmFsdWUubGVuZ3RoO1xuICAgIH1cbiAgICAvLyBlbHNle1xuICAgIC8vIFx0aWYoY3VycmVudC5wYXJlbnROb2RlLnBhcmVudE5vZGUubm9kZU5hbWUgPT0gJ2YnKXtcbiAgICAvLyBcdCAgICBjdXJyZW50ID0gY3VycmVudC5wYXJlbnROb2RlLnBhcmVudE5vZGUucHJldmlvdXNTaWJsaW5nO1xuICAgIC8vIFx0ICAgIGNhcmV0ID0gY3VycmVudC5maXJzdENoaWxkLm5vZGVWYWx1ZS5sZW5ndGg7XG4gICAgLy8gXHR9XG4gICAgLy8gfVxufVxuXG5HdXBweS5wcm90b3R5cGUuZG93biA9IGZ1bmN0aW9uKCl7XG4gICAgdGhpcy5zZWxfY2xlYXIoKTtcbiAgICBpZih0aGlzLmN1cnJlbnQucGFyZW50Tm9kZS5oYXNBdHRyaWJ1dGUoXCJkb3duXCIpKXtcblx0dmFyIHQgPSBwYXJzZUludCh0aGlzLmN1cnJlbnQucGFyZW50Tm9kZS5nZXRBdHRyaWJ1dGUoXCJkb3duXCIpKTtcblx0R3VwcHkubG9nKDMsXCJUVFRcIix0KTtcblx0dmFyIGYgPSB0aGlzLmN1cnJlbnQucGFyZW50Tm9kZS5wYXJlbnROb2RlO1xuXHRHdXBweS5sb2coMyxmKTtcblx0dmFyIG4gPSBmLmZpcnN0Q2hpbGQ7XG5cdHdoaWxlKG4gIT0gbnVsbCAmJiB0ID4gMCl7XG5cdCAgICBpZihuLm5vZGVOYW1lID09ICdjJykgdC0tO1xuXHQgICAgaWYodCA+IDApIG4gPSBuLm5leHRTaWJsaW5nO1xuXHR9XG5cdEd1cHB5LmxvZygzLG4pO1xuXHR0aGlzLmN1cnJlbnQgPSBuLmxhc3RDaGlsZDtcblx0dGhpcy5jYXJldCA9IHRoaXMuY3VycmVudC5maXJzdENoaWxkLm5vZGVWYWx1ZS5sZW5ndGg7XG4gICAgfVxufVxuXG5HdXBweS5wcm90b3R5cGUuaG9tZSA9IGZ1bmN0aW9uKCl7XG4gICAgd2hpbGUodGhpcy5jdXJyZW50LnByZXZpb3VzU2libGluZyAhPSBudWxsKVxuXHR0aGlzLmN1cnJlbnQgPSB0aGlzLmN1cnJlbnQucHJldmlvdXNTaWJsaW5nO1xuICAgIHRoaXMuY2FyZXQgPSAwO1xufVxuXG5HdXBweS5wcm90b3R5cGUuZW5kID0gZnVuY3Rpb24oKXtcbiAgICB3aGlsZSh0aGlzLmN1cnJlbnQubmV4dFNpYmxpbmcgIT0gbnVsbClcblx0dGhpcy5jdXJyZW50ID0gdGhpcy5jdXJyZW50Lm5leHRTaWJsaW5nO1xuICAgIHRoaXMuY2FyZXQgPSB0aGlzLmN1cnJlbnQuZmlyc3RDaGlsZC5ub2RlVmFsdWUubGVuZ3RoO1xufVxuXG5HdXBweS5wcm90b3R5cGUuY2hlY2twb2ludCA9IGZ1bmN0aW9uKCl7XG4gICAgdGhpcy5jdXJyZW50LnNldEF0dHJpYnV0ZShcImN1cnJlbnRcIixcInllc1wiKTtcbiAgICB0aGlzLmN1cnJlbnQuc2V0QXR0cmlidXRlKFwiY2FyZXRcIix0aGlzLmNhcmV0LnRvU3RyaW5nKCkpO1xuICAgIC8vaWYoIW92ZXJ3cml0ZSkgdGhpcy51bmRvX25vdysrO1xuICAgIHRoaXMudW5kb19ub3crKztcbiAgICB0aGlzLnVuZG9fZGF0YVt0aGlzLnVuZG9fbm93XSA9IHRoaXMuYmFzZS5jbG9uZU5vZGUodHJ1ZSk7XG4gICAgdGhpcy51bmRvX2RhdGEuc3BsaWNlKHRoaXMudW5kb19ub3crMSwgdGhpcy51bmRvX2RhdGEubGVuZ3RoKTtcbiAgICB0aGlzLmN1cnJlbnQucmVtb3ZlQXR0cmlidXRlKFwiY3VycmVudFwiKTtcbiAgICB0aGlzLmN1cnJlbnQucmVtb3ZlQXR0cmlidXRlKFwiY2FyZXRcIik7XG59XG5cbkd1cHB5LnByb3RvdHlwZS5yZXN0b3JlID0gZnVuY3Rpb24odCl7XG4gICAgR3VwcHkubG9nKDMsXCJUVFRcIix0KTtcbiAgICB0aGlzLmJhc2UgPSB0aGlzLnVuZG9fZGF0YVt0XS5jbG9uZU5vZGUodHJ1ZSk7XG4gICAgR3VwcHkubG9nKDMsKG5ldyBYTUxTZXJpYWxpemVyKCkpLnNlcmlhbGl6ZVRvU3RyaW5nKHRoaXMuYmFzZSkpO1xuICAgIHRoaXMuZmluZF9jdXJyZW50KCk7XG4gICAgdGhpcy5jdXJyZW50LnJlbW92ZUF0dHJpYnV0ZShcImN1cnJlbnRcIik7XG4gICAgdGhpcy5jdXJyZW50LnJlbW92ZUF0dHJpYnV0ZShcImNhcmV0XCIpO1xufVxuXG5HdXBweS5wcm90b3R5cGUuZmluZF9jdXJyZW50ID0gZnVuY3Rpb24oKXtcbiAgICB0aGlzLmN1cnJlbnQgPSB0aGlzLmJhc2UuZXZhbHVhdGUoXCIvLypbQGN1cnJlbnQ9J3llcyddXCIsIHRoaXMuYmFzZS5kb2N1bWVudEVsZW1lbnQsIG51bGwsIFhQYXRoUmVzdWx0LkZJUlNUX09SREVSRURfTk9ERV9UWVBFLCBudWxsKS5zaW5nbGVOb2RlVmFsdWU7XG4gICAgdGhpcy5jYXJldCA9IHBhcnNlSW50KHRoaXMuY3VycmVudC5nZXRBdHRyaWJ1dGUoXCJjYXJldFwiKSk7XG59XG5cbkd1cHB5LnByb3RvdHlwZS51bmRvID0gZnVuY3Rpb24oKXtcbiAgICBHdXBweS5sb2coMyxcIlVORE9cIik7XG4gICAgdGhpcy5wcmludF91bmRvX2RhdGEoKTtcbiAgICBpZih0aGlzLnVuZG9fbm93IDw9IDApIHJldHVybjtcbiAgICBHdXBweS5sb2coMyxcIlVORE9JTkdcIik7XG4gICAgdGhpcy51bmRvX25vdy0tO1xuICAgIHRoaXMucmVzdG9yZSh0aGlzLnVuZG9fbm93KTtcbn1cblxuR3VwcHkucHJvdG90eXBlLnJlZG8gPSBmdW5jdGlvbigpe1xuICAgIEd1cHB5LmxvZygzLFwiUkVET1wiKTtcbiAgICB0aGlzLnByaW50X3VuZG9fZGF0YSgpO1xuICAgIGlmKHRoaXMudW5kb19ub3cgPj0gdGhpcy51bmRvX2RhdGEubGVuZ3RoLTEpIHJldHVybjtcbiAgICBHdXBweS5sb2coMyxcIlJFRE9JTkdcIik7XG4gICAgdGhpcy51bmRvX25vdysrO1xuICAgIHRoaXMucmVzdG9yZSh0aGlzLnVuZG9fbm93KTtcbn1cblxuR3VwcHkucHJvdG90eXBlLnByaW50X3VuZG9fZGF0YSA9IGZ1bmN0aW9uKCl7XG4gICAgR3VwcHkubG9nKDMsXCJVTkRPIERBVEFcIik7XG4gICAgR3VwcHkubG9nKDMsdGhpcy51bmRvX25vdywgdGhpcy51bmRvX2RhdGEubGVuZ3RoKTtcbiAgICBmb3IodmFyIGkgPSAwOyBpIDwgdGhpcy51bmRvX2RhdGEubGVuZ3RoOyBpKyspe1xuXHRHdXBweS5sb2coMyxpLCAobmV3IFhNTFNlcmlhbGl6ZXIoKSkuc2VyaWFsaXplVG9TdHJpbmcodGhpcy51bmRvX2RhdGFbaV0pKTtcbiAgICB9XG59XG5cbkd1cHB5LnByb3RvdHlwZS5kb25lID0gZnVuY3Rpb24ocyl7XG4gICAgdGhpcy5kb25lX2NhbGxiYWNrKCk7XG59XG5cbkd1cHB5LnByb3RvdHlwZS5wcm9ibGVtID0gZnVuY3Rpb24ocyl7XG4gICAgR3VwcHkubG9nKDMscyk7XG4gICAgR3VwcHkubG9nKDMsJ2InLChuZXcgWE1MU2VyaWFsaXplcigpKS5zZXJpYWxpemVUb1N0cmluZyh0aGlzLmJhc2UpKTtcbiAgICBHdXBweS5sb2coMywnYycsKG5ldyBYTUxTZXJpYWxpemVyKCkpLnNlcmlhbGl6ZVRvU3RyaW5nKHRoaXMuY3VycmVudCkpO1xufVxuXG5cbkd1cHB5LmxvZ2dpbmcgPSB7fTtcbkd1cHB5LmxvZ2dpbmcuTk9ORSA9IDA7XG5HdXBweS5sb2dnaW5nLkVSUk9SID0gMTtcbkd1cHB5LmxvZ2dpbmcuV0FSTiA9IDI7XG5HdXBweS5sb2dnaW5nLklORk8gPSAzO1xuR3VwcHkubG9nZ2luZy5ERUJVRyA9IDQ7XG5cbi8vIEtleWJvYXJkIHN0dWZmXG5cbkd1cHB5LmtiID0ge307XG5cbkd1cHB5LmtiLmlzX21vdXNlX2Rvd24gPSBmYWxzZTtcblxuR3VwcHkua2IuQ0FSRVQgPSBcIlxcXFxjdXJzb3JbLTAuMmV4XXswLjdlbX1cIlxuR3VwcHkua2IuVEVNUF9TTUFMTF9DQVJFVCA9IFwiXFxcXGN1cnNvclswZW1dezAuNmVtfVwiXG5HdXBweS5rYi5URU1QX0NBUkVUID0gXCJcXFxcY3Vyc29yWy0wLjJleF17MC43ZW19XCJcbkd1cHB5LmtiLlNNQUxMX0NBUkVUID0gXCJcXFxcY3Vyc29yWy0wLjA1ZW1dezAuNWVtfVwiXG5HdXBweS5rYi5TRUxfQ0FSRVQgPSBcIlxcXFxjdXJzb3JbLTAuMmV4XXswLjdlbX1cIlxuR3VwcHkua2IuU01BTExfU0VMX0NBUkVUID0gXCJcXFxcY3Vyc29yWy0wLjA1ZW1dezAuNWVtfVwiXG5HdXBweS5rYi5TRUxfQ09MT1IgPSBcInJlZFwiXG5cbkd1cHB5LmtiLnN5bWJvbHMgPSB7fTtcblxuR3VwcHkucHJvdG90eXBlLmlzX2JsYWNrbGlzdGVkID0gZnVuY3Rpb24oc3ltYl90eXBlKXtcbiAgICBmb3IodmFyIGkgPSAwOyBpIDwgdGhpcy50eXBlX2JsYWNrbGlzdC5sZW5ndGg7IGkrKylcblx0aWYoc3ltYl90eXBlID09IHRoaXMudHlwZV9ibGFja2xpc3RbaV0pIHJldHVybiB0cnVlO1xuICAgIHJldHVybiBmYWxzZTtcbn1cblxuR3VwcHkuc3ltYl9yYXcgPSBmdW5jdGlvbihzeW1iX25hbWUsbGF0ZXhfc3ltYix0ZXh0X3N5bWIpe1xuICAgIEd1cHB5LmtiLnN5bWJvbHNbc3ltYl9uYW1lXSA9IHtcIm91dHB1dFwiOntcImxhdGV4XCI6W2xhdGV4X3N5bWJdLFxuXHRcdFx0XHRcdCAgICAgXCJ0ZXh0XCI6W3RleHRfc3ltYl19LFxuXHRcdFx0XHQgICBcImNoYXJcIjp0cnVlLFxuXHRcdFx0XHQgICBcInR5cGVcIjpzeW1iX25hbWV9O1xufVxuXG5HdXBweS5zeW1iX2Z1bmMgPSBmdW5jdGlvbihmdW5jX25hbWUpe1xuICAgIEd1cHB5LmtiLnN5bWJvbHNbZnVuY19uYW1lXSA9IHtcIm91dHB1dFwiOntcImxhdGV4XCI6XCJcXFxcXCIrZnVuY19uYW1lK1wiXFxcXGxlZnQoeyQxfVxcXFxyaWdodClcIixcblx0XHRcdFx0XHQgICAgIFwidGV4dFwiOmZ1bmNfbmFtZStcIih7JDF9KVwifSxcblx0XHRcdFx0ICAgXCJ0eXBlXCI6ZnVuY19uYW1lLFxuXHRcdFx0XHQgICBcImF0dHJzXCI6e1xuXHRcdFx0XHQgICAgICAgXCJkZWxldGVcIjpbMV1cblx0XHRcdFx0ICAgfVxuXHRcdFx0XHQgIH07XG59XG5cbkd1cHB5LnByb3RvdHlwZS5jaGVja19mb3Jfc3ltYm9sID0gZnVuY3Rpb24oKXtcbiAgICB2YXIgaW5zdGFuY2UgPSB0aGlzO1xuICAgIGZvcih2YXIgcyBpbiBHdXBweS5rYi5zeW1ib2xzKXtcblx0Ly8gR3VwcHkubG9nKDMsY3VycmVudCk7XG5cdGlmKGluc3RhbmNlLmN1cnJlbnQubm9kZU5hbWUgPT0gJ2UnICYmICEoR3VwcHkuaXNfYmxhbmsoaW5zdGFuY2UuY3VycmVudCkpICYmIGluc3RhbmNlLmN1cnJlbnQuZmlyc3RDaGlsZC5ub2RlVmFsdWUuc2VhcmNoX2F0KGluc3RhbmNlLmNhcmV0LHMpKXtcblx0ICAgIC8vR3VwcHkubG9nKDMsXCJJTlNFUlRJT04gT0YgXCIscyk7XG5cdCAgICAvL0d1cHB5LmxvZygzLGN1cnJlbnQubm9kZVZhbHVlKTtcblx0ICAgIHZhciB0ZW1wID0gaW5zdGFuY2UuY3VycmVudC5maXJzdENoaWxkLm5vZGVWYWx1ZTtcblx0ICAgIHZhciB0ZW1wX2NhcmV0ID0gaW5zdGFuY2UuY2FyZXQ7XG5cdCAgICBpbnN0YW5jZS5jdXJyZW50LmZpcnN0Q2hpbGQubm9kZVZhbHVlID0gaW5zdGFuY2UuY3VycmVudC5maXJzdENoaWxkLm5vZGVWYWx1ZS5zbGljZSgwLGluc3RhbmNlLmNhcmV0LXMubGVuZ3RoKStpbnN0YW5jZS5jdXJyZW50LmZpcnN0Q2hpbGQubm9kZVZhbHVlLnNsaWNlKGluc3RhbmNlLmNhcmV0KTtcblx0ICAgIC8vR3VwcHkubG9nKDMsY3VycmVudC5ub2RlVmFsdWUpO1xuXHQgICAgaW5zdGFuY2UuY2FyZXQgLT0gcy5sZW5ndGg7XG5cdCAgICB2YXIgc3VjY2VzcyA9IGluc3RhbmNlLmluc2VydF9zeW1ib2wocyk7XG5cdCAgICBpZighc3VjY2Vzcyl7XG5cdFx0aW5zdGFuY2UuY3VycmVudC5maXJzdENoaWxkLm5vZGVWYWx1ZSA9IHRlbXA7XG5cdFx0aW5zdGFuY2UuY2FyZXQgPSB0ZW1wX2NhcmV0O1xuXHQgICAgfVxuXHQgICAgYnJlYWs7XG5cdH1cbiAgICB9XG59XG5cbi8qIGtleWJvYXJkIGJlaGF2aW91ciBkZWZpbml0aW9ucyAqL1xuXG4vLyBrZXlzIGFzaWRlIGZyb20gMC05LGEteixBLVpcbkd1cHB5LmtiLmtfY2hhcnMgPSB7XG4gICAgXCI9XCI6XCI9XCIsXG4gICAgXCIrXCI6XCIrXCIsXG4gICAgXCItXCI6XCItXCIsXG4gICAgXCIqXCI6XCIqXCIsXG4gICAgXCIuXCI6XCIuXCIsXG4gICAgXCIsXCI6XCIsXCIsXG4gICAgXCJzaGlmdCsvXCI6XCIvXCIsXG4gICAgXCJzaGlmdCs9XCI6XCIrXCIsXG4gICAgXCJzaGlmdCsxXCI6XCIhXCJcbn07XG5HdXBweS5rYi5rX3N5bXMgPSB7XG4gICAgXCIvXCI6XCJzbGFzaFwiLFxuICAgIFwic2hpZnQrNlwiOlwiZXhwXCIsXG4gICAgXCJzaGlmdCs4XCI6XCIqXCIsXG4gICAgXCJzaGlmdCs5XCI6XCJwYXJlblwiLFxuICAgIFwic2hpZnQrLFwiOlwiYW5nbGVcIixcbiAgICBcInNoaWZ0Ky1cIjpcInN1YlwiLFxuICAgIFwic2hpZnQrXFxcXFwiOlwiYWJzXCIsXG4gICAgXCJzaGlmdCt1cFwiOlwiZXhwXCIsXG4gICAgXCJzaGlmdCtkb3duXCI6XCJzdWJcIlxufTtcbkd1cHB5LmtiLmtfY29udHJvbHMgPSB7XG4gICAgXCJ1cFwiOlwidXBcIixcbiAgICBcImRvd25cIjpcImRvd25cIixcbiAgICBcInJpZ2h0XCI6XCJyaWdodFwiLFxuICAgIFwic3BhY2VcIjpcInJpZ2h0XCIsXG4gICAgXCJsZWZ0XCI6XCJsZWZ0XCIsXG4gICAgXCJob21lXCI6XCJob21lXCIsXG4gICAgXCJlbmRcIjpcImVuZFwiLFxuICAgIFwiYmFja3NwYWNlXCI6XCJiYWNrc3BhY2VcIixcbiAgICBcImRlbFwiOlwiZGVsZXRlX2tleVwiLFxuICAgIFwibW9kK2NcIjpcInNlbF9jb3B5XCIsXG4gICAgXCJtb2QreFwiOlwic2VsX2N1dFwiLFxuICAgIFwibW9kK3ZcIjpcInNlbF9wYXN0ZVwiLFxuICAgIFwibW9kK3pcIjpcInVuZG9cIixcbiAgICBcIm1vZCt5XCI6XCJyZWRvXCIsXG4gICAgXCJlbnRlclwiOlwiZG9uZVwiLFxuICAgIFwic2hpZnQrbGVmdFwiOlwic2VsX2xlZnRcIixcbiAgICBcInNoaWZ0K3JpZ2h0XCI6XCJzZWxfcmlnaHRcIixcbiAgICBcInNoaWZ0KzBcIjpcInJpZ2h0X3BhcmVuXCJcbn07XG5cbi8vIGxldHRlcnNcblxuZm9yKHZhciBpID0gNjU7IGkgPD0gOTA7IGkrKyl7XG4gICAgR3VwcHkua2Iua19jaGFyc1tTdHJpbmcuZnJvbUNoYXJDb2RlKGkpLnRvTG93ZXJDYXNlKCldID0gU3RyaW5nLmZyb21DaGFyQ29kZShpKS50b0xvd2VyQ2FzZSgpO1xuICAgIEd1cHB5LmtiLmtfY2hhcnNbJ3NoaWZ0KycrU3RyaW5nLmZyb21DaGFyQ29kZShpKS50b0xvd2VyQ2FzZSgpXSA9IFN0cmluZy5mcm9tQ2hhckNvZGUoaSkudG9VcHBlckNhc2UoKTtcbn1cblxuLy8gbnVtYmVyc1xuXG5mb3IodmFyIGkgPSA0ODsgaSA8PSA1NzsgaSsrKVxuICAgIEd1cHB5LmtiLmtfY2hhcnNbU3RyaW5nLmZyb21DaGFyQ29kZShpKV0gPSBTdHJpbmcuZnJvbUNoYXJDb2RlKGkpO1xuXG5HdXBweS5yZWdpc3Rlcl9rZXlib2FyZF9oYW5kbGVycyA9IGZ1bmN0aW9uKCl7XG4gICAgTW91c2V0cmFwLmFkZEtleWNvZGVzKHsxNzM6ICctJ30pOyAvLyBGaXJlZm94J3Mgc3BlY2lhbCBtaW51cyAobmVlZGVkIGZvciBfID0gc3ViIGJpbmRpbmcpXG4gICAgZm9yKHZhciBpIGluIEd1cHB5LmtiLmtfY2hhcnMpXG4gICAgXHRNb3VzZXRyYXAuYmluZChpLGZ1bmN0aW9uKGkpeyByZXR1cm4gZnVuY3Rpb24oKXtcblx0ICAgIGlmKCFHdXBweS5hY3RpdmVfZ3VwcHkpIHJldHVybiB0cnVlO1xuXHQgICAgR3VwcHkuYWN0aXZlX2d1cHB5LnRlbXBfY3Vyc29yLm5vZGUgPSBudWxsO1xuXHQgICAgR3VwcHkuYWN0aXZlX2d1cHB5Lmluc2VydF9zdHJpbmcoR3VwcHkua2Iua19jaGFyc1tpXSk7XG5cdCAgICAvL0d1cHB5LmFjdGl2ZV9ndXBweS5yZW5kZXIodHJ1ZSk7XG5cdCAgICByZXR1cm4gZmFsc2U7XG5cdH19KGkpKTsgIFxuICAgIGZvcih2YXIgaSBpbiBHdXBweS5rYi5rX3N5bXMpXG4gICAgXHRNb3VzZXRyYXAuYmluZChpLGZ1bmN0aW9uKGkpeyByZXR1cm4gZnVuY3Rpb24oKXtcblx0ICAgIGlmKCFHdXBweS5hY3RpdmVfZ3VwcHkpIHJldHVybiB0cnVlO1xuXHQgICAgR3VwcHkuYWN0aXZlX2d1cHB5LnRlbXBfY3Vyc29yLm5vZGUgPSBudWxsO1xuXHQgICAgR3VwcHkuYWN0aXZlX2d1cHB5Lmluc2VydF9zeW1ib2woR3VwcHkua2Iua19zeW1zW2ldKTtcblx0ICAgIC8vR3VwcHkuYWN0aXZlX2d1cHB5LnJlbmRlcih0cnVlKTtcblx0ICAgIHJldHVybiBmYWxzZTtcblx0fX0oaSkpO1xuICAgIGZvcih2YXIgaSBpbiBHdXBweS5rYi5rX2NvbnRyb2xzKVxuICAgIFx0TW91c2V0cmFwLmJpbmQoaSxmdW5jdGlvbihpKXsgcmV0dXJuIGZ1bmN0aW9uKCl7XG5cdCAgICBpZighR3VwcHkuYWN0aXZlX2d1cHB5KSByZXR1cm4gdHJ1ZTtcblx0ICAgIEd1cHB5LmFjdGl2ZV9ndXBweVtHdXBweS5rYi5rX2NvbnRyb2xzW2ldXSgpO1xuXHQgICAgR3VwcHkuYWN0aXZlX2d1cHB5LnRlbXBfY3Vyc29yLm5vZGUgPSBudWxsO1xuXHQgICAgR3VwcHkuYWN0aXZlX2d1cHB5LnJlbmRlcihbXCJ1cFwiLFwiZG93blwiLFwicmlnaHRcIixcImxlZnRcIixcImhvbWVcIixcImVuZFwiLFwic2VsX2xlZnRcIixcInNlbF9yaWdodFwiXS5pbmRleE9mKGkpIDwgMCk7XG5cdCAgICByZXR1cm4gZmFsc2U7XG5cdH19KGkpKTtcbiAgICBcbn1cblxuR3VwcHkubG9nID0gZnVuY3Rpb24oKXtcbiAgICBpZighKEd1cHB5LmFjdGl2ZV9ndXBweSkgfHwgR3VwcHkuYWN0aXZlX2d1cHB5LmRlYnVnID09IEd1cHB5LmxvZ2dpbmcuTk9ORSB8fCBHdXBweS5hY3RpdmVfZ3VwcHkuZGVidWcgPCBhcmd1bWVudHNbMF0pIHJldHVybjtcbiAgICB2YXIgcyA9IFwiXCI7XG4gICAgZm9yKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKyl7XG5cdGNvbnNvbGUubG9nKGFyZ3VtZW50c1tpXSk7XG4gICAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IEd1cHB5O1xuIl19
